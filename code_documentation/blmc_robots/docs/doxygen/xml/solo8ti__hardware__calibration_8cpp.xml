<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="solo8ti__hardware__calibration_8cpp" kind="file" language="C++">
    <compoundname>solo8ti_hardware_calibration.cpp</compoundname>
    <includes refid="common__programs__header_8hpp" local="yes">blmc_robots/common_programs_header.hpp</includes>
    <includes refid="solo8ti_8hpp" local="yes">blmc_robots/solo8ti.hpp</includes>
    <incdepgraph>
      <node id="762">
        <label>atomic</label>
      </node>
      <node id="766">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="756">
        <label>src/programs/solo8ti_hardware_calibration.cpp</label>
        <link refid="solo8ti__hardware__calibration_8cpp"/>
        <childnode refid="757" relation="include">
        </childnode>
        <childnode refid="769" relation="include">
        </childnode>
      </node>
      <node id="765">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="774">
        <label>stdexcept</label>
      </node>
      <node id="760">
        <label>Eigen/Eigen</label>
      </node>
      <node id="770">
        <label>blmc_robots/blmc_joint_module.hpp</label>
        <link refid="blmc__joint__module_8hpp"/>
        <childnode refid="771" relation="include">
        </childnode>
        <childnode refid="760" relation="include">
        </childnode>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="773" relation="include">
        </childnode>
        <childnode refid="774" relation="include">
        </childnode>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
        <childnode refid="775" relation="include">
        </childnode>
      </node>
      <node id="764">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="763">
        <label>real_time_tools/iostream.hpp</label>
      </node>
      <node id="777">
        <label>vector</label>
      </node>
      <node id="761">
        <label>signal.h</label>
      </node>
      <node id="758">
        <label>blmc_robots/common_header.hpp</label>
        <link refid="common__header_8hpp"/>
        <childnode refid="759" relation="include">
        </childnode>
        <childnode refid="760" relation="include">
        </childnode>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="763" relation="include">
        </childnode>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="766" relation="include">
        </childnode>
        <childnode refid="767" relation="include">
        </childnode>
        <childnode refid="768" relation="include">
        </childnode>
      </node>
      <node id="772">
        <label>array</label>
      </node>
      <node id="757">
        <label>blmc_robots/common_programs_header.hpp</label>
        <link refid="common__programs__header_8hpp_source"/>
        <childnode refid="758" relation="include">
        </childnode>
      </node>
      <node id="759">
        <label>yaml_cpp_catkin/yaml_cpp_fwd.hpp</label>
      </node>
      <node id="771">
        <label>math.h</label>
      </node>
      <node id="776">
        <label>blmc_robots/mathematics/polynome.hxx</label>
        <link refid="polynome_8hxx_source"/>
        <childnode refid="773" relation="include">
        </childnode>
        <childnode refid="777" relation="include">
        </childnode>
        <childnode refid="775" relation="include">
        </childnode>
      </node>
      <node id="773">
        <label>iostream</label>
      </node>
      <node id="775">
        <label>blmc_robots/mathematics/polynome.hpp</label>
        <link refid="polynome_8hpp"/>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="776" relation="include">
        </childnode>
      </node>
      <node id="767">
        <label>blmc_drivers/devices/analog_sensor.hpp</label>
      </node>
      <node id="768">
        <label>blmc_drivers/devices/motor.hpp</label>
      </node>
      <node id="769">
        <label>blmc_robots/solo8ti.hpp</label>
        <link refid="solo8ti_8hpp_source"/>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
      </node>
      <node id="778">
        <label>blmc_robots/slider.hpp</label>
        <link refid="slider_8hpp"/>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
        <childnode refid="760" relation="include">
        </childnode>
        <childnode refid="767" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="solo8ti__hardware__calibration_8cpp_1a39957cbbba118d0d10bbc093b6b1ff5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>THREAD_FUNCTION_RETURN_TYPE</type>
        <definition>static THREAD_FUNCTION_RETURN_TYPE control_loop</definition>
        <argsstring>(void *robot_void_ptr)</argsstring>
        <name>control_loop</name>
        <param>
          <type>void *</type>
          <declname>robot_void_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/programs/solo8ti_hardware_calibration.cpp" line="15" column="1" bodyfile="src/programs/solo8ti_hardware_calibration.cpp" bodystart="15" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="solo8ti__hardware__calibration_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/programs/solo8ti_hardware_calibration.cpp" line="38" column="1" bodyfile="src/programs/solo8ti_hardware_calibration.cpp" bodystart="38" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&quot;blmc_robots/common_programs_header.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;blmc_robots/solo8ti.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceblmc__robots" kindref="compound">blmc_robots</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>THREAD_FUNCTION_RETURN_TYPE<sp/>control_loop(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>robot_void_ptr)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Solo8TI" kindref="compound">Solo8TI</ref>&amp;<sp/>robot<sp/>=<sp/>*(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classblmc__robots_1_1Solo8TI" kindref="compound">Solo8TI</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(robot_void_ptr));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">blmc_robots::Vector8d</ref><sp/>joint_index_to_zero;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>joint_index_to_zero.fill(0.0);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>robot.<ref refid="classblmc__robots_1_1Solo8TI_1a8ff4ec509f904ab3fab7268c75065c1f" kindref="member">calibrate</ref>(joint_index_to_zero);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!CTRL_C_DETECTED)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>%<sp/>200<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.<ref refid="classblmc__robots_1_1Solo8TI_1a9241d0a805efd871a56d7cace099c208" kindref="member">acquire_sensors</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_vector(</highlight><highlight class="stringliteral">&quot;Joint<sp/>Positions&quot;</highlight><highlight class="normal">,<sp/>robot.<ref refid="classblmc__robots_1_1Solo8TI_1ac9165114408f88accbaa151b797ed1b6" kindref="member">get_joint_positions</ref>());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real_time_tools::Timer::sleep_sec(0.001);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>THREAD_FUNCTION_RETURN_VALUE;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>control_loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>enable_ctrl_c();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>number<sp/>of<sp/>argument:<sp/>`./solo8ti_hardware_calibration`.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>real_time_tools::RealTimeThread<sp/>thread;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Solo8TI" kindref="compound">Solo8TI</ref><sp/>robot;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>robot.<ref refid="classblmc__robots_1_1Solo8TI_1adf9f5ed10293942b1ce06d0d0116f61c" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;controller<sp/>is<sp/>set<sp/>up<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Press<sp/>enter<sp/>to<sp/>launch<sp/>the<sp/>calibration<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[256];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin.get(str,<sp/>256);<sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>c-string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>thread.create_realtime_thread(&amp;control_loop,<sp/>&amp;robot);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>the<sp/>application<sp/>is<sp/>killed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>thread.join();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Exit<sp/>cleanly<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/programs/solo8ti_hardware_calibration.cpp"/>
  </compounddef>
</doxygen>
