<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classblmc__robots_1_1Solo8" kind="class" language="C++" prot="public">
    <compoundname>blmc_robots::Solo8</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1ad2a475dd31443243c1683c2fb091418e" prot="private" static="no" mutable="no">
        <type><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref></type>
        <definition>Vector8d blmc_robots::Solo8::motor_inertias_</definition>
        <argsstring></argsstring>
        <name>motor_inertias_</name>
        <briefdescription>
<para>Motor data. </para>        </briefdescription>
        <detaileddescription>
<para>Joint propertiesmotors inertia. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="236" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a21293b97b37bcd42b3e3766a72fabf26" prot="private" static="no" mutable="no">
        <type><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref></type>
        <definition>Vector8d blmc_robots::Solo8::motor_torque_constants_</definition>
        <argsstring></argsstring>
        <name>motor_torque_constants_</name>
        <briefdescription>
<para>DCM motor torque constants. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="237" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a09ab41c9822e1f1c853d0b9065205d2d" prot="private" static="no" mutable="no">
        <type><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref></type>
        <definition>Vector8d blmc_robots::Solo8::joint_gear_ratios_</definition>
        <argsstring></argsstring>
        <name>joint_gear_ratios_</name>
        <briefdescription>
<para>joint gear ratios (9). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="238" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1af9b0800cd9ef22713767298ef850eddf" prot="private" static="no" mutable="no">
        <type><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref></type>
        <definition>Vector8d blmc_robots::Solo8::motor_max_current_</definition>
        <argsstring></argsstring>
        <name>motor_max_current_</name>
        <briefdescription>
<para>Max appliable current before the robot shutdown. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="239" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a31f29f1bf604552b2ae5d017e5f3e2d1" prot="private" static="no" mutable="no">
        <type><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref></type>
        <definition>Vector8d blmc_robots::Solo8::joint_zero_positions_</definition>
        <argsstring></argsstring>
        <name>joint_zero_positions_</name>
        <briefdescription>
<para>Offset to the theoretical &quot;0&quot; pose. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="241" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a053f46bebf56986d976e34c0c47956c9" prot="private" static="no" mutable="no">
        <type>Eigen::Array&lt; double, 8, 1 &gt;</type>
        <definition>Eigen::Array&lt;double, 8, 1&gt; blmc_robots::Solo8::max_joint_torques_</definition>
        <argsstring></argsstring>
        <name>max_joint_torques_</name>
        <briefdescription>
<para>Max joint torques (Nm) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="243" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a8966f925be4af6937b4544cb5dbc8eab" prot="private" static="no" mutable="no">
        <type>std::array&lt; bool, 8 &gt;</type>
        <definition>std::array&lt;bool, 8&gt; blmc_robots::Solo8::motor_enabled_</definition>
        <argsstring></argsstring>
        <name>motor_enabled_</name>
        <briefdescription>
<para>Hardware status. </para>        </briefdescription>
        <detaileddescription>
<para>This gives the status (enabled/disabled) of each motors using the joint ordering convention. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="255" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a01868736d0656e8dd029b69297661b48" prot="private" static="no" mutable="no">
        <type>std::array&lt; bool, 8 &gt;</type>
        <definition>std::array&lt;bool, 8&gt; blmc_robots::Solo8::motor_ready_</definition>
        <argsstring></argsstring>
        <name>motor_ready_</name>
        <briefdescription>
<para>This gives the status (enabled/disabled) of each motors using the joint ordering convention. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="261" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1adfe55489326f302577d3d851e098bbaf" prot="private" static="no" mutable="no">
        <type>std::array&lt; bool, 4 &gt;</type>
        <definition>std::array&lt;bool, 4&gt; blmc_robots::Solo8::motor_board_enabled_</definition>
        <argsstring></argsstring>
        <name>motor_board_enabled_</name>
        <briefdescription>
<para>This gives the status (enabled/disabled of the onboard control cards). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="267" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1af8f47463c79497bfa978ac90249ea144" prot="private" static="no" mutable="no">
        <type>std::array&lt; int, 4 &gt;</type>
        <definition>std::array&lt;int, 4&gt; blmc_robots::Solo8::motor_board_errors_</definition>
        <argsstring></argsstring>
        <name>motor_board_errors_</name>
        <briefdescription>
<para>This gives the status (enabled/disabled of the onboard control cards). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="273" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a2a731cc04e539d6fde3c3e5cd6922a42" prot="private" static="no" mutable="no">
        <type><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref></type>
        <definition>Vector8d blmc_robots::Solo8::joint_positions_</definition>
        <argsstring></argsstring>
        <name>joint_positions_</name>
        <briefdescription>
<para>Joint data. </para>        </briefdescription>
        <detaileddescription>
<para>joint_positions_ </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="282" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a4642f07d901c644a5ecacc8cd65b3c4e" prot="private" static="no" mutable="no">
        <type><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref></type>
        <definition>Vector8d blmc_robots::Solo8::joint_velocities_</definition>
        <argsstring></argsstring>
        <name>joint_velocities_</name>
        <briefdescription>
<para>joint_velocities_ </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="286" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a75ef5d44774e506d90b27ea73e2ae861" prot="private" static="no" mutable="no">
        <type><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref></type>
        <definition>Vector8d blmc_robots::Solo8::joint_torques_</definition>
        <argsstring></argsstring>
        <name>joint_torques_</name>
        <briefdescription>
<para>joint_torques_ </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="290" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a11ca0b9a39f810e5bc206adaf43350bb" prot="private" static="no" mutable="no">
        <type><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref></type>
        <definition>Vector8d blmc_robots::Solo8::joint_target_torques_</definition>
        <argsstring></argsstring>
        <name>joint_target_torques_</name>
        <briefdescription>
<para>joint_target_torques_ </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="294" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a2003b6aa7b0e8824a190c65de42550a2" prot="private" static="no" mutable="no">
        <type><ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref></type>
        <definition>Vector8d blmc_robots::Solo8::joint_encoder_index_</definition>
        <argsstring></argsstring>
        <name>joint_encoder_index_</name>
        <briefdescription>
<para>joint_encoder_index_ </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="298" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1af9d34a00b42e425515d1d7571c59ddca" prot="private" static="no" mutable="no">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d blmc_robots::Solo8::slider_positions_</definition>
        <argsstring></argsstring>
        <name>slider_positions_</name>
        <briefdescription>
<para>Additional data. </para>        </briefdescription>
        <detaileddescription>
<para>slider_positions_ is the position of the linear potentiometer. Can be used as a joystick input. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="308" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a1593f4a8fbba53c407a4e0434ebe785c" prot="private" static="no" mutable="no">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d blmc_robots::Solo8::contact_sensors_states_</definition>
        <argsstring></argsstring>
        <name>contact_sensors_states_</name>
        <briefdescription>
<para>contact_sensors_ is contact sensors at each feet of teh quadruped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="313" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a5d04c4cdbd954dc2a76c08989ccf0040" prot="private" static="no" mutable="no">
        <type>std::array&lt; int, 8 &gt;</type>
        <definition>std::array&lt;int, 8&gt; blmc_robots::Solo8::map_joint_id_to_motor_board_id_</definition>
        <argsstring></argsstring>
        <name>map_joint_id_to_motor_board_id_</name>
        <briefdescription>
<para>Map the joint id to the motor board id,. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classblmc__robots_1_1Solo8" kindref="compound">Solo8</ref> description. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="317" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a6c1a5948cf6d2ec18d619753d51b8546" prot="private" static="no" mutable="no">
        <type>std::array&lt; int, 8 &gt;</type>
        <definition>std::array&lt;int, 8&gt; blmc_robots::Solo8::map_joint_id_to_motor_port_id_</definition>
        <argsstring></argsstring>
        <name>map_joint_id_to_motor_port_id_</name>
        <briefdescription>
<para>Map the joint id to the motor port id,. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classblmc__robots_1_1Solo8" kindref="compound">Solo8</ref> description. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="320" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a7beb3d9ca8cc39e832fb5515bd2e71c5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; MasterBoardInterface &gt;</type>
        <definition>std::shared_ptr&lt;MasterBoardInterface&gt; blmc_robots::Solo8::main_board_ptr_</definition>
        <argsstring></argsstring>
        <name>main_board_ptr_</name>
        <briefdescription>
<para>Drivers communication objects. </para>        </briefdescription>
        <detaileddescription>
<para>Main board drivers.</para><para>PC &lt;- Ethernet/Wifi -&gt; main board &lt;- SPI -&gt; Motor Board </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="331" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1ac01d9597b2e0446e29c249f74c6ffc8f" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; blmc_drivers::SerialReader &gt;</type>
        <definition>std::shared_ptr&lt;blmc_drivers::SerialReader&gt; blmc_robots::Solo8::serial_reader_</definition>
        <argsstring></argsstring>
        <name>serial_reader_</name>
        <briefdescription>
<para>Reader for serial port to read arduino slider values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="336" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1ae8717ecb7e21391ef5f54d67e0e46b5d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; blmc_robots::Solo8::slider_positions_vector_</definition>
        <argsstring></argsstring>
        <name>slider_positions_vector_</name>
        <briefdescription>
<para>For reading the raw slider values from the serial port. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="341" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1aaca553f0634f406d2e41a0499dedd73a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classblmc__robots_1_1SpiJointModules" kindref="compound">blmc_robots::SpiJointModules</ref>&lt; 8 &gt; &gt;</type>
        <definition>std::shared_ptr&lt;blmc_robots::SpiJointModules&lt;8&gt; &gt; blmc_robots::Solo8::joints_</definition>
        <argsstring></argsstring>
        <name>joints_</name>
        <briefdescription>
<para>joint_modules_ Used to communicate to the master board motor drivers and motors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="347" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a4d0b9f094d69f0acbdcbc7728df6ecd4" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="common__header_8hpp_1ae1a0f9992bc8fbbc1943d887f517c180" kindref="member">MotorInterface_ptr</ref>, 8 &gt;</type>
        <definition>std::array&lt;MotorInterface_ptr, 8&gt; blmc_robots::Solo8::motors_</definition>
        <argsstring></argsstring>
        <name>motors_</name>
        <briefdescription>
<para>motors_ are the objects allowing us to send motor commands and receive data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="353" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1af8e3d6a86608540f39bf1de1f052266a" prot="private" static="no" mutable="no">
        <type>std::array&lt; bool, 8 &gt;</type>
        <definition>std::array&lt;bool, 8&gt; blmc_robots::Solo8::reverse_polarities_</definition>
        <argsstring></argsstring>
        <name>reverse_polarities_</name>
        <briefdescription>
<para>Address the rotation direction of the motor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="358" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a4f372b7f79a81142a4e99e1ae6da44a2" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="common__header_8hpp_1a4cb9a95e8b2c0bf237ce29f5252c7b73" kindref="member">Slider_ptr</ref>, 4 &gt;</type>
        <definition>std::array&lt;Slider_ptr, 4&gt; blmc_robots::Solo8::sliders_</definition>
        <argsstring></argsstring>
        <name>sliders_</name>
        <briefdescription>
<para>sliders_ these are analogue input from linear potentiometers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="363" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a67076041a87ea12b1a22d7f1759c759e" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="common__header_8hpp_1ac78fe5c68e56a3b884117109959e4d58" kindref="member">ContactSensor_ptr</ref>, 4 &gt;</type>
        <definition>std::array&lt;ContactSensor_ptr, 4&gt; blmc_robots::Solo8::contact_sensors_</definition>
        <argsstring></argsstring>
        <name>contact_sensors_</name>
        <briefdescription>
<para>contact_sensors_ is the contact sensors at each foot tips. </para>        </briefdescription>
        <detaileddescription>
<para>They also are analogue inputs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="369" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1a25153421bca095a344408e055f3794b6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool blmc_robots::Solo8::active_estop_</definition>
        <argsstring></argsstring>
        <name>active_estop_</name>
        <briefdescription>
<para>If the physical estop is pressed or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="372" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classblmc__robots_1_1Solo8_1addc990242a0e96c40edc629883541be7" prot="private" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double blmc_robots::Solo8::max_joint_torque_security_margin_</definition>
        <argsstring></argsstring>
        <name>max_joint_torque_security_margin_</name>
        <initializer>= 0.99</initializer>
        <briefdescription>
<para>Security margin on the saturation of the control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="245" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1ab37c2e406f12685fcb4e09086ee7c0c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>blmc_robots::Solo8::Solo8</definition>
        <argsstring>()</argsstring>
        <name>Solo8</name>
        <briefdescription>
<para><ref refid="classblmc__robots_1_1Solo8" kindref="compound">Solo8</ref> is the constructor of the class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Hardware properties</para><para>Hardware status</para><para>Joint data</para><para>Additional data</para><para>Setup some known data</para>        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="24" column="1" bodyfile="src/solo8.cpp" bodystart="9" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1a7016486ea321d63f2659b5efba4dd78a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void blmc_robots::Solo8::initialize</definition>
        <argsstring>(const std::string &amp;network_id)</argsstring>
        <name>initialize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>network_id</declname>
        </param>
        <briefdescription>
<para>initialize the robot by setting aligning the motors and calibrate the sensors to 0 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="30" column="1" bodyfile="src/solo8.cpp" bodystart="63" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1aa743eac2996bd33c86e23bd2029c3a01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void blmc_robots::Solo8::send_target_joint_torque</definition>
        <argsstring>(const Eigen::Ref&lt; Vector8d &gt; target_joint_torque)</argsstring>
        <name>send_target_joint_torque</name>
        <param>
          <type>const Eigen::Ref&lt; <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &gt;</type>
          <declname>target_joint_torque</declname>
        </param>
        <briefdescription>
<para>send_target_torques sends the target currents to the motors </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="35" column="1" bodyfile="src/solo8.cpp" bodystart="160" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1a2ba66edbb1dc4b9fddb9e9978f0fd9e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void blmc_robots::Solo8::acquire_sensors</definition>
        <argsstring>()</argsstring>
        <name>acquire_sensors</name>
        <briefdescription>
<para>acquire_sensors acquire all available sensors, WARNING !!!! this method has to be called prior to any getter to have up to date data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Joint data</para><para>Additional data</para><para>The different status.</para>        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="42" column="1" bodyfile="src/solo8.cpp" bodystart="105" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1adb4de0ff0c5cc2159a1e3b2f32955198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool blmc_robots::Solo8::calibrate</definition>
        <argsstring>(const Vector8d &amp;home_offset_rad)</argsstring>
        <name>calibrate</name>
        <param>
          <type>const <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &amp;</type>
          <declname>home_offset_rad</declname>
        </param>
        <briefdescription>
<para>Calibrate the joints by moving to the next joint index position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>home_offset_rad</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the angle between the index and the zero pose. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para></simplesect>
<simplesect kind="return"><para>false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>: Implement calibration procedure. </para>        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="52" column="1" bodyfile="src/solo8.cpp" bodystart="178" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1a61a01cd1309a28be108deb07eb4d2f3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &gt;</type>
        <definition>const Eigen::Ref&lt;Vector8d&gt; blmc_robots::Solo8::get_motor_inertias</definition>
        <argsstring>()</argsstring>
        <name>get_motor_inertias</name>
        <briefdescription>
<para>Joint properties. </para>        </briefdescription>
        <detaileddescription>
<para>get_motor_inertias <simplesect kind="return"><para>the motor inertias </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="62" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1acdc75776948c56c153ef59ed0bdf8222" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &gt;</type>
        <definition>const Eigen::Ref&lt;Vector8d&gt; blmc_robots::Solo8::get_motor_torque_constants</definition>
        <argsstring>()</argsstring>
        <name>get_motor_torque_constants</name>
        <briefdescription>
<para>get_motor_torque_constants </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the torque constants of each motor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="71" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1a1fc849d9d2dfd936fa00147e184b8e5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &gt;</type>
        <definition>const Eigen::Ref&lt;Vector8d&gt; blmc_robots::Solo8::get_joint_gear_ratios</definition>
        <argsstring>()</argsstring>
        <name>get_joint_gear_ratios</name>
        <briefdescription>
<para>get_joint_gear_ratios </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the joint gear ratios </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="80" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1a8c956e9a0a891992fa593b932a385095" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &gt;</type>
        <definition>const Eigen::Ref&lt;Vector8d&gt; blmc_robots::Solo8::get_motor_max_current</definition>
        <argsstring>()</argsstring>
        <name>get_motor_max_current</name>
        <briefdescription>
<para>get_max_torque </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the max torque that has been hardcoded in the constructor of this class. TODO: parametrize this via yaml or something else. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="90" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1ab067a976ebce2882b84e2d115832839d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &gt;</type>
        <definition>const Eigen::Ref&lt;Vector8d&gt; blmc_robots::Solo8::get_joint_positions</definition>
        <argsstring>()</argsstring>
        <name>get_joint_positions</name>
        <briefdescription>
<para>Sensor Data. </para>        </briefdescription>
        <detaileddescription>
<para>get_joint_positions <simplesect kind="return"><para>the joint angle of each module WARNING !!!! The method &lt;acquire_sensors&gt;&quot;()&quot; has to be called prior to any getter to have up to date data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="106" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1a2e27aa306a9f2a1812274156314eed9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &gt;</type>
        <definition>const Eigen::Ref&lt;Vector8d&gt; blmc_robots::Solo8::get_joint_velocities</definition>
        <argsstring>()</argsstring>
        <name>get_joint_velocities</name>
        <briefdescription>
<para>get_joint_velocities </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the joint velocities WARNING !!!! The method &lt;acquire_sensors&gt;&quot;()&quot; has to be called prior to any getter to have up to date data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="118" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1a31b0684570b478967034513a4ade8031" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &gt;</type>
        <definition>const Eigen::Ref&lt;Vector8d&gt; blmc_robots::Solo8::get_joint_torques</definition>
        <argsstring>()</argsstring>
        <name>get_joint_torques</name>
        <briefdescription>
<para>get_joint_torques </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the joint torques WARNING !!!! The method &lt;acquire_sensors&gt;&quot;()&quot; has to be called prior to any getter to have up to date data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="130" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1ac18587cbf727c3da1432f1baea9c7e2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &gt;</type>
        <definition>const Eigen::Ref&lt;Vector8d&gt; blmc_robots::Solo8::get_joint_target_torques</definition>
        <argsstring>()</argsstring>
        <name>get_joint_target_torques</name>
        <briefdescription>
<para>get_joint_torques </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the target joint torques WARNING !!!! The method &lt;acquire_sensors&gt;&quot;()&quot; has to be called prior to any getter to have up to date data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="143" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1ad9de077a2752f30109afeea1c97e77a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; <ref refid="common__header_8hpp_1a98975ffbe0bca1296078e0350dfedd60" kindref="member">Vector8d</ref> &gt;</type>
        <definition>const Eigen::Ref&lt;Vector8d&gt; blmc_robots::Solo8::get_joint_encoder_index</definition>
        <argsstring>()</argsstring>
        <name>get_joint_encoder_index</name>
        <briefdescription>
<para>get_joint_encoder_index </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the position of the index of the encoders a the motor level WARNING !!!! The method &lt;acquire_sensors&gt;&quot;()&quot; has to be called prior to any getter to have up to date data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="155" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1a2a93ab10811f7425de07ccc44ec2cc07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; Eigen::Vector4d &gt;</type>
        <definition>const Eigen::Ref&lt;Eigen::Vector4d&gt; blmc_robots::Solo8::get_contact_sensors_states</definition>
        <argsstring>()</argsstring>
        <name>get_contact_sensors_states</name>
        <briefdescription>
<para>get_contact_sensors_states </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the state of the contacts states WARNING !!!! The method &lt;acquire_sensors&gt;&quot;()&quot; has to be called prior to any getter to have up to date data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="167" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1ab63c523c0215a19f3a27fba33b4055c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Eigen::Ref&lt; Eigen::Vector4d &gt;</type>
        <definition>const Eigen::Ref&lt;Eigen::Vector4d&gt; blmc_robots::Solo8::get_slider_positions</definition>
        <argsstring>()</argsstring>
        <name>get_slider_positions</name>
        <briefdescription>
<para>get_slider_positions </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current sliders positions. WARNING !!!! The method &lt;acquire_sensors&gt;&quot;()&quot; has to be called prior to any getter to have up to date data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="179" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1a9ebe42874824fddf80f726123740a08c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::array&lt; bool, 8 &gt; &amp;</type>
        <definition>const std::array&lt;bool, 8&gt;&amp; blmc_robots::Solo8::get_motor_enabled</definition>
        <argsstring>()</argsstring>
        <name>get_motor_enabled</name>
        <briefdescription>
<para>Hardware Status. </para>        </briefdescription>
        <detaileddescription>
<para>get_motor_enabled <simplesect kind="return"><para>This gives the status (enabled/disabled) of each motors using the joint ordering convention. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="193" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1ad4b3e743c47212fea09388e544faa418" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::array&lt; bool, 8 &gt; &amp;</type>
        <definition>const std::array&lt;bool, 8&gt;&amp; blmc_robots::Solo8::get_motor_ready</definition>
        <argsstring>()</argsstring>
        <name>get_motor_ready</name>
        <briefdescription>
<para>get_motor_ready </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This gives the status (enabled/disabled) of each motors using the joint ordering convention. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="203" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1a5ed9b4edda3e20305abce34bcb1b46f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::array&lt; bool, 4 &gt; &amp;</type>
        <definition>const std::array&lt;bool, 4&gt;&amp; blmc_robots::Solo8::get_motor_board_enabled</definition>
        <argsstring>()</argsstring>
        <name>get_motor_board_enabled</name>
        <briefdescription>
<para>get_motor_board_enabled </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This gives the status (enabled/disabled of the onboard control cards). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="213" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Solo8_1aad29e62a4dbbba13f0ea80dc7631f23c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::array&lt; int, 4 &gt; &amp;</type>
        <definition>const std::array&lt;int, 4&gt;&amp; blmc_robots::Solo8::get_motor_board_errors</definition>
        <argsstring>()</argsstring>
        <name>get_motor_board_errors</name>
        <briefdescription>
<para>get_motor_board_errors </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This gives the status (enabled/disabled of the onboard control cards). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/solo8.hpp" line="223" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="223" bodyend="226"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/blmc_robots/solo8.hpp" line="19" column="1" bodyfile="include/blmc_robots/solo8.hpp" bodystart="18" bodyend="373"/>
    <listofallmembers>
      <member refid="classblmc__robots_1_1Solo8_1a2ba66edbb1dc4b9fddb9e9978f0fd9e7" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>acquire_sensors</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a25153421bca095a344408e055f3794b6" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>active_estop_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1adb4de0ff0c5cc2159a1e3b2f32955198" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>calibrate</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a67076041a87ea12b1a22d7f1759c759e" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>contact_sensors_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a1593f4a8fbba53c407a4e0434ebe785c" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>contact_sensors_states_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a2a93ab10811f7425de07ccc44ec2cc07" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_contact_sensors_states</name></member>
      <member refid="classblmc__robots_1_1Solo8_1ad9de077a2752f30109afeea1c97e77a6" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_joint_encoder_index</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a1fc849d9d2dfd936fa00147e184b8e5a" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_joint_gear_ratios</name></member>
      <member refid="classblmc__robots_1_1Solo8_1ab067a976ebce2882b84e2d115832839d" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_joint_positions</name></member>
      <member refid="classblmc__robots_1_1Solo8_1ac18587cbf727c3da1432f1baea9c7e2a" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_joint_target_torques</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a31b0684570b478967034513a4ade8031" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_joint_torques</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a2e27aa306a9f2a1812274156314eed9b" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_joint_velocities</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a5ed9b4edda3e20305abce34bcb1b46f2" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_motor_board_enabled</name></member>
      <member refid="classblmc__robots_1_1Solo8_1aad29e62a4dbbba13f0ea80dc7631f23c" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_motor_board_errors</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a9ebe42874824fddf80f726123740a08c" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_motor_enabled</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a61a01cd1309a28be108deb07eb4d2f3b" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_motor_inertias</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a8c956e9a0a891992fa593b932a385095" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_motor_max_current</name></member>
      <member refid="classblmc__robots_1_1Solo8_1ad4b3e743c47212fea09388e544faa418" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_motor_ready</name></member>
      <member refid="classblmc__robots_1_1Solo8_1acdc75776948c56c153ef59ed0bdf8222" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_motor_torque_constants</name></member>
      <member refid="classblmc__robots_1_1Solo8_1ab63c523c0215a19f3a27fba33b4055c0" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>get_slider_positions</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a7016486ea321d63f2659b5efba4dd78a" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>initialize</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a2003b6aa7b0e8824a190c65de42550a2" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>joint_encoder_index_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a09ab41c9822e1f1c853d0b9065205d2d" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>joint_gear_ratios_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a2a731cc04e539d6fde3c3e5cd6922a42" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>joint_positions_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a11ca0b9a39f810e5bc206adaf43350bb" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>joint_target_torques_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a75ef5d44774e506d90b27ea73e2ae861" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>joint_torques_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a4642f07d901c644a5ecacc8cd65b3c4e" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>joint_velocities_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a31f29f1bf604552b2ae5d017e5f3e2d1" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>joint_zero_positions_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1aaca553f0634f406d2e41a0499dedd73a" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>joints_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a7beb3d9ca8cc39e832fb5515bd2e71c5" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>main_board_ptr_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a5d04c4cdbd954dc2a76c08989ccf0040" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>map_joint_id_to_motor_board_id_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a6c1a5948cf6d2ec18d619753d51b8546" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>map_joint_id_to_motor_port_id_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1addc990242a0e96c40edc629883541be7" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>max_joint_torque_security_margin_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a053f46bebf56986d976e34c0c47956c9" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>max_joint_torques_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1adfe55489326f302577d3d851e098bbaf" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>motor_board_enabled_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1af8f47463c79497bfa978ac90249ea144" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>motor_board_errors_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a8966f925be4af6937b4544cb5dbc8eab" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>motor_enabled_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1ad2a475dd31443243c1683c2fb091418e" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>motor_inertias_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1af9b0800cd9ef22713767298ef850eddf" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>motor_max_current_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a01868736d0656e8dd029b69297661b48" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>motor_ready_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a21293b97b37bcd42b3e3766a72fabf26" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>motor_torque_constants_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a4d0b9f094d69f0acbdcbc7728df6ecd4" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>motors_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1af8e3d6a86608540f39bf1de1f052266a" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>reverse_polarities_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1aa743eac2996bd33c86e23bd2029c3a01" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>send_target_joint_torque</name></member>
      <member refid="classblmc__robots_1_1Solo8_1ac01d9597b2e0446e29c249f74c6ffc8f" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>serial_reader_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1af9d34a00b42e425515d1d7571c59ddca" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>slider_positions_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1ae8717ecb7e21391ef5f54d67e0e46b5d" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>slider_positions_vector_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1a4f372b7f79a81142a4e99e1ae6da44a2" prot="private" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>sliders_</name></member>
      <member refid="classblmc__robots_1_1Solo8_1ab37c2e406f12685fcb4e09086ee7c0c0" prot="public" virt="non-virtual"><scope>blmc_robots::Solo8</scope><name>Solo8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
