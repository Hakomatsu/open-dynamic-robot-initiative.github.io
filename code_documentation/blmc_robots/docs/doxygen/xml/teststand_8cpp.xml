<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="teststand_8cpp" kind="file" language="C++">
    <compoundname>teststand.cpp</compoundname>
    <includes refid="teststand_8hpp" local="yes">blmc_robots/teststand.hpp</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="978">
        <label>atomic</label>
      </node>
      <node id="982">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="981">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="973">
        <label>stdexcept</label>
      </node>
      <node id="970">
        <label>Eigen/Eigen</label>
      </node>
      <node id="968">
        <label>blmc_robots/blmc_joint_module.hpp</label>
        <link refid="blmc__joint__module_8hpp"/>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="972" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
      </node>
      <node id="965">
        <label>src/teststand.cpp</label>
        <link refid="teststand_8cpp"/>
        <childnode refid="966" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
      </node>
      <node id="980">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="979">
        <label>real_time_tools/iostream.hpp</label>
      </node>
      <node id="986">
        <label>vector</label>
      </node>
      <node id="977">
        <label>signal.h</label>
      </node>
      <node id="975">
        <label>blmc_robots/common_header.hpp</label>
        <link refid="common__header_8hpp"/>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
        <childnode refid="978" relation="include">
        </childnode>
        <childnode refid="979" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="981" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="983" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
      </node>
      <node id="971">
        <label>array</label>
      </node>
      <node id="976">
        <label>yaml_cpp_catkin/yaml_cpp_fwd.hpp</label>
      </node>
      <node id="969">
        <label>math.h</label>
      </node>
      <node id="985">
        <label>blmc_robots/mathematics/polynome.hxx</label>
        <link refid="polynome_8hxx_source"/>
        <childnode refid="972" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
      </node>
      <node id="972">
        <label>iostream</label>
      </node>
      <node id="966">
        <label>blmc_robots/teststand.hpp</label>
        <link refid="teststand_8hpp"/>
        <childnode refid="967" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
      </node>
      <node id="967">
        <label>AtiFTSensor.h</label>
      </node>
      <node id="984">
        <label>blmc_robots/mathematics/polynome.hpp</label>
        <link refid="polynome_8hpp"/>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
      </node>
      <node id="983">
        <label>blmc_drivers/devices/analog_sensor.hpp</label>
      </node>
      <node id="974">
        <label>blmc_drivers/devices/motor.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceblmc__robots">blmc_robots</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="teststand_8hpp" kindref="compound">blmc_robots/teststand.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceblmc__robots" kindref="compound">blmc_robots</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1Teststand_1a401728dd5ba91b8603de79125fcb0a66" kindref="member">Teststand::max_joint_torque_security_margin_</ref><sp/>=<sp/>0.99;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="classblmc__robots_1_1Teststand_1a4747b0754cd3dd669c02f27662baef7e" kindref="member">Teststand::Teststand</ref>()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1afe8801388760cd85771a99e3a89c9f69" kindref="member">motor_inertias_</ref>.setZero();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a0d4bfad1f7afaaf459131667fac2b2d0" kindref="member">motor_torque_constants_</ref>.setZero();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classblmc__robots_1_1Teststand_1aedd9aae28f47062870e3afcb9474822b" kindref="member">motor_enabled_</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1aedd9aae28f47062870e3afcb9474822b" kindref="member">motor_enabled_</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a62df6b43c18e44f62114b6f4d34ba8f4" kindref="member">motor_ready_</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classblmc__robots_1_1Teststand_1a1fca1e72202c09982c2e77c3166d1ea7" kindref="member">motor_board_enabled_</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a1fca1e72202c09982c2e77c3166d1ea7" kindref="member">motor_board_enabled_</ref>[0]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a89f931457834d37bd01da57944fd21c1" kindref="member">motor_board_errors_</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a5ff6d1081ece6fadf9b3bac578b08001" kindref="member">joint_positions_</ref>.setZero();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ab0a776f921bec24b81bc08f7ceebcba6" kindref="member">joint_velocities_</ref>.setZero();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a59ef3d86efd043ee1511bad70624bdae" kindref="member">joint_torques_</ref>.setZero();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a0db888b3e84fe194629bb14b6fa2e485" kindref="member">joint_target_torques_</ref>.setZero();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ad7b3b6c032d1b1b9c886089ea21a9c2a" kindref="member">joint_gear_ratios_</ref>.setZero();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a5923674652df619a0692333fb27b8369" kindref="member">joint_zero_positions_</ref>.setZero();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a49bb3cd738af64ef41a9a3d12dde9ac2" kindref="member">contact_sensors_states_</ref>.setZero();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ad0ce099eef5b57553d36927e3f7f1203" kindref="member">slider_positions_</ref>.setZero();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1aae2cff55630f887e4ed10af78b7dd0c1" kindref="member">motor_max_current_</ref>.setZero();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1acf65e7889b3c8b3cbfa8b9e82e984b22" kindref="member">max_joint_torques_</ref>.setZero();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Max<sp/>current<sp/>in<sp/>Amp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1aae2cff55630f887e4ed10af78b7dd0c1" kindref="member">motor_max_current_</ref>.fill(12);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a0d4bfad1f7afaaf459131667fac2b2d0" kindref="member">motor_torque_constants_</ref>.fill(0.025);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1afe8801388760cd85771a99e3a89c9f69" kindref="member">motor_inertias_</ref>.fill(0.045);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ad7b3b6c032d1b1b9c886089ea21a9c2a" kindref="member">joint_gear_ratios_</ref>.fill(9.0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1Teststand_1aa41ad951a8259fd15e6309e850a6084a" kindref="member">Teststand::initialize</ref>()</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@todo<sp/>Create<sp/>a<sp/>modular<sp/>way<sp/>of<sp/>adding<sp/>cards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>communication<sp/>with<sp/>the<sp/>can<sp/>cards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1aab9d6924ad67f65a6931d3db4771c28a" kindref="member">can_buses_</ref>[0]<sp/>=<sp/>std::make_shared&lt;blmc_drivers::CanBus&gt;(</highlight><highlight class="stringliteral">&quot;can0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a5ab181273e83c54a66ece2f741b718bb" kindref="member">can_motor_boards_</ref>[0]<sp/>=</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;blmc_drivers::CanBusMotorBoard&gt;(<ref refid="classblmc__robots_1_1Teststand_1aab9d6924ad67f65a6931d3db4771c28a" kindref="member">can_buses_</ref>[0]);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1aab9d6924ad67f65a6931d3db4771c28a" kindref="member">can_buses_</ref>[1]<sp/>=<sp/>std::make_shared&lt;blmc_drivers::CanBus&gt;(</highlight><highlight class="stringliteral">&quot;can1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>can_motor_boards_[1]<sp/>=</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;blmc_drivers::CanBusMotorBoard&gt;(can_buses_[1]);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1af2f14b46da7f2dfbeeea59b47669f1e8" kindref="member">contact_sensors_</ref>[0]<sp/>=</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;blmc_drivers::AnalogSensor&gt;(can_motor_boards_[0],<sp/>0);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a41a93d1d128333a9981603eb82d068c0" kindref="member">height_sensors_</ref>[0]<sp/>=</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;blmc_drivers::AnalogSensor&gt;(can_motor_boards_[0],<sp/>1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MOTOR_HFE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ae530206f8c54cbc04d7cf69a16d1e99a" kindref="member">motors_</ref>[0]<sp/>=<sp/>std::make_shared&lt;blmc_drivers::Motor&gt;(can_motor_boards_[0],<sp/>1);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MOTOR_KFE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>motors_[1]<sp/>=<sp/>std::make_shared&lt;blmc_drivers::Motor&gt;(can_motor_boards_[0],<sp/>0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>joint<sp/>module<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1a905addfe3271be5bc88bd785c5cbb032" kindref="member">set_motor_array</ref>(motors_,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a0d4bfad1f7afaaf459131667fac2b2d0" kindref="member">motor_torque_constants_</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ad7b3b6c032d1b1b9c886089ea21a9c2a" kindref="member">joint_gear_ratios_</ref>,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a5923674652df619a0692333fb27b8369" kindref="member">joint_zero_positions_</ref>,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1aae2cff55630f887e4ed10af78b7dd0c1" kindref="member">motor_max_current_</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>max<sp/>torque<sp/>we<sp/>saturate<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1acf65e7889b3c8b3cbfa8b9e82e984b22" kindref="member">max_joint_torques_</ref><sp/>=</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a401728dd5ba91b8603de79125fcb0a66" kindref="member">max_joint_torque_security_margin_</ref><sp/>*<sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1a6cc2989e6132988557ebe03e69658f50" kindref="member">get_max_torques</ref>().array();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>the<sp/>control<sp/>gains<sp/>in<sp/>order<sp/>to<sp/>perform<sp/>the<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector2d<sp/>kp,<sp/>kd;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>kp.fill(2.0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>kd.fill(0.05);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1ada76994634fd0f15fb5df311a61e97d7" kindref="member">set_position_control_gains</ref>(kp,<sp/>kd);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a2a67df9dc9004f9e70bcdd6ad8f8189e" kindref="member">sliders_</ref>[0]<sp/>=</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;blmc_drivers::AnalogSensor&gt;(can_motor_boards_[1],<sp/>0);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a2a67df9dc9004f9e70bcdd6ad8f8189e" kindref="member">sliders_</ref>[1]<sp/>=</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;blmc_drivers::AnalogSensor&gt;(can_motor_boards_[1],<sp/>1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ATI<sp/>sensor<sp/>initialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ac733828512ab4ba2ad43625915a4a9fd" kindref="member">ati_sensor_</ref>.initialize();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>to<sp/>make<sp/>sure<sp/>there<sp/>is<sp/>a<sp/>first<sp/>package<sp/>when<sp/>acquire_sensors()<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>real_time_tools::Timer::sleep_sec(0.5);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calibrate<sp/>the<sp/>zeros<sp/>of<sp/>the<sp/>ati<sp/>sensor<sp/>given<sp/>the<sp/>current<sp/>measurement.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ac733828512ab4ba2ad43625915a4a9fd" kindref="member">ati_sensor_</ref>.setBias();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>until<sp/>all<sp/>board<sp/>are<sp/>ready<sp/>and<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>can_motor_boards_[0]-&gt;wait_until_ready();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>can_motor_boards_[1]-&gt;wait_until_ready();</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1Teststand_1a4203e25148ab5b4ddfef3b46647213c6" kindref="member">Teststand::acquire_sensors</ref>()</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>joint<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a5ff6d1081ece6fadf9b3bac578b08001" kindref="member">joint_positions_</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1abe68677ccf4bdbea975210dcd1de2fdc" kindref="member">get_measured_angles</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>joint<sp/>velocities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ab0a776f921bec24b81bc08f7ceebcba6" kindref="member">joint_velocities_</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1a6138e9e42ce53ce9c5fc7728c5c51558" kindref="member">get_measured_velocities</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>joint<sp/>torques</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a59ef3d86efd043ee1511bad70624bdae" kindref="member">joint_torques_</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1a24e9a88d03b45f08f9ce0decce7403c0" kindref="member">get_measured_torques</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>joint<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a2a0b967c36ea63a8bb564bdeebcc0846" kindref="member">joint_encoder_index_</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1afe8ecc2225292e2a4358b375465b0c93" kindref="member">get_measured_index_angles</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>target<sp/>joint<sp/>torques</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a0db888b3e84fe194629bb14b6fa2e485" kindref="member">joint_target_torques_</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1a92f207c6fe5f8fd341b31ef15669fb83" kindref="member">get_sent_torques</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>slider<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classblmc__robots_1_1Teststand_1ad0ce099eef5b57553d36927e3f7f1203" kindref="member">slider_positions_</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ad0ce099eef5b57553d36927e3f7f1203" kindref="member">slider_positions_</ref>(i)<sp/>=</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sliders_[i]-&gt;get_measurement()-&gt;newest_element();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classblmc__robots_1_1Teststand_1a49bb3cd738af64ef41a9a3d12dde9ac2" kindref="member">contact_sensors_states_</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>current<sp/>contact<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a49bb3cd738af64ef41a9a3d12dde9ac2" kindref="member">contact_sensors_states_</ref>(i)<sp/>=</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contact_sensors_[i]-&gt;get_measurement()-&gt;newest_element();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>height<sp/>sensor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transforms<sp/>the<sp/>measurement<sp/>into<sp/>a<sp/>rough<sp/>height<sp/>measurement<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hip<sp/>mounting<sp/>point<sp/>above<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1af9c7f9537b7123dae498d08d5c80fe07" kindref="member">height_sensors_states_</ref>(i)<sp/>=</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0701053378814493<sp/>-</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0275690598232334<sp/>*</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_sensors_[i]-&gt;get_measurement()-&gt;newest_element();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1ac733828512ab4ba2ad43625915a4a9fd" kindref="member">ati_sensor_</ref>.getFT(&amp;<ref refid="classblmc__robots_1_1Teststand_1abbde43d983602e1ead15b1b525cc524f" kindref="member">ati_force_</ref>(0),<sp/>&amp;<ref refid="classblmc__robots_1_1Teststand_1a8c4e095818a0c80739a63a91bb0670c6" kindref="member">ati_torque_</ref>(0));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>force<sp/>and<sp/>torque<sp/>values,<sp/>such<sp/>that<sp/>pressing<sp/>on<sp/>the<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sensor<sp/>creates<sp/>a<sp/>positive<sp/>force.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1abbde43d983602e1ead15b1b525cc524f" kindref="member">ati_force_</ref>(0)<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1abbde43d983602e1ead15b1b525cc524f" kindref="member">ati_force_</ref>(2)<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a8c4e095818a0c80739a63a91bb0670c6" kindref="member">ati_torque_</ref>(0)<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a8c4e095818a0c80739a63a91bb0670c6" kindref="member">ati_torque_</ref>(2)<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>ex)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_printf(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;HARDWARE:<sp/>Something<sp/>went<sp/>wrong<sp/>during<sp/>the<sp/>sensor<sp/>reading.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;error<sp/>is:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1Teststand_1aabb484d65bca5a341dd24abd91c47b9b" kindref="member">Teststand::send_target_joint_torque</ref>(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;Vector2d&gt;<sp/>target_joint_torque)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__header_8hpp_1acb6916bc8c9fe9d98c484fd4cc201447" kindref="member">Vector2d</ref><sp/>ctrl_torque<sp/>=<sp/>target_joint_torque;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_torque<sp/>=<sp/>ctrl_torque.array().min(<ref refid="classblmc__robots_1_1Teststand_1acf65e7889b3c8b3cbfa8b9e82e984b22" kindref="member">max_joint_torques_</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_torque<sp/>=<sp/>ctrl_torque.array().max(-<ref refid="classblmc__robots_1_1Teststand_1acf65e7889b3c8b3cbfa8b9e82e984b22" kindref="member">max_joint_torques_</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1ac7dba81727847238fc4c42b7dca6a0ea" kindref="member">set_torques</ref>(ctrl_torque);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1a26d4d675142bc783c1f983d135a41a09" kindref="member">send_torques</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1Teststand_1ad4660570e3e1b77717004b3ce8056faf" kindref="member">Teststand::calibrate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2d&amp;<sp/>home_offset_rad)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>distance<sp/>is<sp/>twice<sp/>the<sp/>angle<sp/>between<sp/>joint<sp/>indexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>search_distance_limit_rad<sp/>=<sp/>2.0<sp/>*<sp/>(2.0<sp/>*<sp/>M_PI<sp/>/<sp/>9.0);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__header_8hpp_1acb6916bc8c9fe9d98c484fd4cc201447" kindref="member">Vector2d</ref><sp/>profile_step_size_rad<sp/>=<sp/>Vector2d::Constant(0.001);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1a4b3dfee12a87fddf81961fab48e3dae4" kindref="member">execute_homing</ref>(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_distance_limit_rad,<sp/>home_offset_rad,<sp/>profile_step_size_rad);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__header_8hpp_1acb6916bc8c9fe9d98c484fd4cc201447" kindref="member">Vector2d</ref><sp/>zero_pose<sp/>=<sp/>Vector2d::Zero();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1Teststand_1a2c14882d88deb56edde5240a8d841f2a" kindref="member">joints_</ref>.<ref refid="classblmc__robots_1_1BlmcJointModules_1afc82da986738d3a2265e5cf6337d3251" kindref="member">go_to</ref>(zero_pose);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>blmc_robots</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/teststand.cpp"/>
  </compounddef>
</doxygen>
