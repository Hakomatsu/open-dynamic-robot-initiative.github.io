<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config" kind="struct" language="C++" prot="public">
    <compoundname>blmc_robots::NJointBlmcRobotDriver::Config</compoundname>
    <includes refid="n__joint__blmc__robot__driver_8hpp" local="no">n_joint_blmc_robot_driver.hpp</includes>
    <innerclass refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1_1TrajectoryStep" prot="public">blmc_robots::NJointBlmcRobotDriver::Config::TrajectoryStep</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a6e8a4bd6eb3d85137d3c55ef928d5a89" prot="public" static="no">
        <type>std::array&lt; std::string, N_MOTOR_BOARDS &gt;</type>
        <definition>typedef std::array&lt;std::string, N_MOTOR_BOARDS&gt; blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::CanPortArray</definition>
        <argsstring></argsstring>
        <name>CanPortArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="281" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a4e59e7c7ac5daba34f83eb8f1456a103" prot="public" static="no" mutable="no">
        <type>CanPortArray</type>
        <definition>CanPortArray blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::can_ports</definition>
        <argsstring></argsstring>
        <name>can_ports</name>
        <briefdescription>
<para>List of CAN port names used by the robot. </para>        </briefdescription>
        <detaileddescription>
<para>For each motor control board used by the robot, this specifies the CAN port through which it is connected.</para><para>Example: <computeroutput>{&quot;can0&quot;, &quot;can1&quot;}</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="304" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a553c5cb5a9da1f0c5e5f9e4c2e19c286" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::max_current_A</definition>
        <argsstring></argsstring>
        <name>max_current_A</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
<para>Maximum current that can be sent to the motor [A]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="307" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a8fb4f2f8ae75bf1555cd6c3ea5272541" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::has_endstop</definition>
        <argsstring></argsstring>
        <name>has_endstop</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether the joints have physical end stops or not. </para>        </briefdescription>
        <detaileddescription>
<para>This is for example relevant for homing, where (in case this value is set to true) all joints move until they hit the end stop to determine their absolute position.</para><para>Note that not having end stops does not mean that the joint can rotate freely in general. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="319" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a0b9d29b12a079f51909c6d68eaa5ce0a" prot="public" static="no" mutable="no">
        <type>struct <ref refid="classblmc__robots_1_1NJointBlmcRobotDriver" kindref="compound">blmc_robots::NJointBlmcRobotDriver</ref>&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::@0</type>
        <definition>struct blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::@0  blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::calibration</definition>
        <argsstring></argsstring>
        <name>calibration</name>
        <briefdescription>
<para>Parameters related to calibration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="328" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1ab4093c960a915b4ee5fdfde0684e3969" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::move_to_position_tolerance_rad</definition>
        <argsstring></argsstring>
        <name>move_to_position_tolerance_rad</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
<para>Tolerance for reaching the target with <ref refid="classblmc__robots_1_1NJointBlmcRobotDriver_1ab29cab22a765bce463f367b6e6dc82ff" kindref="member">NJointBlmcRobotDriver::move_to_position</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="332" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a4e0c7fdf26616be5d67a9be7ee2452c7" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::safety_kd</definition>
        <argsstring></argsstring>
        <name>safety_kd</name>
        <initializer>= Vector::Constant(0.1)</initializer>
        <briefdescription>
<para>D-gain to dampen velocity. Set to zero to disable damping. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="336" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a2a5c11787d14c7a809915386ee95865e" prot="public" static="no" mutable="no">
        <type>struct <ref refid="classblmc__robots_1_1NJointBlmcRobotDriver" kindref="compound">blmc_robots::NJointBlmcRobotDriver</ref>&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::@1</type>
        <definition>struct blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::@1  blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::position_control_gains</definition>
        <argsstring></argsstring>
        <name>position_control_gains</name>
        <briefdescription>
<para>Default control gains for the position PD controller. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="343" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a8acf96c93bad0de685708962474fa662" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::hard_position_limits_lower</definition>
        <argsstring></argsstring>
        <name>hard_position_limits_lower</name>
        <initializer>= Vector::Zero()</initializer>
        <briefdescription>
<para>Hard lower limits for joint position. </para>        </briefdescription>
        <detaileddescription>
<para>Exceeding this limit results in an error and robot shutdown. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="350" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a7fbf059f76b04dc531a0d10e92fc066d" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::hard_position_limits_upper</definition>
        <argsstring></argsstring>
        <name>hard_position_limits_upper</name>
        <initializer>= Vector::Zero()</initializer>
        <briefdescription>
<para>Hard upper limits for joint position. </para>        </briefdescription>
        <detaileddescription>
<para>Exceeding this limit results in an error and robot shutdown. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="356" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a18a496c6cf2f794930ee72f2746e223f" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::soft_position_limits_lower</definition>
        <argsstring></argsstring>
        <name>soft_position_limits_lower</name>
        <initializer>=
        Vector::Constant(-std::numeric_limits&lt;double&gt;::infinity())</initializer>
        <briefdescription>
<para>Soft lower limits for joint position. </para>        </briefdescription>
        <detaileddescription>
<para>Exceeding this limit results in the action being adjusted to move the joint back inside the limits. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="364" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a06ae5378a2d4f7d19a3e8b501651bfbc" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::soft_position_limits_upper</definition>
        <argsstring></argsstring>
        <name>soft_position_limits_upper</name>
        <initializer>=
        Vector::Constant(std::numeric_limits&lt;double&gt;::infinity())</initializer>
        <briefdescription>
<para>Soft upper limits for joint position. </para>        </briefdescription>
        <detaileddescription>
<para>Exceeding this limit results in the action being adjusted to move the joint back inside the limits. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="372" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a432b086d9f6258c036098a75501c3dab" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::home_offset_rad</definition>
        <argsstring></argsstring>
        <name>home_offset_rad</name>
        <initializer>= Vector::Zero()</initializer>
        <briefdescription>
<para>Offset between home position and zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="376" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a448a4d4166184f4b5f53be4ad60eec7e" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::initial_position_rad</definition>
        <argsstring></argsstring>
        <name>initial_position_rad</name>
        <initializer>= Vector::Zero()</initializer>
        <briefdescription>
<para>Initial position to which the robot moves after initialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="382" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a1f241f65d2b50b3bb5b4b83837dbaae8" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1_1TrajectoryStep" kindref="compound">TrajectoryStep</ref> &gt;</type>
        <definition>std::vector&lt;TrajectoryStep&gt; blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::shutdown_trajectory</definition>
        <argsstring></argsstring>
        <name>shutdown_trajectory</name>
        <briefdescription>
<para>Trajectory which is executed in the shutdown method. </para>        </briefdescription>
        <detaileddescription>
<para>Use this to move the robot to a &quot;rest position&quot; during shutdown of the robot driver. It can consist of arbitrarily many steps. Leave it empty to not move during shutdown. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="391" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="391" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1ae34fb8f28bdec0401b72b09bc8d48b65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::is_within_hard_position_limits</definition>
        <argsstring>(const Vector &amp;position) const</argsstring>
        <name>is_within_hard_position_limits</name>
        <param>
          <type>const Vector &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Check if the given position is within the hard limits. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Joint positions.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if <computeroutput>hard_position_limits_lower &lt;= position &lt;= hard_position_limits_upper</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a1181ecfd861240c97131f644fa354726" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
<para>Print the given configuration in a human-readable way. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="406" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1acd73ca574eacb067ee6a29c6a4a2704a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config" kindref="compound">Config</ref></type>
        <definition>static Config blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::load_config</definition>
        <argsstring>(const std::string &amp;config_file_name)</argsstring>
        <name>load_config</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>config_file_name</declname>
        </param>
        <briefdescription>
<para>Load driver configuration from file. </para>        </briefdescription>
        <detaileddescription>
<para>Load the configuration from the specified YAML file. The file is expected to have the same structure/key naming as the <ref refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config" kindref="compound">Config</ref> struct. If a value can not be read from the file, the application exists with an error message.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config_file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Path/name of the configuration YAML file.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Configuration </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="420" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1acf6b753c2a2cbf8cedc97da4a5a0f83c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void blmc_robots::NJointBlmcRobotDriver&lt; Observation, N_JOINTS, N_MOTOR_BOARDS &gt;::Config::set_config_value</definition>
        <argsstring>(const YAML::Node &amp;user_config, const std::string &amp;name, T *var)</argsstring>
        <name>set_config_value</name>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>user_config</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Set value from user configuration to var if specified. </para>        </briefdescription>
        <detaileddescription>
<para>Checks if a field <computeroutput>name</computeroutput> exists in <computeroutput>user_config</computeroutput>. If yes, its value is written to <computeroutput>var</computeroutput>, otherwise <computeroutput>var</computeroutput> is unchanged.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">user_config</parametername>
</parameternamelist>
<parameterdescription>
<para>YAML node containing the user configuration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the configuration entry. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">var</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to which configuration is written. Value is unchanged if the specified field name does not exist in user_config, i.e. it can be initialized with a default value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="436" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration of the robot that can be changed by the user. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="280" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="279" bodyend="439"/>
    <listofallmembers>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a0b9d29b12a079f51909c6d68eaa5ce0a" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>calibration</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a4e59e7c7ac5daba34f83eb8f1456a103" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>can_ports</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a6e8a4bd6eb3d85137d3c55ef928d5a89" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>CanPortArray</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a8acf96c93bad0de685708962474fa662" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>hard_position_limits_lower</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a7fbf059f76b04dc531a0d10e92fc066d" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>hard_position_limits_upper</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a8fb4f2f8ae75bf1555cd6c3ea5272541" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>has_endstop</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a432b086d9f6258c036098a75501c3dab" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>home_offset_rad</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a448a4d4166184f4b5f53be4ad60eec7e" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>initial_position_rad</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1ae34fb8f28bdec0401b72b09bc8d48b65" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>is_within_hard_position_limits</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1acd73ca574eacb067ee6a29c6a4a2704a" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>load_config</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a553c5cb5a9da1f0c5e5f9e4c2e19c286" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>max_current_A</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1ab4093c960a915b4ee5fdfde0684e3969" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>move_to_position_tolerance_rad</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a2a5c11787d14c7a809915386ee95865e" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>position_control_gains</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a1181ecfd861240c97131f644fa354726" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>print</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a4e0c7fdf26616be5d67a9be7ee2452c7" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>safety_kd</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1acf6b753c2a2cbf8cedc97da4a5a0f83c" prot="private" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>set_config_value</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a1f241f65d2b50b3bb5b4b83837dbaae8" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>shutdown_trajectory</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a18a496c6cf2f794930ee72f2746e223f" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>soft_position_limits_lower</name></member>
      <member refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a06ae5378a2d4f7d19a3e8b501651bfbc" prot="public" virt="non-virtual"><scope>blmc_robots::NJointBlmcRobotDriver::Config</scope><name>soft_position_limits_upper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
