<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="blmc__joint__module_8cpp" kind="file" language="C++">
    <compoundname>blmc_joint_module.cpp</compoundname>
    <includes refid="blmc__joint__module_8hpp" local="yes">blmc_robots/blmc_joint_module.hpp</includes>
    <includes local="no">cmath</includes>
    <includes local="yes">real_time_tools/iostream.hpp</includes>
    <includes local="yes">real_time_tools/spinner.hpp</includes>
    <incdepgraph>
      <node id="686">
        <label>atomic</label>
      </node>
      <node id="690">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="695">
        <label>cmath</label>
      </node>
      <node id="689">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="681">
        <label>stdexcept</label>
      </node>
      <node id="678">
        <label>Eigen/Eigen</label>
      </node>
      <node id="675">
        <label>src/blmc_joint_module.cpp</label>
        <link refid="blmc__joint__module_8cpp"/>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
      </node>
      <node id="676">
        <label>blmc_robots/blmc_joint_module.hpp</label>
        <link refid="blmc__joint__module_8hpp"/>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
      </node>
      <node id="688">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="687">
        <label>real_time_tools/iostream.hpp</label>
      </node>
      <node id="694">
        <label>vector</label>
      </node>
      <node id="685">
        <label>signal.h</label>
      </node>
      <node id="683">
        <label>blmc_robots/common_header.hpp</label>
        <link refid="common__header_8hpp"/>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
      </node>
      <node id="679">
        <label>array</label>
      </node>
      <node id="684">
        <label>yaml_cpp_catkin/yaml_cpp_fwd.hpp</label>
      </node>
      <node id="677">
        <label>math.h</label>
      </node>
      <node id="693">
        <label>blmc_robots/mathematics/polynome.hxx</label>
        <link refid="polynome_8hxx_source"/>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
      </node>
      <node id="680">
        <label>iostream</label>
      </node>
      <node id="692">
        <label>blmc_robots/mathematics/polynome.hpp</label>
        <link refid="polynome_8hpp"/>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
      </node>
      <node id="691">
        <label>blmc_drivers/devices/analog_sensor.hpp</label>
      </node>
      <node id="682">
        <label>blmc_drivers/devices/motor.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceblmc__robots">blmc_robots</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:maximilien.naveau@gmail.com">maximilien.naveau@gmail.com</ulink>) </para></simplesect>
<simplesect kind="author"><para>Manuel Wuthrich </para></simplesect>
<xrefsect id="license_1_license000003"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-07-11 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blmc__joint__module_8hpp" kindref="compound">blmc_robots/blmc_joint_module.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/iostream.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/spinner.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceblmc__robots" kindref="compound">blmc_robots</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="classblmc__robots_1_1BlmcJointModule_1a09a0b8815e6c447e3ee6632ade940e0b" kindref="member">BlmcJointModule::BlmcJointModule</ref>(</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;blmc_drivers::MotorInterface&gt;<sp/>motor,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>motor_constant,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>gear_ratio,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>zero_angle,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>reverse_polarity,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>max_current)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a0ff5ce1cb26ed04212914dc152ec0486" kindref="member">motor_</ref><sp/>=<sp/>motor;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a4e2e6f6cc7f0f7aed02efdca60394b40" kindref="member">motor_constant_</ref><sp/>=<sp/>motor_constant;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af013668d69e7cea2dcc21da8c1c9e4e6" kindref="member">gear_ratio_</ref><sp/>=<sp/>gear_ratio;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1ae59680a947539306e391a12ad2d071bb" kindref="member">set_zero_angle</ref>(zero_angle);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a6ec97901099ebcc3466851624c656f08" kindref="member">polarity_</ref><sp/>=<sp/>reverse_polarity<sp/>?<sp/>-1.0<sp/>:<sp/>1.0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af10e1b734a9d4735301962fd9f9c413f" kindref="member">max_current_</ref><sp/>=<sp/>max_current;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1afa5a06b057850fc626649fd13e3f376c" kindref="member">position_control_gain_p_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a1141b35d0c53d1f4cca107919c1c861e" kindref="member">position_control_gain_d_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adeb28005a7160ead68603aed4262508f" kindref="member">BlmcJointModule::set_torque</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>desired_torque)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>desired_current<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a2b6886df9dc909854ff74c2ec21cbb34" kindref="member">joint_torque_to_motor_current</ref>(desired_torque);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(desired_current)<sp/>&gt;<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af10e1b734a9d4735301962fd9f9c413f" kindref="member">max_current_</ref>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;something<sp/>went<sp/>wrong,<sp/>it<sp/>should<sp/>never<sp/>happen&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>that<sp/>desired_current<sp/>&gt;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af10e1b734a9d4735301962fd9f9c413f" kindref="member">max_current_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>desired_current:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>desired_current</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a0ff5ce1cb26ed04212914dc152ec0486" kindref="member">motor_</ref>-&gt;set_current_target(<ref refid="classblmc__robots_1_1BlmcJointModule_1a6ec97901099ebcc3466851624c656f08" kindref="member">polarity_</ref><sp/>*<sp/>desired_current);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1ae59680a947539306e391a12ad2d071bb" kindref="member">BlmcJointModule::set_zero_angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>zero_angle)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1abdf774193a8ae31486e937eb432dc702" kindref="member">zero_angle_</ref><sp/>=<sp/>zero_angle;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a137da65771a8628db4692e3bfc924f07" kindref="member">BlmcJointModule::set_joint_polarity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>reverse_polarity)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a6ec97901099ebcc3466851624c656f08" kindref="member">polarity_</ref><sp/>=<sp/>reverse_polarity<sp/>?<sp/>-1.0<sp/>:<sp/>1.0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af0484dd9efc47843706fc71d4351bdbd" kindref="member">BlmcJointModule::send_torque</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a0ff5ce1cb26ed04212914dc152ec0486" kindref="member">motor_</ref>-&gt;send_if_input_changed();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a53be7ff5c2b54c15813a68116e85747e" kindref="member">BlmcJointModule::get_max_torque</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="67"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1aa300e4c820a6cd356ac77ba50829c50f" kindref="member">motor_current_to_joint_torque</ref>(<ref refid="classblmc__robots_1_1BlmcJointModule_1af10e1b734a9d4735301962fd9f9c413f" kindref="member">max_current_</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af3f19ffc942e9b49dce892b207d3d476" kindref="member">BlmcJointModule::get_sent_torque</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>measurement_history<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a0ff5ce1cb26ed04212914dc152ec0486" kindref="member">motor_</ref>-&gt;get_sent_current_target();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurement_history-&gt;length()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;double&gt;::quiet_NaN();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1aa300e4c820a6cd356ac77ba50829c50f" kindref="member">motor_current_to_joint_torque</ref>(measurement_history-&gt;newest_element());</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1abb57fdffcc0222b192658239ef45ab63" kindref="member">BlmcJointModule::get_measured_torque</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="83"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1aa300e4c820a6cd356ac77ba50829c50f" kindref="member">motor_current_to_joint_torque</ref>(<ref refid="classblmc__robots_1_1BlmcJointModule_1a219d4e433d03ea8a2bae115d5563d844" kindref="member">get_motor_measurement</ref>(mi::current));</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a8c6419cfb80eb5986dffd982df18a817" kindref="member">BlmcJointModule::get_measured_angle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="88"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a219d4e433d03ea8a2bae115d5563d844" kindref="member">get_motor_measurement</ref>(mi::position)<sp/>/<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af013668d69e7cea2dcc21da8c1c9e4e6" kindref="member">gear_ratio_</ref><sp/>-<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1abdf774193a8ae31486e937eb432dc702" kindref="member">zero_angle_</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a6db4f8c98e9a3e931b19a98dc1339e27" kindref="member">BlmcJointModule::get_measured_velocity</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="93"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a219d4e433d03ea8a2bae115d5563d844" kindref="member">get_motor_measurement</ref>(mi::velocity)<sp/>/<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af013668d69e7cea2dcc21da8c1c9e4e6" kindref="member">gear_ratio_</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a2b6886df9dc909854ff74c2ec21cbb34" kindref="member">BlmcJointModule::joint_torque_to_motor_current</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>torque)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="98"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torque<sp/>/<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af013668d69e7cea2dcc21da8c1c9e4e6" kindref="member">gear_ratio_</ref><sp/>/<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a4e2e6f6cc7f0f7aed02efdca60394b40" kindref="member">motor_constant_</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1aa300e4c820a6cd356ac77ba50829c50f" kindref="member">BlmcJointModule::motor_current_to_joint_torque</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="103"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current<sp/>*<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af013668d69e7cea2dcc21da8c1c9e4e6" kindref="member">gear_ratio_</ref><sp/>*<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a4e2e6f6cc7f0f7aed02efdca60394b40" kindref="member">motor_constant_</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a47b6a71bb9c300d2398924403a6e7e3c" kindref="member">BlmcJointModule::get_measured_index_angle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a219d4e433d03ea8a2bae115d5563d844" kindref="member">get_motor_measurement</ref>(mi::encoder_index)<sp/>/<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af013668d69e7cea2dcc21da8c1c9e4e6" kindref="member">gear_ratio_</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1ad6fab5bc289e01a34374ea8031f5383e" kindref="member">BlmcJointModule::get_zero_angle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="113"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1abdf774193a8ae31486e937eb432dc702" kindref="member">zero_angle_</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a219d4e433d03ea8a2bae115d5563d844" kindref="member">BlmcJointModule::get_motor_measurement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mi&amp;<sp/>measurement_id)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="118"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>measurement_history<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a0ff5ce1cb26ed04212914dc152ec0486" kindref="member">motor_</ref>-&gt;get_measurement(measurement_id);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurement_history-&gt;length()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rt_printf(&quot;get_motor_measurement<sp/>returns<sp/>NaN\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;double&gt;::quiet_NaN();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a6ec97901099ebcc3466851624c656f08" kindref="member">polarity_</ref><sp/>*<sp/>measurement_history-&gt;newest_element();</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adf5e083076bdc53f24f14f0c22b9061b" kindref="member">BlmcJointModule::get_motor_measurement_index</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mi&amp;<sp/>measurement_id)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="131"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>measurement_history<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a0ff5ce1cb26ed04212914dc152ec0486" kindref="member">motor_</ref>-&gt;get_measurement(measurement_id);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(measurement_history-&gt;length()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rt_printf(&quot;get_motor_measurement_index<sp/>returns<sp/>NaN\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>measurement_history-&gt;newest_timeindex();</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a464ab2a846630eba6582d09895df2852" kindref="member">BlmcJointModule::set_position_control_gains</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kd)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1afa5a06b057850fc626649fd13e3f376c" kindref="member">position_control_gain_p_</ref><sp/>=<sp/>kp;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a1141b35d0c53d1f4cca107919c1c861e" kindref="member">position_control_gain_d_</ref><sp/>=<sp/>kd;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a3100c088a17264562c67429334e3dbf2" kindref="member">BlmcJointModule::execute_position_controller</ref>(</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_position_rad)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="150"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>target_position_rad<sp/>-<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a8c6419cfb80eb5986dffd982df18a817" kindref="member">get_measured_angle</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>PD<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>desired_torque<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1afa5a06b057850fc626649fd13e3f376c" kindref="member">position_control_gain_p_</ref><sp/>*<sp/>diff<sp/>-</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a1141b35d0c53d1f4cca107919c1c861e" kindref="member">position_control_gain_d_</ref><sp/>*<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a6db4f8c98e9a3e931b19a98dc1339e27" kindref="member">get_measured_velocity</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clamp<sp/>torque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_torque<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1aa300e4c820a6cd356ac77ba50829c50f" kindref="member">motor_current_to_joint_torque</ref>(<ref refid="classblmc__robots_1_1BlmcJointModule_1af10e1b734a9d4735301962fd9f9c413f" kindref="member">max_current_</ref>)<sp/>*<sp/>0.9;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_torque<sp/>&gt;<sp/>max_torque)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desired_torque<sp/>=<sp/>max_torque;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_torque<sp/>&lt;<sp/>-max_torque)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desired_torque<sp/>=<sp/>-max_torque;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desired_torque;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a17a1da041dae31e9a16f955722c36d6c" kindref="member">BlmcJointModule::calibrate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>angle_zero_to_index,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>index_angle,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mechanical_calibration)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>current<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>starting_position<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a8c6419cfb80eb5986dffd982df18a817" kindref="member">get_measured_angle</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Starting<sp/>pose<sp/>is=%f\n&quot;</highlight><highlight class="normal">,<sp/>starting_position);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>ouput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>index_angle<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>reset<sp/>the<sp/>internal<sp/>zero<sp/>angle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1abdf774193a8ae31486e937eb432dc702" kindref="member">zero_angle_</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_index_time<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adf5e083076bdc53f24f14f0c22b9061b" kindref="member">get_motor_measurement_index</ref>(mi::encoder_index);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isnan(last_index_time))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_index_time<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reached_next_index<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>real_time_tools::Spinner<sp/>spinner;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>spinner.set_period(0.001);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Search<sp/>for<sp/>the<sp/>index\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!reached_next_index)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>D<sp/>gain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k_d<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>desired<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>joint_vel_des<sp/>=<sp/>0.8;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Velocity<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual_velocity<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a6db4f8c98e9a3e931b19a98dc1339e27" kindref="member">get_measured_velocity</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>torque<sp/>=<sp/>+k_d<sp/>*<sp/>(joint_vel_des<sp/>-<sp/>actual_velocity);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rt_printf(&quot;error=%f,<sp/>vel_des=%f,<sp/>vel=%f,<sp/>tau=%f\n&quot;,<sp/>joint_vel_des<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual_velocity,<sp/>joint_vel_des,<sp/>actual_velocity,<sp/>torque);<sp/>Send<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>torque<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adeb28005a7160ead68603aed4262508f" kindref="member">set_torque</ref>(torque);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af0484dd9efc47843706fc71d4351bdbd" kindref="member">send_torque</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actual_index_time<sp/>=</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adf5e083076bdc53f24f14f0c22b9061b" kindref="member">get_motor_measurement_index</ref>(mi::encoder_index);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual_index_angle<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a47b6a71bb9c300d2398924403a6e7e3c" kindref="member">get_measured_index_angle</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached_next_index<sp/>=<sp/>(actual_index_time<sp/>&gt;<sp/>last_index_time);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rt_printf(&quot;last_index_time=%ld,<sp/>actual_index_time=%ld,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual_index_angle=%f\n&quot;,<sp/>last_index_time,<sp/>actual_index_time,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual_index_angle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reached_next_index)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_angle<sp/>=<sp/>actual_index_angle;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spinner.spin();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>control<sp/>to<sp/>zero<sp/>torque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adeb28005a7160ead68603aed4262508f" kindref="member">set_torque</ref>(0.0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af0484dd9efc47843706fc71d4351bdbd" kindref="member">send_torque</ref>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>spinner.spin();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>indexes<sp/>and<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mechanical_calibration)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle_zero_to_index<sp/>=<sp/>index_angle<sp/>-<sp/>starting_position;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1abdf774193a8ae31486e937eb432dc702" kindref="member">zero_angle_</ref><sp/>=<sp/>index_angle<sp/>-<sp/>angle_zero_to_index;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Zero<sp/>angle<sp/>is=%f\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1abdf774193a8ae31486e937eb432dc702" kindref="member">zero_angle_</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Zero<sp/>angle<sp/>to<sp/>index<sp/>angle<sp/>is=%f\n&quot;</highlight><highlight class="normal">,<sp/>angle_zero_to_index);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Index<sp/>angle<sp/>is=%f\n&quot;</highlight><highlight class="normal">,<sp/>index_angle);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Position<sp/>Control\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>init_pose<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a8c6419cfb80eb5986dffd982df18a817" kindref="member">get_measured_angle</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>final_pose<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>final_angle<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>traj_time<sp/>=<sp/>2.0<sp/>/<sp/>0.001;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>torque_int<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>torque_sat<sp/>=<sp/>0.1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Nm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reached_zero_pose<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!reached_zero_pose)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>P<sp/>gain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k_p<sp/>=<sp/>2.5;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integrale<sp/>gain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k_i<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>desired<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>1.0<sp/>-<sp/>(double)((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)counter<sp/>/<sp/>(double)traj_time);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>des_angle<sp/>=<sp/>alpha<sp/>*<sp/>init_pose<sp/>+<sp/>(1.0<sp/>-<sp/>alpha)<sp/>*<sp/>final_pose;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_angle<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a8c6419cfb80eb5986dffd982df18a817" kindref="member">get_measured_angle</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>des_angle<sp/>-<sp/>current_angle;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>small<sp/>saturation<sp/>in<sp/>intensity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torque_int<sp/>+=<sp/>k_i<sp/>*<sp/>err<sp/>*<sp/>0.001;<sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>ms<sp/>sampling<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(torque_int<sp/>&gt;<sp/>torque_sat)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torque_int<sp/>=<sp/>torque_sat;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(torque_int<sp/>&lt;<sp/>-torque_sat)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torque_int<sp/>=<sp/>-torque_sat;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>torque<sp/>=<sp/>k_p<sp/>*<sp/>err<sp/>+<sp/>torque_int;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rt_printf(&quot;error=%f,<sp/>torque_int=%f,<sp/>tau=%f\n&quot;,<sp/>err,<sp/>torque_int,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>torque);<sp/>Send<sp/>the<sp/>torque<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adeb28005a7160ead68603aed4262508f" kindref="member">set_torque</ref>(torque);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af0484dd9efc47843706fc71d4351bdbd" kindref="member">send_torque</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached_zero_pose<sp/>=</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::fabs(current_angle)<sp/>&lt;=<sp/>1e-2);<sp/><sp/></highlight><highlight class="comment">//<sp/>nearly<sp/>0.1<sp/>degree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reached_zero_pose)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_angle<sp/>=<sp/>-err;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spinner.spin();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++counter;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter<sp/>&gt;<sp/>traj_time)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>traj_time;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Final<sp/>angle<sp/>is=%f\n&quot;</highlight><highlight class="normal">,<sp/>final_angle);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>control<sp/>to<sp/>zero<sp/>torque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adeb28005a7160ead68603aed4262508f" kindref="member">set_torque</ref>(0.0);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af0484dd9efc47843706fc71d4351bdbd" kindref="member">send_torque</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>spinner.spin();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>always<sp/>returns<sp/>true<sp/>as<sp/>there<sp/>is<sp/>no<sp/>error<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1aa534604b5ead6a3eee5c47a9454f6834" kindref="member">BlmcJointModule::init_homing</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joint_id,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>search_distance_limit_rad,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>home_offset_rad,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>profile_step_size_rad)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>internal<sp/>zero<sp/>angle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1ae59680a947539306e391a12ad2d071bb" kindref="member">set_zero_angle</ref>(0.0);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>would<sp/>be<sp/>nice<sp/>if<sp/>the<sp/>joint<sp/>instance<sp/>had<sp/>a<sp/>`name`<sp/>or<sp/>`id`<sp/>and<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>level<sp/>instead<sp/>of<sp/>storing<sp/>it<sp/>here<sp/>(to<sp/>make<sp/>more<sp/>useful<sp/>debug<sp/>prints).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a61557c9cbddb3183ccccafc456a1a00f" kindref="member">joint_id</ref><sp/>=<sp/>joint_id;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a3ce572a7b025bbdf1eaaa5b72dc11dde" kindref="member">search_distance_limit_rad</ref><sp/>=<sp/>search_distance_limit_rad;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1ad8ffa51d7885e6e83dd4b32354184175" kindref="member">home_offset_rad</ref><sp/>=<sp/>home_offset_rad;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a06b1c01870f9531cbe766728603f468b" kindref="member">profile_step_size_rad</ref><sp/>=<sp/>profile_step_size_rad;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a770422e8764a847278e5353e2ebe57a6" kindref="member">last_encoder_index_time_index</ref><sp/>=</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adf5e083076bdc53f24f14f0c22b9061b" kindref="member">get_motor_measurement_index</ref>(mi::encoder_index);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a72a681755f52b727ddca35e3811fa5f5" kindref="member">target_position_rad</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a8c6419cfb80eb5986dffd982df18a817" kindref="member">get_measured_angle</ref>();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a16adc4753efe03def5ef3ebf7abc632c" kindref="member">step_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1ab93d63495fa2eb534a68b8494f8ce5de" kindref="member">start_position</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a8c6419cfb80eb5986dffd982df18a817" kindref="member">get_measured_angle</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1af821e232c974385ae24e20a7f75665f7" kindref="member">status</ref><sp/>=<sp/>HomingReturnCode::RUNNING;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><ref refid="blmc__joint__module_8hpp_1aa1075809042ff261e4b0a20d161448b6" kindref="member">HomingReturnCode</ref><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1abb2712542f3c340bc0ecf76bd343b6b3" kindref="member">BlmcJointModule::update_homing</ref>()</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(homing_state_.<ref refid="structblmc__robots_1_1HomingState_1af821e232c974385ae24e20a7f75665f7" kindref="member">status</ref>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HomingReturnCode::NOT_INITIALIZED:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adeb28005a7160ead68603aed4262508f" kindref="member">set_torque</ref>(0.0);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1af0484dd9efc47843706fc71d4351bdbd" kindref="member">send_torque</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;[%d]<sp/>Homing<sp/>is<sp/>not<sp/>initialized.<sp/><sp/>Abort.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a61557c9cbddb3183ccccafc456a1a00f" kindref="member">joint_id</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HomingReturnCode::FAILED:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>failed,<sp/>send<sp/>zero-torque<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adeb28005a7160ead68603aed4262508f" kindref="member">set_torque</ref>(0.0);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HomingReturnCode::SUCCEEDED:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>succeeded,<sp/>keep<sp/>the<sp/>motor<sp/>at<sp/>the<sp/>home<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>desired_torque<sp/>=</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a3100c088a17264562c67429334e3dbf2" kindref="member">execute_position_controller</ref>(homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a72a681755f52b727ddca35e3811fa5f5" kindref="member">target_position_rad</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adeb28005a7160ead68603aed4262508f" kindref="member">set_torque</ref>(desired_torque);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HomingReturnCode::RUNNING:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>steps<sp/>after<sp/>which<sp/>the<sp/>distance<sp/>limit<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>max_step_count<sp/>=</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::abs(homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a3ce572a7b025bbdf1eaaa5b72dc11dde" kindref="member">search_distance_limit_rad</ref><sp/>/</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a06b1c01870f9531cbe766728603f468b" kindref="member">profile_step_size_rad</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>abort<sp/>if<sp/>distance<sp/>limit<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a16adc4753efe03def5ef3ebf7abc632c" kindref="member">step_count</ref><sp/>&gt;=<sp/>max_step_count)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adeb28005a7160ead68603aed4262508f" kindref="member">set_torque</ref>(0.0);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1af821e232c974385ae24e20a7f75665f7" kindref="member">status</ref><sp/>=<sp/>HomingReturnCode::FAILED;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_printf(</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BlmcJointModule::update_homing():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Failed<sp/>to<sp/>find<sp/>index<sp/>with<sp/>joint<sp/>[%d].\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a61557c9cbddb3183ccccafc456a1a00f" kindref="member">joint_id</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>EXECUTE<sp/>ONE<sp/>STEP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a16adc4753efe03def5ef3ebf7abc632c" kindref="member">step_count</ref>++;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a72a681755f52b727ddca35e3811fa5f5" kindref="member">target_position_rad</ref><sp/>+=</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a06b1c01870f9531cbe766728603f468b" kindref="member">profile_step_size_rad</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_position<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a8c6419cfb80eb5986dffd982df18a817" kindref="member">get_measured_angle</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a16adc4753efe03def5ef3ebf7abc632c" kindref="member">step_count</ref><sp/>%<sp/>100<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;[%d]<sp/>cur:<sp/>%f,\t<sp/>des:<sp/>%f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a61557c9cbddb3183ccccafc456a1a00f" kindref="member">joint_id</ref>,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_position,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a72a681755f52b727ddca35e3811fa5f5" kindref="member">target_position_rad</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>add<sp/>a<sp/>safety<sp/>check<sp/>to<sp/>stop<sp/>if<sp/>following<sp/>error<sp/>gets<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>big.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>desired_torque<sp/>=</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a3100c088a17264562c67429334e3dbf2" kindref="member">execute_position_controller</ref>(homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a72a681755f52b727ddca35e3811fa5f5" kindref="member">target_position_rad</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adeb28005a7160ead68603aed4262508f" kindref="member">set_torque</ref>(desired_torque);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>new<sp/>encoder<sp/>index<sp/>was<sp/>observed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actual_index_time<sp/>=</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1adf5e083076bdc53f24f14f0c22b9061b" kindref="member">get_motor_measurement_index</ref>(mi::encoder_index);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual_index_time<sp/>&gt;<sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a770422e8764a847278e5353e2ebe57a6" kindref="member">last_encoder_index_time_index</ref>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>FINISHED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>index_angle<sp/>=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a47b6a71bb9c300d2398924403a6e7e3c" kindref="member">get_measured_index_angle</ref>();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>end<sp/>position<sp/>of<sp/>the<sp/>homing<sp/>so<sp/>it<sp/>can<sp/>be<sp/>used<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>travelled<sp/>distance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a2ad975823d6b06b3478f11bf6979a0a6" kindref="member">end_position</ref><sp/>=<sp/>index_angle;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>zero<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1ae59680a947539306e391a12ad2d071bb" kindref="member">set_zero_angle</ref>(index_angle<sp/>+<sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1ad8ffa51d7885e6e83dd4b32354184175" kindref="member">home_offset_rad</ref>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>target_position<sp/>according<sp/>to<sp/>the<sp/>new<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a72a681755f52b727ddca35e3811fa5f5" kindref="member">target_position_rad</ref><sp/>-=<sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1abdf774193a8ae31486e937eb432dc702" kindref="member">zero_angle_</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;[%d]<sp/>Zero<sp/>angle<sp/>is=%f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a61557c9cbddb3183ccccafc456a1a00f" kindref="member">joint_id</ref>,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1abdf774193a8ae31486e937eb432dc702" kindref="member">zero_angle_</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;[%d]<sp/>Index<sp/>angle<sp/>is=%f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a61557c9cbddb3183ccccafc456a1a00f" kindref="member">joint_id</ref>,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_angle);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1af821e232c974385ae24e20a7f75665f7" kindref="member">status</ref><sp/>=<sp/>HomingReturnCode::SUCCEEDED;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1af821e232c974385ae24e20a7f75665f7" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1BlmcJointModule_1a9fd53d7e340b4067f3505633e5a8a06d" kindref="member">BlmcJointModule::get_distance_travelled_during_homing</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="433"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(homing_state_.<ref refid="structblmc__robots_1_1HomingState_1af821e232c974385ae24e20a7f75665f7" kindref="member">status</ref><sp/>!=<sp/>HomingReturnCode::SUCCEEDED)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Homing<sp/>status<sp/>needs<sp/>to<sp/>be<sp/>SUCCEEDED<sp/>to<sp/>determine<sp/>travelled<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;distance.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1a2ad975823d6b06b3478f11bf6979a0a6" kindref="member">end_position</ref><sp/>-<sp/>homing_state_.<ref refid="structblmc__robots_1_1HomingState_1ab93d63495fa2eb534a68b8494f8ce5de" kindref="member">start_position</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>blmc_robots</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/blmc_joint_module.cpp"/>
  </compounddef>
</doxygen>
