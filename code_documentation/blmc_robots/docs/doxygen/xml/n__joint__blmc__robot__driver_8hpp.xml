<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="n__joint__blmc__robot__driver_8hpp" kind="file" language="C++">
    <compoundname>n_joint_blmc_robot_driver.hpp</compoundname>
    <includes local="no">array</includes>
    <includes local="no">cmath</includes>
    <includes local="no">iterator</includes>
    <includes local="no">string</includes>
    <includes local="no">yaml-cpp/yaml.h</includes>
    <includes local="no">Eigen/Eigen</includes>
    <includes local="no">yaml_cpp_catkin/yaml_eigen.h</includes>
    <includes local="no">robot_interfaces/monitored_robot_driver.hpp</includes>
    <includes local="no">robot_interfaces/n_joint_robot_types.hpp</includes>
    <includes local="no">robot_interfaces/robot_driver.hpp</includes>
    <includes refid="blmc__joint__module_8hpp" local="no">blmc_robots/blmc_joint_module.hpp</includes>
    <includes refid="clamp_8hpp" local="no">blmc_robots/clamp.hpp</includes>
    <includes refid="common__header_8hpp" local="no">blmc_robots/common_header.hpp</includes>
    <includes refid="n__joint__blmc__robot__driver_8hxx" local="yes">n_joint_blmc_robot_driver.hxx</includes>
    <incdepgraph>
      <node id="425">
        <label>atomic</label>
      </node>
      <node id="409">
        <label>iterator</label>
      </node>
      <node id="429">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="408">
        <label>cmath</label>
      </node>
      <node id="428">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="420">
        <label>stdexcept</label>
      </node>
      <node id="412">
        <label>Eigen/Eigen</label>
      </node>
      <node id="410">
        <label>string</label>
      </node>
      <node id="417">
        <label>blmc_robots/blmc_joint_module.hpp</label>
        <link refid="blmc__joint__module_8hpp"/>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
      </node>
      <node id="427">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="406">
        <label>include/blmc_robots/n_joint_blmc_robot_driver.hpp</label>
        <link refid="n__joint__blmc__robot__driver_8hpp"/>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
      </node>
      <node id="411">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="426">
        <label>real_time_tools/iostream.hpp</label>
      </node>
      <node id="416">
        <label>robot_interfaces/robot_driver.hpp</label>
      </node>
      <node id="435">
        <label>n_joint_blmc_robot_driver.hxx</label>
        <link refid="n__joint__blmc__robot__driver_8hxx"/>
      </node>
      <node id="433">
        <label>vector</label>
      </node>
      <node id="424">
        <label>signal.h</label>
      </node>
      <node id="422">
        <label>blmc_robots/common_header.hpp</label>
        <link refid="common__header_8hpp"/>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
      </node>
      <node id="407">
        <label>array</label>
      </node>
      <node id="423">
        <label>yaml_cpp_catkin/yaml_cpp_fwd.hpp</label>
      </node>
      <node id="418">
        <label>math.h</label>
      </node>
      <node id="432">
        <label>blmc_robots/mathematics/polynome.hxx</label>
        <link refid="polynome_8hxx_source"/>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
      </node>
      <node id="415">
        <label>robot_interfaces/n_joint_robot_types.hpp</label>
      </node>
      <node id="419">
        <label>iostream</label>
      </node>
      <node id="414">
        <label>robot_interfaces/monitored_robot_driver.hpp</label>
      </node>
      <node id="413">
        <label>yaml_cpp_catkin/yaml_eigen.h</label>
      </node>
      <node id="431">
        <label>blmc_robots/mathematics/polynome.hpp</label>
        <link refid="polynome_8hpp"/>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
      </node>
      <node id="430">
        <label>blmc_drivers/devices/analog_sensor.hpp</label>
      </node>
      <node id="421">
        <label>blmc_drivers/devices/motor.hpp</label>
      </node>
      <node id="434">
        <label>blmc_robots/clamp.hpp</label>
        <link refid="clamp_8hpp"/>
      </node>
    </incdepgraph>
    <innerclass refid="structblmc__robots_1_1MotorParameters" prot="public">blmc_robots::MotorParameters</innerclass>
    <innerclass refid="classblmc__robots_1_1NJointBlmcRobotDriver" prot="public">blmc_robots::NJointBlmcRobotDriver</innerclass>
    <innerclass refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config" prot="public">blmc_robots::NJointBlmcRobotDriver::Config</innerclass>
    <innerclass refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1_1TrajectoryStep" prot="public">blmc_robots::NJointBlmcRobotDriver::Config::TrajectoryStep</innerclass>
    <innerclass refid="classblmc__robots_1_1SimpleNJointBlmcRobotDriver" prot="public">blmc_robots::SimpleNJointBlmcRobotDriver</innerclass>
    <innernamespace refid="namespaceblmc__robots">blmc_robots</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="n__joint__blmc__robot__driver_8hpp_1a8f0c3d2c5211dc9fd38c4d64bdcf77cb" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector endstop_search_torques_Nm</definition>
        <argsstring></argsstring>
        <name>endstop_search_torques_Nm</name>
        <initializer>= Vector::Zero()</initializer>
        <briefdescription>
<para>Torque that is used to find the end stop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="325" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="n__joint__blmc__robot__driver_8hpp_1afdd12622d686b2b39d6c1e41e1eac263" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t move_steps</definition>
        <argsstring></argsstring>
        <name>move_steps</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Number of time steps for reaching the initial position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="327" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="n__joint__blmc__robot__driver_8hpp_1ac3da728256c1e02cf56f80c0fbdf647a" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector kp</definition>
        <argsstring></argsstring>
        <name>kp</name>
        <initializer>= Vector::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="341" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="n__joint__blmc__robot__driver_8hpp_1a3f6b03adc12f35015b64b4b09fbb7062" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector kd</definition>
        <argsstring></argsstring>
        <name>kd</name>
        <initializer>= Vector::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp" line="342" column="1" bodyfile="include/blmc_robots/n_joint_blmc_robot_driver.hpp" bodystart="342" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base driver for a generic n-joint BLMC robot. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;yaml-cpp/yaml.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Eigen&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;yaml_cpp_catkin/yaml_eigen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;robot_interfaces/monitored_robot_driver.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;robot_interfaces/n_joint_robot_types.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;robot_interfaces/robot_driver.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="blmc__joint__module_8hpp" kindref="compound">blmc_robots/blmc_joint_module.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="clamp_8hpp" kindref="compound">blmc_robots/clamp.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="common__header_8hpp" kindref="compound">blmc_robots/common_header.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceblmc__robots" kindref="compound">blmc_robots</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32" refid="structblmc__robots_1_1MotorParameters" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structblmc__robots_1_1MotorParameters" kindref="compound">MotorParameters</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35" refid="structblmc__robots_1_1MotorParameters_1a960e7f64dae8cd08837f8bff620eacfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structblmc__robots_1_1MotorParameters_1a960e7f64dae8cd08837f8bff620eacfb" kindref="member">torque_constant_NmpA</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structblmc__robots_1_1MotorParameters_1a6a8158b9ac1633bab6181043d04ab655" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structblmc__robots_1_1MotorParameters_1a6a8158b9ac1633bab6181043d04ab655" kindref="member">gear_ratio</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Observation,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N_JOINTS,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N_MOTOR_BOARDS&gt;</highlight></codeline>
<codeline lineno="56" refid="classblmc__robots_1_1NJointBlmcRobotDriver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classblmc__robots_1_1NJointBlmcRobotDriver" kindref="compound">NJointBlmcRobotDriver</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>robot_interfaces::RobotDriver&lt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>robot_interfaces::NJointAction&lt;N_JOINTS&gt;,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observation&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_joints<sp/>=<sp/>N_JOINTS;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_motor_boards<sp/>=<sp/>N_MOTOR_BOARDS;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>robot_interfaces::NJointAction&lt;N_JOINTS&gt;<sp/>Action;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>robot_interfaces::RobotInterfaceTypes&lt;Action,<sp/>Observation&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Types;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action::Vector<sp/>Vector;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::array&lt;std::shared_ptr&lt;blmc_drivers::MotorInterface&gt;,<sp/>N_JOINTS&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Motors;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::array&lt;std::shared_ptr&lt;blmc_drivers::CanBusMotorBoard&gt;,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_MOTOR_BOARDS&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MotorBoards;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classblmc__robots_1_1NJointBlmcRobotDriver_1a584b85a9e8356e4afcdf1559edd700cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Config;<sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>declaration<sp/>see<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1NJointBlmcRobotDriver_1a584b85a9e8356e4afcdf1559edd700cc" kindref="member">has_endstop_</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1NJointBlmcRobotDriver" kindref="compound">NJointBlmcRobotDriver</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MotorBoards<sp/>&amp;motor_boards,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Motors<sp/>&amp;motors,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structblmc__robots_1_1MotorParameters" kindref="compound">MotorParameters</ref><sp/>&amp;motor_parameters,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Config<sp/>&amp;config)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>robot_interfaces::RobotDriver&lt;Action,<sp/>Observation&gt;(),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_endstop_(config.has_endstop),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joint_modules_(motors,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor_parameters.<ref refid="structblmc__robots_1_1MotorParameters_1a960e7f64dae8cd08837f8bff620eacfb" kindref="member">torque_constant_NmpA</ref><sp/>*<sp/>Vector::Ones(),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor_parameters.<ref refid="structblmc__robots_1_1MotorParameters_1a6a8158b9ac1633bab6181043d04ab655" kindref="member">gear_ratio</ref><sp/>*<sp/>Vector::Ones(),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector::Zero(),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.max_current_A<sp/>*<sp/>Vector::Ones()),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor_boards_(motor_boards),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor_parameters_(motor_parameters),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_torque_Nm_(config.max_current_A<sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor_parameters.<ref refid="structblmc__robots_1_1MotorParameters_1a960e7f64dae8cd08837f8bff620eacfb" kindref="member">torque_constant_NmpA</ref><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor_parameters.<ref refid="structblmc__robots_1_1MotorParameters_1a6a8158b9ac1633bab6181043d04ab655" kindref="member">gear_ratio</ref>),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_(config)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pause_motors();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MotorBoards<sp/>create_motor_boards(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;std::string,<sp/>N_MOTOR_BOARDS&gt;<sp/>&amp;can_ports);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>get_max_torques()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="117"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_torque_Nm_<sp/>*<sp/>Vector::Ones();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pause_motors();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>get_measured_index_angles()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Observation<sp/>get_latest_observation()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>Action<sp/>apply_action(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Action<sp/>&amp;desired_action)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>get_error()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shutdown()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Action<sp/>process_desired_action(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Action<sp/>&amp;desired_action,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Observation<sp/>&amp;latest_observation,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_torque_Nm,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector<sp/>&amp;safety_kd,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector<sp/>&amp;default_position_control_kp,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector<sp/>&amp;default_position_control_kd,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector<sp/>&amp;lower_position_limits<sp/>=</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector::Constant(-std::numeric_limits&lt;double&gt;::infinity()),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector<sp/>&amp;upper_position_limits<sp/>=</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector::Constant(std::numeric_limits&lt;double&gt;::infinity()));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_within_hard_position_limits(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Observation<sp/>&amp;observation)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1BlmcJointModules" kindref="compound">BlmcJointModules&lt;N_JOINTS&gt;</ref><sp/>joint_modules_;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>MotorBoards<sp/>motor_boards_;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classblmc__robots_1_1NJointBlmcRobotDriver_1ad5e1875908bb62b2f014c3f8dfce969d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structblmc__robots_1_1MotorParameters" kindref="compound">MotorParameters</ref><sp/><ref refid="classblmc__robots_1_1NJointBlmcRobotDriver_1ad5e1875908bb62b2f014c3f8dfce969d" kindref="member">motor_parameters_</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="classblmc__robots_1_1NJointBlmcRobotDriver_1a62f708a1406f8dfb68361c5698a5559b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1NJointBlmcRobotDriver_1a62f708a1406f8dfb68361c5698a5559b" kindref="member">max_torque_Nm_</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classblmc__robots_1_1NJointBlmcRobotDriver_1a5af27a320384e0189725ee1b13edc314" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Config<sp/><ref refid="classblmc__robots_1_1NJointBlmcRobotDriver_1a5af27a320384e0189725ee1b13edc314" kindref="member">config_</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_initialized_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>Action<sp/>apply_action_uninitialized(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Action<sp/>&amp;desired_action);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_initialize();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>homing(Vector<sp/><ref refid="n__joint__blmc__robot__driver_8hpp_1a8f0c3d2c5211dc9fd38c4d64bdcf77cb" kindref="member">endstop_search_torques_Nm</ref>,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector<sp/>home_offset_rad<sp/>=<sp/>Vector::Zero());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>move_to_position(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector<sp/>&amp;goal_pos,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>time_steps);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Observation,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N_JOINTS,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N_MOTOR_BOARDS&gt;</highlight></codeline>
<codeline lineno="279" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classblmc__robots_1_1NJointBlmcRobotDriver" kindref="compound">NJointBlmcRobotDriver</ref>&lt;Observation,<sp/>N_JOINTS,<sp/>N_MOTOR_BOARDS&gt;::<ref refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config" kindref="compound">Config</ref></highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::array&lt;std::string,<sp/>N_MOTOR_BOARDS&gt;<sp/>CanPortArray;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1_1TrajectoryStep" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1_1TrajectoryStep" kindref="compound">TrajectoryStep</ref></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1_1TrajectoryStep_1a3c03278743cdf69bf8703b8aa79fcfa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector<sp/>target_position_rad<sp/>=<sp/>Vector::Zero();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1_1TrajectoryStep_1a7f25136ce7f8bfdbb2e049adee6d9312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="n__joint__blmc__robot__driver_8hpp_1afdd12622d686b2b39d6c1e41e1eac263" kindref="member">move_steps</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>parameters<sp/>should<sp/>have<sp/>default<sp/>values<sp/>that<sp/>should<sp/>not<sp/>result<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dangerous<sp/>behaviour<sp/>in<sp/>case<sp/>someone<sp/>forgets<sp/>to<sp/>specify<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a4e59e7c7ac5daba34f83eb8f1456a103" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CanPortArray<sp/><ref refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a4e59e7c7ac5daba34f83eb8f1456a103" kindref="member">can_ports</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a553c5cb5a9da1f0c5e5f9e4c2e19c286" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_current_A<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a8fb4f2f8ae75bf1555cd6c3ea5272541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_endstop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325" refid="n__joint__blmc__robot__driver_8hpp_1a8f0c3d2c5211dc9fd38c4d64bdcf77cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector<sp/><ref refid="n__joint__blmc__robot__driver_8hpp_1a8f0c3d2c5211dc9fd38c4d64bdcf77cb" kindref="member">endstop_search_torques_Nm</ref><sp/>=<sp/>Vector::Zero();</highlight></codeline>
<codeline lineno="327" refid="n__joint__blmc__robot__driver_8hpp_1afdd12622d686b2b39d6c1e41e1eac263" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="n__joint__blmc__robot__driver_8hpp_1afdd12622d686b2b39d6c1e41e1eac263" kindref="member">move_steps</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>calibration;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1ab4093c960a915b4ee5fdfde0684e3969" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>move_to_position_tolerance_rad<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>some<sp/>rather<sp/>high<sp/>damping<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a4e0c7fdf26616be5d67a9be7ee2452c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>safety_kd<sp/>=<sp/>Vector::Constant(0.1);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector<sp/>kp<sp/>=<sp/>Vector::Zero();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector<sp/>kd<sp/>=<sp/>Vector::Zero();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>position_control_gains;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a8acf96c93bad0de685708962474fa662" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>hard_position_limits_lower<sp/>=<sp/>Vector::Zero();</highlight></codeline>
<codeline lineno="356" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a7fbf059f76b04dc531a0d10e92fc066d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>hard_position_limits_upper<sp/>=<sp/>Vector::Zero();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a18a496c6cf2f794930ee72f2746e223f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>soft_position_limits_lower<sp/>=</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector::Constant(-std::numeric_limits&lt;double&gt;::infinity());</highlight></codeline>
<codeline lineno="372" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a06ae5378a2d4f7d19a3e8b501651bfbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>soft_position_limits_upper<sp/>=</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector::Constant(std::numeric_limits&lt;double&gt;::infinity());</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a432b086d9f6258c036098a75501c3dab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>home_offset_rad<sp/>=<sp/>Vector::Zero();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a448a4d4166184f4b5f53be4ad60eec7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>initial_position_rad<sp/>=<sp/>Vector::Zero();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a1f241f65d2b50b3bb5b4b83837dbaae8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TrajectoryStep&gt;<sp/><ref refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config_1a1f241f65d2b50b3bb5b4b83837dbaae8" kindref="member">shutdown_trajectory</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_within_hard_position_limits(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector<sp/>&amp;position)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structblmc__robots_1_1NJointBlmcRobotDriver_1_1Config" kindref="compound">Config</ref><sp/>load_config(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;config_file_name);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_config_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YAML::Node<sp/>&amp;user_config,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*var);</highlight></codeline>
<codeline lineno="439"><highlight class="normal">};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N_JOINTS,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N_MOTOR_BOARDS<sp/>=<sp/>(N_JOINTS<sp/>+<sp/>1)<sp/>/<sp/>2&gt;</highlight></codeline>
<codeline lineno="448" refid="classblmc__robots_1_1SimpleNJointBlmcRobotDriver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1SimpleNJointBlmcRobotDriver" kindref="compound">SimpleNJointBlmcRobotDriver</ref></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1NJointBlmcRobotDriver" kindref="compound">NJointBlmcRobotDriver</ref>&lt;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_interfaces::NJointObservation&lt;N_JOINTS&gt;,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_JOINTS,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_MOTOR_BOARDS&gt;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>robot_interfaces::NJointObservation&lt;N_JOINTS&gt;<sp/>Observation;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1NJointBlmcRobotDriver" kindref="compound">NJointBlmcRobotDriver&lt;robot_interfaces::NJointObservation&lt;N_JOINTS&gt;</ref>,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_JOINTS,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_MOTOR_BOARDS&gt;<ref refid="classblmc__robots_1_1NJointBlmcRobotDriver" kindref="compound">::NJointBlmcRobotDriver</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>Observation<sp/>get_latest_observation()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal">};</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Driver&gt;</highlight></codeline>
<codeline lineno="478" refid="n__joint__blmc__robot__driver_8hpp_1a988c07200135ba12bf9ec1bbe955bde8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Driver::Types::BackendPtr<sp/><ref refid="n__joint__blmc__robot__driver_8hpp_1a988c07200135ba12bf9ec1bbe955bde8" kindref="member">create_backend</ref>(</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Driver::Types::BaseDataPtr<sp/>robot_data,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;config_file_path,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first_action_timeout<sp/>=<sp/>std::numeric_limits&lt;double&gt;::infinity())</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MAX_ACTION_DURATION_S<sp/>=<sp/>0.003;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MAX_INTER_ACTION_DURATION_S<sp/>=<sp/>0.005;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>robot<sp/>driver<sp/>configuration<sp/>from<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>config_file_path<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>config<sp/>=<sp/>Driver::Config::load_config(config_file_path);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>config.print();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrap<sp/>the<sp/>actual<sp/>robot<sp/>driver<sp/>directly<sp/>in<sp/>a<sp/>MonitoredRobotDriver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>monitored_driver<sp/>=</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;robot_interfaces::MonitoredRobotDriver&lt;Driver&gt;&gt;(</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;Driver&gt;(config),</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_ACTION_DURATION_S,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_INTER_ACTION_DURATION_S);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>real_time_mode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>backend<sp/>=<sp/>std::make_shared&lt;typename<sp/>Driver::Types::Backend&gt;(</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monitored_driver,<sp/>robot_data,<sp/>real_time_mode,<sp/>first_action_timeout);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>backend-&gt;set_max_action_repetitions(std::numeric_limits&lt;uint32_t&gt;::max());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>backend;</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>blmc_robots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="n__joint__blmc__robot__driver_8hxx" kindref="compound">n_joint_blmc_robot_driver.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/blmc_robots/n_joint_blmc_robot_driver.hpp"/>
  </compounddef>
</doxygen>
