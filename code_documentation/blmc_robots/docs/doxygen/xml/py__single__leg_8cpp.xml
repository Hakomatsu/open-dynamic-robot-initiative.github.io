<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="py__single__leg_8cpp" kind="file" language="C++">
    <compoundname>py_single_leg.cpp</compoundname>
    <includes local="no">pybind11/eigen.h</includes>
    <includes local="no">pybind11/pybind11.h</includes>
    <includes local="no">pybind11/stl_bind.h</includes>
    <includes refid="single__leg_8hpp" local="no">blmc_robots/single_leg.hpp</includes>
    <incdepgraph>
      <node id="1003">
        <label>atomic</label>
      </node>
      <node id="1007">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="988">
        <label>srcpy/py_single_leg.cpp</label>
        <link refid="py__single__leg_8cpp"/>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
      </node>
      <node id="1006">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="998">
        <label>stdexcept</label>
      </node>
      <node id="995">
        <label>Eigen/Eigen</label>
      </node>
      <node id="989">
        <label>pybind11/eigen.h</label>
      </node>
      <node id="993">
        <label>blmc_robots/blmc_joint_module.hpp</label>
        <link refid="blmc__joint__module_8hpp"/>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="998" relation="include">
        </childnode>
        <childnode refid="999" relation="include">
        </childnode>
        <childnode refid="1000" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
      </node>
      <node id="1005">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="1004">
        <label>real_time_tools/iostream.hpp</label>
      </node>
      <node id="1011">
        <label>vector</label>
      </node>
      <node id="1002">
        <label>signal.h</label>
      </node>
      <node id="992">
        <label>blmc_robots/single_leg.hpp</label>
        <link refid="single__leg_8hpp"/>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="1000" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
      </node>
      <node id="1000">
        <label>blmc_robots/common_header.hpp</label>
        <link refid="common__header_8hpp"/>
        <childnode refid="1001" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="1002" relation="include">
        </childnode>
        <childnode refid="1003" relation="include">
        </childnode>
        <childnode refid="1004" relation="include">
        </childnode>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="999" relation="include">
        </childnode>
      </node>
      <node id="996">
        <label>array</label>
      </node>
      <node id="990">
        <label>pybind11/pybind11.h</label>
      </node>
      <node id="1001">
        <label>yaml_cpp_catkin/yaml_cpp_fwd.hpp</label>
      </node>
      <node id="994">
        <label>math.h</label>
      </node>
      <node id="1010">
        <label>blmc_robots/mathematics/polynome.hxx</label>
        <link refid="polynome_8hxx_source"/>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
      </node>
      <node id="997">
        <label>iostream</label>
      </node>
      <node id="1009">
        <label>blmc_robots/mathematics/polynome.hpp</label>
        <link refid="polynome_8hpp"/>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
      </node>
      <node id="1008">
        <label>blmc_drivers/devices/analog_sensor.hpp</label>
      </node>
      <node id="999">
        <label>blmc_drivers/devices/motor.hpp</label>
      </node>
      <node id="1012">
        <label>blmc_robots/slider.hpp</label>
        <link refid="slider_8hpp"/>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="1000" relation="include">
        </childnode>
      </node>
      <node id="991">
        <label>pybind11/stl_bind.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="py__single__leg_8cpp_1a5a47ad995ae87ee95e94eeea9d260aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PYBIND11_MODULE</definition>
        <argsstring>(blmc_single_leg, m)</argsstring>
        <name>PYBIND11_MODULE</name>
        <param>
          <type>blmc_single_leg</type>
        </param>
        <param>
          <type>m</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcpy/py_single_leg.cpp" line="27" column="1" bodyfile="srcpy/py_single_leg.cpp" bodystart="27" bodyend="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>[2017]<sp/>Max<sp/>Planck<sp/>Society.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/eigen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/stl_bind.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="single__leg_8hpp" kindref="compound">blmc_robots/single_leg.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>=<sp/>pybind11;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceblmc__robots" kindref="compound">blmc_robots</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">PYBIND11_MODULE(blmc_single_leg,<sp/>m)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>binding<sp/>of<sp/>stl<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>py::bind_vector&lt;std::vector&lt;Eigen::Vector3d&gt;&gt;(m,<sp/>&quot;ArrayVector3d&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>py::bind_vector&lt;std::vector&lt;KinematicsState&gt;&gt;(m,<sp/>&quot;KinStateVector&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>py::bind_vector&lt;std::vector&lt;Eigen::MatrixXd&gt;&gt;(m,<sp/>&quot;JacobianVector&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>py::class_&lt;SingleLeg&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;SingleLeg&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(py::init&lt;&gt;())</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;initialize&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1a28891a4273cdcabc67bfd04dae75e8db" kindref="member">SingleLeg::initialize</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;acquire_sensors&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1a093a696ad34f00e92adcc4eb282a37d9" kindref="member">SingleLeg::acquire_sensors</ref>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;send_target_joint_torque&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1a0525a29e9b76527936525ca0e47cafe0" kindref="member">SingleLeg::send_target_joint_torque</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;target_joint_torque&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_joint_positions&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1ad69364827ba1f041bb45aec9ff678a74" kindref="member">SingleLeg::get_joint_positions</ref>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_joint_velocities&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1aad4d838300a95db9e5e78aa465601591" kindref="member">SingleLeg::get_joint_velocities</ref>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_motor_positions&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1a52324fdf9779bb82141e2056b222b30f" kindref="member">SingleLeg::get_motor_positions</ref>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_motor_velocities&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1afd9b40fdddedd93e2a92114862846a5e" kindref="member">SingleLeg::get_motor_velocities</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;zero_joint_positions&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1a2d95b70a9aca9f7faf503fd5c62f067f" kindref="member">SingleLeg::zero_joint_positions</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_slider_positions&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1aa0b97287dcf0195fe918e1b4c0e7b470" kindref="member">SingleLeg::get_slider_positions</ref>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;set_max_current&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1a54007e95c258ec05b63169f202d3a3a0" kindref="member">SingleLeg::set_max_current</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;disable_can_recv_timeout&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1SingleLeg_1a39c69c6578b42df3d556e8a23c3e1861" kindref="member">SingleLeg::disable_can_recv_timeout</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="srcpy/py_single_leg.cpp"/>
  </compounddef>
</doxygen>
