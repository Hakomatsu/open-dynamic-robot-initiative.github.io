<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="py__solo12_8cpp" kind="file" language="C++">
    <compoundname>py_solo12.cpp</compoundname>
    <includes local="no">pybind11/eigen.h</includes>
    <includes local="no">pybind11/pybind11.h</includes>
    <includes local="no">pybind11/stl_bind.h</includes>
    <includes refid="solo12_8hpp" local="no">blmc_robots/solo12.hpp</includes>
    <incdepgraph>
      <node id="1024">
        <label>atomic</label>
      </node>
      <node id="1028">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="1027">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="1036">
        <label>stdexcept</label>
      </node>
      <node id="1022">
        <label>Eigen/Eigen</label>
      </node>
      <node id="1015">
        <label>pybind11/eigen.h</label>
      </node>
      <node id="1032">
        <label>blmc_robots/blmc_joint_module.hpp</label>
        <link refid="blmc__joint__module_8hpp"/>
        <childnode refid="1033" relation="include">
        </childnode>
        <childnode refid="1022" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
      </node>
      <node id="1019">
        <label>blmc_drivers/devices/spi_motor_board.hpp</label>
      </node>
      <node id="1026">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="1025">
        <label>real_time_tools/iostream.hpp</label>
      </node>
      <node id="1014">
        <label>srcpy/py_solo12.cpp</label>
        <link refid="py__solo12_8cpp"/>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1016" relation="include">
        </childnode>
        <childnode refid="1017" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
      </node>
      <node id="1039">
        <label>vector</label>
      </node>
      <node id="1023">
        <label>signal.h</label>
      </node>
      <node id="1020">
        <label>blmc_robots/common_header.hpp</label>
        <link refid="common__header_8hpp"/>
        <childnode refid="1021" relation="include">
        </childnode>
        <childnode refid="1022" relation="include">
        </childnode>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1024" relation="include">
        </childnode>
        <childnode refid="1025" relation="include">
        </childnode>
        <childnode refid="1026" relation="include">
        </childnode>
        <childnode refid="1027" relation="include">
        </childnode>
        <childnode refid="1028" relation="include">
        </childnode>
        <childnode refid="1029" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1034">
        <label>array</label>
      </node>
      <node id="1016">
        <label>pybind11/pybind11.h</label>
      </node>
      <node id="1021">
        <label>yaml_cpp_catkin/yaml_cpp_fwd.hpp</label>
      </node>
      <node id="1033">
        <label>math.h</label>
      </node>
      <node id="1038">
        <label>blmc_robots/mathematics/polynome.hxx</label>
        <link refid="polynome_8hxx_source"/>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
      </node>
      <node id="1035">
        <label>iostream</label>
      </node>
      <node id="1037">
        <label>blmc_robots/mathematics/polynome.hpp</label>
        <link refid="polynome_8hpp"/>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1031">
        <label>blmc_drivers/serial_reader.hpp</label>
      </node>
      <node id="1029">
        <label>blmc_drivers/devices/analog_sensor.hpp</label>
      </node>
      <node id="1030">
        <label>blmc_drivers/devices/motor.hpp</label>
      </node>
      <node id="1017">
        <label>pybind11/stl_bind.h</label>
      </node>
      <node id="1018">
        <label>blmc_robots/solo12.hpp</label>
        <link refid="solo12_8hpp"/>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1032" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="py__solo12_8cpp_1a85604720e297371f225aa742aeed86c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PYBIND11_MODULE</definition>
        <argsstring>(py_solo12, m)</argsstring>
        <name>PYBIND11_MODULE</name>
        <param>
          <type>py_solo12</type>
        </param>
        <param>
          <type>m</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcpy/py_solo12.cpp" line="27" column="1" bodyfile="srcpy/py_solo12.cpp" bodystart="27" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>[2017]<sp/>Max<sp/>Planck<sp/>Society.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/eigen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/stl_bind.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="solo12_8hpp" kindref="compound">blmc_robots/solo12.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>=<sp/>pybind11;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceblmc__robots" kindref="compound">blmc_robots</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">PYBIND11_MODULE(py_solo12,<sp/>m)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>binding<sp/>of<sp/>stl<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>py::bind_vector&lt;std::vector&lt;Eigen::Vector3d&gt;&gt;(m,<sp/>&quot;ArrayVector3d&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>py::bind_vector&lt;std::vector&lt;KinematicsState&gt;&gt;(m,<sp/>&quot;KinStateVector&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>py::bind_vector&lt;std::vector&lt;Eigen::MatrixXd&gt;&gt;(m,<sp/>&quot;JacobianVector&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>py::class_&lt;Solo12&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;Solo12&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(py::init&lt;&gt;())</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;initialize&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1ae3b1480bc12a079939b627950d55f66a" kindref="member">Solo12::initialize</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;interface_name&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;serial_port&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;acquire_sensors&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1aad9581cdcb139a49dbfb4673f18f7968" kindref="member">Solo12::acquire_sensors</ref>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;send_target_joint_torque&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1a7f9bbd57bf8f0a9d54542c249c03fb47" kindref="member">Solo12::send_target_joint_torque</ref>,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;target_joint_torque&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;set_max_joint_torques&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1a9f0d4a95fd4f82681f78dda1d519e5f9" kindref="member">Solo12::set_max_joint_torques</ref>,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;max_joint_torques&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_motor_board_errors&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1aac115dccae0a43c10ace81a348f86182" kindref="member">Solo12::get_motor_board_errors</ref>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_motor_board_enabled&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1af9265895ea76870eeeec913cb6794806" kindref="member">Solo12::get_motor_board_enabled</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_motor_enabled&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1a079e0ab1f33cb8e6cae03a85f58e8c4f" kindref="member">Solo12::get_motor_enabled</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_motor_ready&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1a37584471402cef8cf854d69bdbac98eb" kindref="member">Solo12::get_motor_ready</ref>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_slider_positions&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1a2881a38d56aece096ca2c0ca42f2d56c" kindref="member">Solo12::get_slider_positions</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_joint_positions&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1a6ce3b791bba7cc37621a63ee6447c9c0" kindref="member">Solo12::get_joint_positions</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_joint_velocities&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classblmc__robots_1_1Solo12_1aa0a6eb846038b644b425c1efd4c8a81f" kindref="member">Solo12::get_joint_velocities</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="srcpy/py_solo12.cpp"/>
  </compounddef>
</doxygen>
