<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="single__leg_8cpp" kind="file" language="C++">
    <compoundname>single_leg.cpp</compoundname>
    <includes refid="single__leg_8hpp" local="yes">blmc_robots/single_leg.hpp</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="816">
        <label>atomic</label>
      </node>
      <node id="820">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="819">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="811">
        <label>stdexcept</label>
      </node>
      <node id="808">
        <label>Eigen/Eigen</label>
      </node>
      <node id="804">
        <label>src/single_leg.cpp</label>
        <link refid="single__leg_8cpp"/>
        <childnode refid="805" relation="include">
        </childnode>
        <childnode refid="807" relation="include">
        </childnode>
      </node>
      <node id="806">
        <label>blmc_robots/blmc_joint_module.hpp</label>
        <link refid="blmc__joint__module_8hpp"/>
        <childnode refid="807" relation="include">
        </childnode>
        <childnode refid="808" relation="include">
        </childnode>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="810" relation="include">
        </childnode>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="812" relation="include">
        </childnode>
        <childnode refid="813" relation="include">
        </childnode>
        <childnode refid="822" relation="include">
        </childnode>
      </node>
      <node id="818">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="817">
        <label>real_time_tools/iostream.hpp</label>
      </node>
      <node id="824">
        <label>vector</label>
      </node>
      <node id="815">
        <label>signal.h</label>
      </node>
      <node id="805">
        <label>blmc_robots/single_leg.hpp</label>
        <link refid="single__leg_8hpp"/>
        <childnode refid="806" relation="include">
        </childnode>
        <childnode refid="813" relation="include">
        </childnode>
        <childnode refid="825" relation="include">
        </childnode>
      </node>
      <node id="813">
        <label>blmc_robots/common_header.hpp</label>
        <link refid="common__header_8hpp"/>
        <childnode refid="814" relation="include">
        </childnode>
        <childnode refid="808" relation="include">
        </childnode>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="816" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="818" relation="include">
        </childnode>
        <childnode refid="819" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
        <childnode refid="821" relation="include">
        </childnode>
        <childnode refid="812" relation="include">
        </childnode>
      </node>
      <node id="809">
        <label>array</label>
      </node>
      <node id="814">
        <label>yaml_cpp_catkin/yaml_cpp_fwd.hpp</label>
      </node>
      <node id="807">
        <label>math.h</label>
      </node>
      <node id="823">
        <label>blmc_robots/mathematics/polynome.hxx</label>
        <link refid="polynome_8hxx_source"/>
        <childnode refid="810" relation="include">
        </childnode>
        <childnode refid="824" relation="include">
        </childnode>
        <childnode refid="822" relation="include">
        </childnode>
      </node>
      <node id="810">
        <label>iostream</label>
      </node>
      <node id="822">
        <label>blmc_robots/mathematics/polynome.hpp</label>
        <link refid="polynome_8hpp"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
      </node>
      <node id="821">
        <label>blmc_drivers/devices/analog_sensor.hpp</label>
      </node>
      <node id="812">
        <label>blmc_drivers/devices/motor.hpp</label>
      </node>
      <node id="825">
        <label>blmc_robots/slider.hpp</label>
        <link refid="slider_8hpp"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="807" relation="include">
        </childnode>
        <childnode refid="808" relation="include">
        </childnode>
        <childnode refid="821" relation="include">
        </childnode>
        <childnode refid="813" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceblmc__robots">blmc_robots</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="single__leg_8hpp" kindref="compound">blmc_robots/single_leg.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceblmc__robots" kindref="compound">blmc_robots</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="classblmc__robots_1_1SingleLeg_1a1b1ef6964010aa2042b042ff3d5d864f" kindref="member">SingleLeg::SingleLeg</ref>()</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1aca1dec9ed5af5052f23942731ac99386" kindref="member">motor_positions_</ref>.setZero();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ad74f4bc6470b2595f76c1eed9f241a1c" kindref="member">motor_velocities_</ref>.setZero();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ab413e5ad446472e722874e579b2ea8a8" kindref="member">motor_currents_</ref>.setZero();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a08fb7a64361ca008694995d7dda73229" kindref="member">motor_torques_</ref>.setZero();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a53d12d5e709c863be176643697785729" kindref="member">motor_inertias_</ref>.setZero();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a8ac67df4a61c02ca927bbcab5c4bab0b" kindref="member">motor_encoder_indexes_</ref>.fill(std::nan(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a1727423baf1d924c5c38b5da82760daa" kindref="member">motor_target_currents_</ref>.setZero();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a877ea486d60de86dda6f2f584483cd63" kindref="member">motor_target_torques_</ref>.setZero();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1acc9db4fea29151b45841b63a75d6cb18" kindref="member">motor_torque_constants_</ref>.setZero();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a5408963ab970855f3ab0c5fc0fb51803" kindref="member">target_motor_current_tmp_</ref>.setZero();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ad74d44ab47c78a46c2ba6a7aa9e71750" kindref="member">joint_positions_</ref>.setZero();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ac383a1f260a35e47584ae7dd79be801c" kindref="member">joint_velocities_</ref>.setZero();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a1662005c929cff8e429ead0d5bbdee87" kindref="member">joint_torques_</ref>.setZero();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a9c62fe22181054c020d0e10d1a68926c" kindref="member">joint_target_torques_</ref>.setZero();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>.setZero();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a757c6d5527c7914bdb30b8ee96a8df8d" kindref="member">joint_zero_positions_</ref>.setZero();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1af841dc84f18c70c85bb0e19dd88da85f" kindref="member">slider_positions_</ref>.setZero();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a4f8e64b30e001d4b1c74595841c26735" kindref="member">motor_max_current_</ref>.setZero();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>now<sp/>this<sp/>value<sp/>is<sp/>very<sp/>small<sp/>but<sp/>it<sp/>is<sp/>currently<sp/>for<sp/>debug<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>this<sp/>should<sp/>go<sp/>into<sp/>a<sp/>YAML<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a4f8e64b30e001d4b1c74595841c26735" kindref="member">motor_max_current_</ref>.fill(2.);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1acc9db4fea29151b45841b63a75d6cb18" kindref="member">motor_torque_constants_</ref>.fill(0.025);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a53d12d5e709c863be176643697785729" kindref="member">motor_inertias_</ref>.fill(0.045);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>.fill(9.0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1afb76b1c90cce0d805aa4baaa9b4de797" kindref="member">joint_max_torque_</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a4f8e64b30e001d4b1c74595841c26735" kindref="member">motor_max_current_</ref>.array()<sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1acc9db4fea29151b45841b63a75d6cb18" kindref="member">motor_torque_constants_</ref>.array()<sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>.array();</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a28891a4273cdcabc67bfd04dae75e8db" kindref="member">SingleLeg::initialize</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>communication<sp/>with<sp/>the<sp/>can<sp/>cards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(unsigned<sp/>i=0<sp/>;<sp/>i&lt;<sp/>can_buses_.size()<sp/>;<sp/>++i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a021418412c79cfa868bfffec24155ef8" kindref="member">can_buses_</ref>[i]<sp/>=<sp/>std::make_shared&lt;blmc_drivers::CanBus&gt;(oss.str());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a133902cdf8468f2cf8849fdc6daed312" kindref="member">can_motor_boards_</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;blmc_drivers::CanBusMotorBoard&gt;(<ref refid="classblmc__robots_1_1SingleLeg_1a021418412c79cfa868bfffec24155ef8" kindref="member">can_buses_</ref>[i]);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a009823b7c3e817eabb6e572406460d2f" kindref="member">sliders_</ref>[0]<sp/>=</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;blmc_drivers::AnalogSensor&gt;(<ref refid="classblmc__robots_1_1SingleLeg_1a133902cdf8468f2cf8849fdc6daed312" kindref="member">can_motor_boards_</ref>[0],<sp/>0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>sliders_[1]<sp/>=</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;blmc_drivers::AnalogSensor&gt;(can_motor_boards_[0],<sp/>1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MOTOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ac2964b955b883496833cd5d00ab2b1c7" kindref="member">motors_</ref>[0]<sp/>=<sp/>std::make_shared&lt;blmc_drivers::SafeMotor&gt;(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_motor_boards_[0],<sp/>0,<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a4f8e64b30e001d4b1c74595841c26735" kindref="member">motor_max_current_</ref>[0]);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>motors_[1]<sp/>=<sp/>std::make_shared&lt;blmc_drivers::SafeMotor&gt;(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_motor_boards_[0],<sp/>1,<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a4f8e64b30e001d4b1c74595841c26735" kindref="member">motor_max_current_</ref>[1]);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>method<sp/>to<sp/>sync<sp/>the<sp/>max<sp/>current<sp/>with<sp/>the<sp/>max<sp/>torques.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a54007e95c258ec05b63169f202d3a3a0" kindref="member">set_max_current</ref>(<ref refid="classblmc__robots_1_1SingleLeg_1a4f8e64b30e001d4b1c74595841c26735" kindref="member">motor_max_current_</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_motor_boards_[i]-&gt;wait_until_ready();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>to<sp/>make<sp/>sure<sp/>there<sp/>is<sp/>a<sp/>first<sp/>package<sp/>when<sp/>acquire_sensors()<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>real_time_tools::Timer::sleep_sec(0.1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;SingleLeg::initialize<sp/>done\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a39c69c6578b42df3d556e8a23c3e1861" kindref="member">SingleLeg::disable_can_recv_timeout</ref>()</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;SingleLeg::disable_can_recv_timeout\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_motor_boards_[i]-&gt;disable_can_recv_timeout();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a2d95b70a9aca9f7faf503fd5c62f067f" kindref="member">SingleLeg::zero_joint_positions</ref>()</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;SingleLeg::zero_joint_positions\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>motors_.size();<sp/>i++)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a757c6d5527c7914bdb30b8ee96a8df8d" kindref="member">joint_zero_positions_</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motors_[i]-&gt;get_measurement(mi::position)-&gt;newest_element()<sp/>/</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>(i);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_printf(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;joint_zero_positions_[%d]=%0.3f\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a757c6d5527c7914bdb30b8ee96a8df8d" kindref="member">joint_zero_positions_</ref>[i]);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a093a696ad34f00e92adcc4eb282a37d9" kindref="member">SingleLeg::acquire_sensors</ref>()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>motors_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>motors<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1aca1dec9ed5af5052f23942731ac99386" kindref="member">motor_positions_</ref>(i)<sp/>=</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motors_[i]-&gt;get_measurement(mi::position)-&gt;newest_element()<sp/>-</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a757c6d5527c7914bdb30b8ee96a8df8d" kindref="member">joint_zero_positions_</ref>(i)<sp/>*<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>(i);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>motors<sp/>velocities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ad74f4bc6470b2595f76c1eed9f241a1c" kindref="member">motor_velocities_</ref>(i)<sp/>=</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motors_[i]-&gt;get_measurement(mi::velocity)-&gt;newest_element();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>motors<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ab413e5ad446472e722874e579b2ea8a8" kindref="member">motor_currents_</ref>(i)<sp/>=</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motors_[i]-&gt;get_measurement(mi::current)-&gt;newest_element();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>last<sp/>sent<sp/>current<sp/>sent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a1727423baf1d924c5c38b5da82760daa" kindref="member">motor_target_currents_</ref>(i)<sp/>=</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motors_[i]-&gt;get_sent_current_target()-&gt;newest_element();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>actual<sp/>motor<sp/>torques</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a08fb7a64361ca008694995d7dda73229" kindref="member">motor_torques_</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1SingleLeg_1ab413e5ad446472e722874e579b2ea8a8" kindref="member">motor_currents_</ref>.array()<sp/>*<sp/><ref refid="classblmc__robots_1_1SingleLeg_1acc9db4fea29151b45841b63a75d6cb18" kindref="member">motor_torque_constants_</ref>.array();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>last<sp/>sent<sp/>motor<sp/>torques</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a877ea486d60de86dda6f2f584483cd63" kindref="member">motor_target_torques_</ref><sp/>=</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a1727423baf1d924c5c38b5da82760daa" kindref="member">motor_target_currents_</ref>.array()<sp/>*<sp/><ref refid="classblmc__robots_1_1SingleLeg_1acc9db4fea29151b45841b63a75d6cb18" kindref="member">motor_torque_constants_</ref>.array();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>joint<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ad74d44ab47c78a46c2ba6a7aa9e71750" kindref="member">joint_positions_</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1SingleLeg_1aca1dec9ed5af5052f23942731ac99386" kindref="member">motor_positions_</ref>.array()<sp/>/<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>.array();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>joint<sp/>velocities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ac383a1f260a35e47584ae7dd79be801c" kindref="member">joint_velocities_</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1SingleLeg_1ad74f4bc6470b2595f76c1eed9f241a1c" kindref="member">motor_velocities_</ref>.array()<sp/>/<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>.array();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>joint<sp/>torques</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a1662005c929cff8e429ead0d5bbdee87" kindref="member">joint_torques_</ref><sp/>=<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a08fb7a64361ca008694995d7dda73229" kindref="member">motor_torques_</ref>.array()<sp/>*<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>.array();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>target<sp/>joint<sp/>torques</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a9c62fe22181054c020d0e10d1a68926c" kindref="member">joint_target_torques_</ref><sp/>=</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a877ea486d60de86dda6f2f584483cd63" kindref="member">motor_target_torques_</ref>.array()<sp/>*<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>.array();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a7b56a40d83103f77cd01915c6ee29367" kindref="member">joint_encoder_index_</ref><sp/>=</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a8ac67df4a61c02ca927bbcab5c4bab0b" kindref="member">motor_encoder_indexes_</ref>.array()<sp/>/<sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>.array();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>slider<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classblmc__robots_1_1SingleLeg_1af841dc84f18c70c85bb0e19dd88da85f" kindref="member">slider_positions_</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1af841dc84f18c70c85bb0e19dd88da85f" kindref="member">slider_positions_</ref>(i)<sp/>=<sp/>sliders_[i]-&gt;get_measurement()-&gt;newest_element();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ac68163f459be877af9fb78f348729f9b" kindref="member">SingleLeg::send_target_motor_current</ref>(</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;Vector2d&gt;<sp/>target_motor_current)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>target<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>motors_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motors_[i]-&gt;set_current_target(target_motor_current(i));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>send<sp/>the<sp/>torques<sp/>to<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>motors_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motors_[i]-&gt;send_if_input_changed();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a0525a29e9b76527936525ca0e47cafe0" kindref="member">SingleLeg::send_target_joint_torque</ref>(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;Vector2d&gt;<sp/>target_joint_torque)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a5408963ab970855f3ab0c5fc0fb51803" kindref="member">target_motor_current_tmp_</ref><sp/>=<sp/>target_joint_torque.array()<sp/>/</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1a99bc5106cd51eb315fc4b7a6d19da9ed" kindref="member">joint_gear_ratios_</ref>.array()<sp/>/</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1acc9db4fea29151b45841b63a75d6cb18" kindref="member">motor_torque_constants_</ref>.array();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__robots_1_1SingleLeg_1ac68163f459be877af9fb78f348729f9b" kindref="member">send_target_motor_current</ref>(<ref refid="classblmc__robots_1_1SingleLeg_1a5408963ab970855f3ab0c5fc0fb51803" kindref="member">target_motor_current_tmp_</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>blmc_robots</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/single_leg.cpp"/>
  </compounddef>
</doxygen>
