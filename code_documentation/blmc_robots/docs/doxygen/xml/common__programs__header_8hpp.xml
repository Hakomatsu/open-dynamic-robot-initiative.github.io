<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="common__programs__header_8hpp" kind="file" language="C++">
    <compoundname>common_programs_header.hpp</compoundname>
    <includes refid="common__header_8hpp" local="yes">blmc_robots/common_header.hpp</includes>
    <includedby refid="common__demo__header_8hpp" local="yes">demos/common_demo_header.hpp</includedby>
    <includedby refid="demo__arduino__slider_8cpp" local="yes">demos/demo_arduino_slider.cpp</includedby>
    <includedby refid="demo__solo12_8cpp" local="yes">demos/demo_solo12.cpp</includedby>
    <includedby refid="demo__solo8_8cpp" local="yes">demos/demo_solo8.cpp</includedby>
    <includedby refid="demo__solo8ti_8cpp" local="yes">demos/demo_solo8ti.cpp</includedby>
    <includedby refid="demo__stuggihop_8cpp" local="yes">demos/demo_stuggihop.cpp</includedby>
    <includedby refid="demo__test__bench__8__motors_8cpp" local="yes">demos/demo_test_bench_8_motors.cpp</includedby>
    <includedby refid="demo__teststand_8cpp" local="yes">demos/demo_teststand.cpp</includedby>
    <includedby refid="solo12__hardware__calibration_8cpp" local="yes">src/programs/solo12_hardware_calibration.cpp</includedby>
    <includedby refid="solo8__hardware__calibration_8cpp" local="yes">src/programs/solo8_hardware_calibration.cpp</includedby>
    <includedby refid="solo8ti__hardware__calibration_8cpp" local="yes">src/programs/solo8ti_hardware_calibration.cpp</includedby>
    <includedby refid="teststand__hardware__calibration_8cpp" local="yes">src/programs/teststand_hardware_calibration.cpp</includedby>
    <includedby refid="solo12_8cpp" local="yes">src/solo12.cpp</includedby>
    <includedby refid="solo8_8cpp" local="yes">src/solo8.cpp</includedby>
    <incdepgraph>
      <node id="337">
        <label>atomic</label>
      </node>
      <node id="341">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="340">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="335">
        <label>Eigen/Eigen</label>
      </node>
      <node id="339">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="338">
        <label>real_time_tools/iostream.hpp</label>
      </node>
      <node id="336">
        <label>signal.h</label>
      </node>
      <node id="333">
        <label>blmc_robots/common_header.hpp</label>
        <link refid="common__header_8hpp"/>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
      </node>
      <node id="332">
        <label>include/blmc_robots/common_programs_header.hpp</label>
        <link refid="common__programs__header_8hpp"/>
        <childnode refid="333" relation="include">
        </childnode>
      </node>
      <node id="334">
        <label>yaml_cpp_catkin/yaml_cpp_fwd.hpp</label>
      </node>
      <node id="342">
        <label>blmc_drivers/devices/analog_sensor.hpp</label>
      </node>
      <node id="343">
        <label>blmc_drivers/devices/motor.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="350">
        <label>demos/demo_test_bench_8_motors.cpp</label>
        <link refid="demo__test__bench__8__motors_8cpp"/>
      </node>
      <node id="349">
        <label>demos/demo_solo8.cpp</label>
        <link refid="demo__solo8_8cpp"/>
      </node>
      <node id="346">
        <label>demos/demo_solo12_calibration.cpp</label>
        <link refid="demo__solo12__calibration_8cpp"/>
      </node>
      <node id="348">
        <label>demos/demo_solo12.cpp</label>
        <link refid="demo__solo12_8cpp"/>
      </node>
      <node id="344">
        <label>include/blmc_robots/common_programs_header.hpp</label>
        <link refid="common__programs__header_8hpp"/>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="353" relation="include">
        </childnode>
      </node>
      <node id="353">
        <label>src/programs/teststand_hardware_calibration.cpp</label>
        <link refid="teststand__hardware__calibration_8cpp"/>
      </node>
      <node id="347">
        <label>demos/demo_solo8_calibration.cpp</label>
        <link refid="demo__solo8__calibration_8cpp"/>
      </node>
      <node id="352">
        <label>src/programs/solo8_hardware_calibration.cpp</label>
        <link refid="solo8__hardware__calibration_8cpp"/>
      </node>
      <node id="345">
        <label>demos/common_demo_header.hpp</label>
        <link refid="common__demo__header_8hpp"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
      </node>
      <node id="351">
        <label>src/programs/solo12_hardware_calibration.cpp</label>
        <link refid="solo12__hardware__calibration_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceblmc__robots">blmc_robots</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common__header_8hpp" kindref="compound">blmc_robots/common_header.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceblmc__robots" kindref="compound">blmc_robots</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal">std::atomic_bool<sp/>CTRL_C_DETECTED(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>my_handler(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>CTRL_C_DETECTED<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable_ctrl_c()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>catch<sp/>the<sp/>ctrl+c<sp/>signal<sp/>to<sp/>kill<sp/>the<sp/>application<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>sigIntHandler;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>sigIntHandler.sa_handler<sp/>=<sp/>my_handler;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>sigemptyset(&amp;sigIntHandler.sa_mask);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>sigIntHandler.sa_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>sigaction(SIGINT,<sp/>&amp;sigIntHandler,<sp/>NULL);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>CTRL_C_DETECTED<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_vector(std::string<sp/>v_name,<sp/>Eigen::Ref&lt;Eigen::VectorXd&gt;<sp/>v)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>v_name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>v_name.c_str());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>v.size();<sp/>++i)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;%0.3f,<sp/>&quot;</highlight><highlight class="normal">,<sp/>v(i));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>blmc_robots</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/blmc_robots/common_programs_header.hpp"/>
  </compounddef>
</doxygen>
