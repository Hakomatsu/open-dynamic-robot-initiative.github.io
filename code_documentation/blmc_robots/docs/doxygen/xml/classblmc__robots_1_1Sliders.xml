<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classblmc__robots_1_1Sliders" kind="class" language="C++" prot="public">
    <compoundname>blmc_robots::Sliders</compoundname>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>COUNT</declname>
        <defname>COUNT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classblmc__robots_1_1Sliders_1a40f558e5970d0a1f5817dbd18d162733" prot="public" static="no">
        <type>Eigen::Matrix&lt; double, COUNT, 1 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;double, COUNT, 1&gt; blmc_robots::Sliders&lt; COUNT &gt;::Vector</definition>
        <argsstring></argsstring>
        <name>Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/slider.hpp" line="56" column="1" bodyfile="include/blmc_robots/slider.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classblmc__robots_1_1Sliders_1aa529cb0d46f753f32db90900d36fd288" prot="public" static="no">
        <type>std::array&lt; std::shared_ptr&lt; blmc_drivers::AnalogSensorInterface &gt;, COUNT &gt;</type>
        <definition>typedef std::array&lt;std::shared_ptr&lt;blmc_drivers::AnalogSensorInterface&gt;, COUNT&gt; blmc_robots::Sliders&lt; COUNT &gt;::AnalogSensors</definition>
        <argsstring></argsstring>
        <name>AnalogSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/slider.hpp" line="60" column="1" bodyfile="include/blmc_robots/slider.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classblmc__robots_1_1Sliders_1a13624e9fdf4bbb6c62d1ec01c27e2022" prot="public" static="no">
        <type>std::array&lt; std::shared_ptr&lt; blmc_drivers::CanBusMotorBoard &gt;,(COUNT+1)/2 &gt;</type>
        <definition>typedef std::array&lt;std::shared_ptr&lt;blmc_drivers::CanBusMotorBoard&gt;, (COUNT + 1) / 2&gt; blmc_robots::Sliders&lt; COUNT &gt;::MotorBoards</definition>
        <argsstring></argsstring>
        <name>MotorBoards</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/slider.hpp" line="64" column="1" bodyfile="include/blmc_robots/slider.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classblmc__robots_1_1Sliders_1a1ecba536dcd14696e27379a0baed0471" prot="private" static="no" mutable="no">
        <type>std::array&lt; std::shared_ptr&lt; <ref refid="classblmc__robots_1_1Slider" kindref="compound">Slider</ref> &gt;, COUNT &gt;</type>
        <definition>std::array&lt;std::shared_ptr&lt;Slider&gt;, COUNT&gt; blmc_robots::Sliders&lt; COUNT &gt;::sliders_</definition>
        <argsstring></argsstring>
        <name>sliders_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/slider.hpp" line="97" column="1" bodyfile="include/blmc_robots/slider.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classblmc__robots_1_1Sliders_1ae957034a00de8edc19320a608e4cf997" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>blmc_robots::Sliders&lt; COUNT &gt;::Sliders</definition>
        <argsstring>(const AnalogSensors &amp;analog_sensors, const Vector &amp;min_positions, const Vector &amp;max_positions)</argsstring>
        <name>Sliders</name>
        <param>
          <type>const AnalogSensors &amp;</type>
          <declname>analog_sensors</declname>
        </param>
        <param>
          <type>const Vector &amp;</type>
          <declname>min_positions</declname>
        </param>
        <param>
          <type>const Vector &amp;</type>
          <declname>max_positions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/slider.hpp" line="66" column="1" bodyfile="include/blmc_robots/slider.hpp" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Sliders_1aeb72e8d249a9d1b419e47a1327602672" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>blmc_robots::Sliders&lt; COUNT &gt;::Sliders</definition>
        <argsstring>(const MotorBoards &amp;motor_boards, const Vector &amp;min_positions, const Vector &amp;max_positions)</argsstring>
        <name>Sliders</name>
        <param>
          <type>const MotorBoards &amp;</type>
          <declname>motor_boards</declname>
        </param>
        <param>
          <type>const Vector &amp;</type>
          <declname>min_positions</declname>
        </param>
        <param>
          <type>const Vector &amp;</type>
          <declname>max_positions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/slider.hpp" line="77" column="1" bodyfile="include/blmc_robots/slider.hpp" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classblmc__robots_1_1Sliders_1a7b0a3e8ca6c5496546f7bf61dc0573f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector</type>
        <definition>Vector blmc_robots::Sliders&lt; COUNT &gt;::get_positions</definition>
        <argsstring>() const</argsstring>
        <name>get_positions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/slider.hpp" line="85" column="1" bodyfile="include/blmc_robots/slider.hpp" bodystart="85" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classblmc__robots_1_1Sliders_1a852a682674219e1c95b6005b387ce5d5" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AnalogSensors</type>
        <definition>static AnalogSensors blmc_robots::Sliders&lt; COUNT &gt;::create_analog_sensors</definition>
        <argsstring>(const MotorBoards &amp;motor_boards)</argsstring>
        <name>create_analog_sensors</name>
        <param>
          <type>const MotorBoards &amp;</type>
          <declname>motor_boards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/blmc_robots/slider.hpp" line="99" column="1" bodyfile="include/blmc_robots/slider.hpp" bodystart="99" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/blmc_robots/slider.hpp" line="54" column="1" bodyfile="include/blmc_robots/slider.hpp" bodystart="53" bodyend="111"/>
    <listofallmembers>
      <member refid="classblmc__robots_1_1Sliders_1aa529cb0d46f753f32db90900d36fd288" prot="public" virt="non-virtual"><scope>blmc_robots::Sliders</scope><name>AnalogSensors</name></member>
      <member refid="classblmc__robots_1_1Sliders_1a852a682674219e1c95b6005b387ce5d5" prot="private" virt="non-virtual"><scope>blmc_robots::Sliders</scope><name>create_analog_sensors</name></member>
      <member refid="classblmc__robots_1_1Sliders_1a7b0a3e8ca6c5496546f7bf61dc0573f4" prot="public" virt="non-virtual"><scope>blmc_robots::Sliders</scope><name>get_positions</name></member>
      <member refid="classblmc__robots_1_1Sliders_1a13624e9fdf4bbb6c62d1ec01c27e2022" prot="public" virt="non-virtual"><scope>blmc_robots::Sliders</scope><name>MotorBoards</name></member>
      <member refid="classblmc__robots_1_1Sliders_1ae957034a00de8edc19320a608e4cf997" prot="public" virt="non-virtual"><scope>blmc_robots::Sliders</scope><name>Sliders</name></member>
      <member refid="classblmc__robots_1_1Sliders_1aeb72e8d249a9d1b419e47a1327602672" prot="public" virt="non-virtual"><scope>blmc_robots::Sliders</scope><name>Sliders</name></member>
      <member refid="classblmc__robots_1_1Sliders_1a1ecba536dcd14696e27379a0baed0471" prot="private" virt="non-virtual"><scope>blmc_robots::Sliders</scope><name>sliders_</name></member>
      <member refid="classblmc__robots_1_1Sliders_1a40f558e5970d0a1f5817dbd18d162733" prot="public" virt="non-virtual"><scope>blmc_robots::Sliders</scope><name>Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
