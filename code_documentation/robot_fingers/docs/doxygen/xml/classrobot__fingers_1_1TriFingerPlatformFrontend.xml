<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classrobot__fingers_1_1TriFingerPlatformFrontend" kind="class" language="C++" prot="public">
    <compoundname>robot_fingers::TriFingerPlatformFrontend</compoundname>
    <includes refid="trifinger__platform__frontend_8hpp" local="no">trifinger_platform_frontend.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1af657fd0a6ea4023926ab23a225ca3bab" prot="public" static="no">
        <type>robot_interfaces::TriFingerTypes::Action</type>
        <definition>typedef robot_interfaces::TriFingerTypes::Action robot_fingers::TriFingerPlatformFrontend::Action</definition>
        <argsstring></argsstring>
        <name>Action</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="36" column="1" bodyfile="include/robot_fingers/trifinger_platform_frontend.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a993606d1334ac3d932ba9b9637388cab" prot="public" static="no">
        <type>robot_interfaces::TriFingerTypes::Observation</type>
        <definition>typedef robot_interfaces::TriFingerTypes::Observation robot_fingers::TriFingerPlatformFrontend::RobotObservation</definition>
        <argsstring></argsstring>
        <name>RobotObservation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="37" column="1" bodyfile="include/robot_fingers/trifinger_platform_frontend.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a2bb400ff94b8c528fd3be4a3112bda81" prot="public" static="no">
        <type>robot_interfaces::Status</type>
        <definition>typedef robot_interfaces::Status robot_fingers::TriFingerPlatformFrontend::RobotStatus</definition>
        <argsstring></argsstring>
        <name>RobotStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="38" column="1" bodyfile="include/robot_fingers/trifinger_platform_frontend.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a96f578b30c6f8e2220a8cbccc91974c1" prot="public" static="no">
        <type>trifinger_cameras::TriCameraObservation</type>
        <definition>typedef trifinger_cameras::TriCameraObservation robot_fingers::TriFingerPlatformFrontend::CameraObservation</definition>
        <argsstring></argsstring>
        <name>CameraObservation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="39" column="1" bodyfile="include/robot_fingers/trifinger_platform_frontend.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1aa8cef15571ffada758d86370b86b8777" prot="private" static="no" mutable="no">
        <type>robot_interfaces::TriFingerTypes::Frontend</type>
        <definition>robot_interfaces::TriFingerTypes::Frontend robot_fingers::TriFingerPlatformFrontend::robot_frontend_</definition>
        <argsstring></argsstring>
        <name>robot_frontend_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="138" column="1" bodyfile="include/robot_fingers/trifinger_platform_frontend.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a7475483ecc42aba5910e7b3bceeecde3" prot="private" static="no" mutable="no">
        <type>trifinger_object_tracking::ObjectTrackerFrontend</type>
        <definition>trifinger_object_tracking::ObjectTrackerFrontend robot_fingers::TriFingerPlatformFrontend::object_tracker_frontend_</definition>
        <argsstring></argsstring>
        <name>object_tracker_frontend_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="139" column="1" bodyfile="include/robot_fingers/trifinger_platform_frontend.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a075fa9bb1d76bbb47955e2ce6126a0e9" prot="private" static="no" mutable="no">
        <type>robot_interfaces::SensorFrontend&lt; CameraObservation &gt;</type>
        <definition>robot_interfaces::SensorFrontend&lt;CameraObservation&gt; robot_fingers::TriFingerPlatformFrontend::camera_frontend_</definition>
        <argsstring></argsstring>
        <name>camera_frontend_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="140" column="1" bodyfile="include/robot_fingers/trifinger_platform_frontend.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a47150cf36520116808333d5c3e8a2fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>robot_fingers::TriFingerPlatformFrontend::TriFingerPlatformFrontend</definition>
        <argsstring>(robot_interfaces::TriFingerTypes::BaseDataPtr robot_data, trifinger_object_tracking::ObjectTrackerData::Ptr object_tracker_data, std::shared_ptr&lt; robot_interfaces::SensorData&lt; CameraObservation &gt;&gt; camera_data)</argsstring>
        <name>TriFingerPlatformFrontend</name>
        <param>
          <type>robot_interfaces::TriFingerTypes::BaseDataPtr</type>
          <declname>robot_data</declname>
        </param>
        <param>
          <type>trifinger_object_tracking::ObjectTrackerData::Ptr</type>
          <declname>object_tracker_data</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; robot_interfaces::SensorData&lt; CameraObservation &gt;&gt;</type>
          <declname>camera_data</declname>
        </param>
        <briefdescription>
<para>Initialize with data instances for all internal frontends. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>robot_data</parametername>
</parameternamelist>
<parameterdescription>
<para>RobotData instance used by the robot frontend. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>object_tracker_data</parametername>
</parameternamelist>
<parameterdescription>
<para>ObjectTrackerData instance used by the object tracker frontend. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>camera_data</parametername>
</parameternamelist>
<parameterdescription>
<para>SensorData instance, used by the camera frontend. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="49" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="11" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1aea53f5c5b5443f9b481b33392b5caa25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>robot_fingers::TriFingerPlatformFrontend::TriFingerPlatformFrontend</definition>
        <argsstring>()</argsstring>
        <name>TriFingerPlatformFrontend</name>
        <briefdescription>
<para>Initialize with default data instances. </para>        </briefdescription>
        <detaileddescription>
<para>Creates for each internal frontend a corresponding mutli-process data instance with the default shared memory ID for the corresponding data type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="62" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="22" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a474d2d6fd6c48fc16ccd60ac2bc21c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_series::Index</type>
        <definition>time_series::Index robot_fingers::TriFingerPlatformFrontend::append_desired_action</definition>
        <argsstring>(const Action &amp;desired_action)</argsstring>
        <name>append_desired_action</name>
        <param>
          <type>const Action &amp;</type>
          <declname>desired_action</declname>
        </param>
        <briefdescription>
<para>Append a desired robot action to the action queue. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>robot_interfaces::TriFingerTypes::Frontend::append_desired_action</para></simplesect>
<simplesect kind="return"><para>The index of the time step at which this action is going to be executed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="71" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a86149ce45a4ddada714eb0e0fde20e66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>RobotObservation</type>
        <definition>TriFingerPlatformFrontend::RobotObservation robot_fingers::TriFingerPlatformFrontend::get_robot_observation</definition>
        <argsstring>(const time_series::Index &amp;t) const</argsstring>
        <name>get_robot_observation</name>
        <param>
          <type>const time_series::Index &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get robot observation of the time step t. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>robot_interfaces::TriFingerTypes::Frontend::get_observation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="77" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1acdb76e148024bfdcb59bf06a92f30222" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Action</type>
        <definition>TriFingerPlatformFrontend::Action robot_fingers::TriFingerPlatformFrontend::get_desired_action</definition>
        <argsstring>(const time_series::Index &amp;t) const</argsstring>
        <name>get_desired_action</name>
        <param>
          <type>const time_series::Index &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get desired action of time step t. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>robot_interfaces::TriFingerTypes::Frontend::get_desired_action </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="83" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a7c0d56e7e1096a3ab299a45e8b832d54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Action</type>
        <definition>TriFingerPlatformFrontend::Action robot_fingers::TriFingerPlatformFrontend::get_applied_action</definition>
        <argsstring>(const time_series::Index &amp;t) const</argsstring>
        <name>get_applied_action</name>
        <param>
          <type>const time_series::Index &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get actually applied action of time step t. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>robot_interfaces::TriFingerTypes::Frontend::get_applied_action </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="89" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1afc30cd1aecd9967045a0365c21f964fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>RobotStatus</type>
        <definition>TriFingerPlatformFrontend::RobotStatus robot_fingers::TriFingerPlatformFrontend::get_robot_status</definition>
        <argsstring>(const time_series::Index &amp;t) const</argsstring>
        <name>get_robot_status</name>
        <param>
          <type>const time_series::Index &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get robot status of time step t. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>robot_interfaces::TriFingerTypes::Frontend::get_status </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="95" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1abf6ed97b5f5711058030733fb283aad6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>time_series::Timestamp</type>
        <definition>time_series::Timestamp robot_fingers::TriFingerPlatformFrontend::get_timestamp_ms</definition>
        <argsstring>(const time_series::Index &amp;t) const</argsstring>
        <name>get_timestamp_ms</name>
        <param>
          <type>const time_series::Index &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get timestamp (in milliseconds) of time step t. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>robot_interfaces::TriFingerTypes::Frontend::get_timestamp_ms </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="101" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a9c97379d70b40a023609521a83253177" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>time_series::Index</type>
        <definition>time_series::Index robot_fingers::TriFingerPlatformFrontend::get_current_timeindex</definition>
        <argsstring>() const</argsstring>
        <name>get_current_timeindex</name>
        <briefdescription>
<para>Get the current time index. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>robot_interfaces::TriFingerTypes::Frontend::get_current_timeindex </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="107" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a0dc8d9e0d6e26053194e223ac29fc8c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void robot_fingers::TriFingerPlatformFrontend::wait_until_timeindex</definition>
        <argsstring>(const time_series::Index &amp;t) const</argsstring>
        <name>wait_until_timeindex</name>
        <param>
          <type>const time_series::Index &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Wait until time step t. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>robot_interfaces::TriFingerTypes::Frontend::wait_until_timeindex </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="113" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1abb39cc97fbf08af6942f2de3e99e6f54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>trifinger_object_tracking::ObjectPose</type>
        <definition>trifinger_object_tracking::ObjectPose robot_fingers::TriFingerPlatformFrontend::get_object_pose</definition>
        <argsstring>(const time_series::Index t) const</argsstring>
        <name>get_object_pose</name>
        <param>
          <type>const time_series::Index</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get observation of the object tracker of time step t. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Time index of the robot time series. This is internally mapped to the corresponding time index of the object tracker time series.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Observation of the object tracker of time step t. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="124" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a2b83c7b23977185f4a522e16077b204a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>CameraObservation</type>
        <definition>TriFingerPlatformFrontend::CameraObservation robot_fingers::TriFingerPlatformFrontend::get_camera_observation</definition>
        <argsstring>(const time_series::Index t) const</argsstring>
        <name>get_camera_observation</name>
        <param>
          <type>const time_series::Index</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get camera images of time step t. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Time index of the robot time series. This is internally mapped to the corresponding time index of the camera time series.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Camera images of time step t. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="135" column="1" bodyfile="src/trifinger_platform_frontend.cpp" bodystart="93" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrobot__fingers_1_1TriFingerPlatformFrontend_1a4c67fd3d8d1e887ed0f5b1b8ec2d30b3" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FrontendType</type>
          </param>
        </templateparamlist>
        <type>time_series::Index</type>
        <definition>time_series::Index robot_fingers::TriFingerPlatformFrontend::find_matching_timeindex</definition>
        <argsstring>(const FrontendType &amp;other_frontend, const time_series::Index t_robot) const</argsstring>
        <name>find_matching_timeindex</name>
        <param>
          <type>const FrontendType &amp;</type>
          <declname>other_frontend</declname>
        </param>
        <param>
          <type>const time_series::Index</type>
          <declname>t_robot</declname>
        </param>
        <briefdescription>
<para>Find time index of frontend that matches with the given robot time index. </para>        </briefdescription>
        <detaileddescription>
<para>The given time index t_robot refers to the robot data time series. To provide the correct observation from the other frontend for this time step, find the highest time index t_other of the other frontend where <verbatim> timestamp(t_other) &lt;= timestamp(t_robot)
</verbatim></para><para>Note that this is not always the one that is closest w.r.t. to the timestamp, i.e. <verbatim> t_other != argmin(|timestamp(t_other) - timestamp(t_robot)|)
</verbatim></para><para>The latter would not be deterministic: the outcome could change when called twice with the same <computeroutput>t_robot</computeroutput> if a new &quot;other&quot; observation arrived in between the calls.</para><para><xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>The implementation below is very naive. It simply does a linear search starting from the latest time index. So worst case performance is O(n) where n is the number of &quot;other&quot; observations over the period that is covered by the buffer of the robot data.</para></xrefdescription></xrefsect><verbatim>  Options to speed this up:
   - binary search (?)
   - estimate time step size based on last observations
   - store matched indices of last call

  Note, however, that `t_robot` is very likely the latest time index
  in most cases.  In this case the match for `t_other` will also be
  the latest index of the corresponding time series.  In this case,
  the complexity is O(1).  So even when implementing a more complex
  search algorithm, the first candidate for `t_other` that is checked
  should always be the latest one.
</verbatim></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FrontendType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the frontend. This is templated so that the same implementation can be used for both camera and object tracker frontend. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other_frontend</parametername>
</parameternamelist>
<parameterdescription>
<para>The frontend for which a matching time index needs to be found. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_robot</parametername>
</parameternamelist>
<parameterdescription>
<para>Time index of the robot frontend.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Time index for other_frontend which is/was active at the time of t_robot. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="190" column="1" bodyfile="include/robot_fingers/trifinger_platform_frontend.hpp" bodystart="190" bodyend="207"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Combined frontend for the TriFinger Platform. </para>    </briefdescription>
    <detaileddescription>
<para>This class combines the frontends for robot, cameras and object tracking in one class using unified time indices.</para><para>Internally the different frontends all have their own time indices which are unrelated to each other. In this combined class, the time index used is the one that belongs to the robot frontend. When accessing observations of the other frontends, it also takes this index t and internally matches it to the time index t_o that was active in the other frontend at the time of t.</para><para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Methods to get timestamp from camera or object tracker? </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="include/robot_fingers/trifinger_platform_frontend.hpp" line="33" column="1" bodyfile="include/robot_fingers/trifinger_platform_frontend.hpp" bodystart="32" bodyend="208"/>
    <listofallmembers>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1af657fd0a6ea4023926ab23a225ca3bab" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>Action</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a474d2d6fd6c48fc16ccd60ac2bc21c2f" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>append_desired_action</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a075fa9bb1d76bbb47955e2ce6126a0e9" prot="private" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>camera_frontend_</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a96f578b30c6f8e2220a8cbccc91974c1" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>CameraObservation</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a4c67fd3d8d1e887ed0f5b1b8ec2d30b3" prot="private" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>find_matching_timeindex</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a7c0d56e7e1096a3ab299a45e8b832d54" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>get_applied_action</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a2b83c7b23977185f4a522e16077b204a" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>get_camera_observation</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a9c97379d70b40a023609521a83253177" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>get_current_timeindex</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1acdb76e148024bfdcb59bf06a92f30222" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>get_desired_action</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1abb39cc97fbf08af6942f2de3e99e6f54" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>get_object_pose</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a86149ce45a4ddada714eb0e0fde20e66" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>get_robot_observation</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1afc30cd1aecd9967045a0365c21f964fe" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>get_robot_status</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1abf6ed97b5f5711058030733fb283aad6" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>get_timestamp_ms</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a7475483ecc42aba5910e7b3bceeecde3" prot="private" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>object_tracker_frontend_</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1aa8cef15571ffada758d86370b86b8777" prot="private" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>robot_frontend_</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a993606d1334ac3d932ba9b9637388cab" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>RobotObservation</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a2bb400ff94b8c528fd3be4a3112bda81" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>RobotStatus</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a47150cf36520116808333d5c3e8a2fdc" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>TriFingerPlatformFrontend</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1aea53f5c5b5443f9b481b33392b5caa25" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>TriFingerPlatformFrontend</name></member>
      <member refid="classrobot__fingers_1_1TriFingerPlatformFrontend_1a0dc8d9e0d6e26053194e223ac29fc8c4" prot="public" virt="non-virtual"><scope>robot_fingers::TriFingerPlatformFrontend</scope><name>wait_until_timeindex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
