<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="const__torque__control_8cpp" kind="file" language="C++">
    <compoundname>const_torque_control.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes local="yes">real_time_tools/timer.hpp</includes>
    <includes local="yes">real_time_tools/spinner.hpp</includes>
    <includes refid="const__torque__control_8hpp" local="yes">const_torque_control.hpp</includes>
    <incdepgraph>
      <node id="4">
        <label>const_torque_control.hpp</label>
        <link refid="const__torque__control_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>blmc_drivers/utils/os_interface.hpp</label>
        <link refid="os__interface_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>net/if.h</label>
      </node>
      <node id="2">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="16">
        <label>stdint.h</label>
      </node>
      <node id="29">
        <label>sys/mman.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>real_time_tools/threadsafe/threadsafe_timeseries.hpp</label>
      </node>
      <node id="11">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="0">
        <label>demos/const_torque_control.cpp</label>
        <link refid="const__torque__control_8cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="23">
        <label>linux/can/raw.h</label>
      </node>
      <node id="21">
        <label>sys/ioctl.h</label>
      </node>
      <node id="5">
        <label>blmc_drivers/devices/motor.hpp</label>
        <link refid="motor_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>linux/can.h</label>
      </node>
      <node id="1">
        <label>fstream</label>
      </node>
      <node id="8">
        <label>real_time_tools/threadsafe/threadsafe_object.hpp</label>
      </node>
      <node id="24">
        <label>limits.h</label>
      </node>
      <node id="3">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="33">
        <label>blmc_drivers/devices/analog_sensor.hpp</label>
        <link refid="analog__sensor_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>real_time_tools/iostream.hpp</label>
      </node>
      <node id="28">
        <label>condition_variable</label>
      </node>
      <node id="19">
        <label>sys/types.h</label>
      </node>
      <node id="17">
        <label>string.h</label>
      </node>
      <node id="15">
        <label>unistd.h</label>
      </node>
      <node id="26">
        <label>sstream</label>
      </node>
      <node id="25">
        <label>iostream</label>
      </node>
      <node id="30">
        <label>blmc_drivers/devices/can_bus.hpp</label>
        <link refid="can__bus_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>mutex</label>
      </node>
      <node id="20">
        <label>sys/socket.h</label>
      </node>
      <node id="32">
        <label>blmc_drivers/devices/device_interface.hpp</label>
        <link refid="device__interface_8hpp"/>
      </node>
      <node id="10">
        <label>blmc_drivers/devices/motor_board.hpp</label>
        <link refid="motor__board_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceblmc__drivers">blmc_drivers</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>Copyright (c) 2018-2020, New York University and Max Planck Gesellschaft, License BSD-3-Clause </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/timer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/spinner.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const__torque__control_8hpp" kindref="compound">const_torque_control.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespaceblmc__drivers" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceblmc__drivers" kindref="compound">blmc_drivers</ref>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a82a2bc2327fc6fb6a10a4ae88d01e87f" kindref="member">ConstTorqueControl::loop</ref>()</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>blmc_position_index<sp/>=<sp/>MotorInterface::MeasurementIndex::position;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>blmc_velocity_index<sp/>=<sp/>MotorInterface::MeasurementIndex::velocity;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>blmc_current_index<sp/>=<sp/>MotorInterface::MeasurementIndex::current;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual_position<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual_velocity<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual_current<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>is<sp/>the<sp/>control<sp/>in<sp/>current<sp/>(Ampere)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>desired_current<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>real_time_tools::Spinner<sp/>spinner;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>spinner.set_period(0.001);<sp/></highlight><highlight class="comment">//<sp/>here<sp/>we<sp/>spin<sp/>every<sp/>1ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>real_time_tools::Timer<sp/>time_logger;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!<ref refid="classblmc__drivers_1_1ConstTorqueControl_1a18fb1033acd14e7e03a6cccc3f11674b" kindref="member">stop_loop_</ref>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>time_logger.tic();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i=0;<sp/>i&lt;<ref refid="classblmc__drivers_1_1ConstTorqueControl_1a0833792423b525088e94d51c830f9d91" kindref="member">motor_list_</ref>.size()<sp/>;<sp/>++i)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actual_position<sp/>=<sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a0833792423b525088e94d51c830f9d91" kindref="member">motor_list_</ref>[i]-&gt;get_measurement(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blmc_position_index)-&gt;newest_element();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actual_velocity<sp/>=<sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a0833792423b525088e94d51c830f9d91" kindref="member">motor_list_</ref>[i]-&gt;get_measurement(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blmc_velocity_index)-&gt;newest_element();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actual_current<sp/>=<sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a0833792423b525088e94d51c830f9d91" kindref="member">motor_list_</ref>[i]-&gt;get_measurement(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blmc_current_index)-&gt;newest_element();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>desired_current<sp/>=<sp/>0.1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a0833792423b525088e94d51c830f9d91" kindref="member">motor_list_</ref>[i]-&gt;set_current_target(desired_current);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a0833792423b525088e94d51c830f9d91" kindref="member">motor_list_</ref>[i]-&gt;send_if_input_changed();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a109a0b7342daf335e5a535cbd68b800a" kindref="member">encoders_</ref>[i].push_back(actual_position);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1adb46410fc955b4232e0b11c9081409b5" kindref="member">velocities_</ref>[i].push_back(actual_velocity);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1aec86c0a1864866b3169af7d9938cd518" kindref="member">currents_</ref>[i].push_back(actual_current);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a90f61569eda4245f7ed01569a42d0ef1" kindref="member">control_buffer_</ref>[i].push_back(desired_current);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>sleep<sp/>here<sp/>1ms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spinner.spin();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>measure<sp/>the<sp/>time<sp/>spent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time_logger.tac();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Printings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((count<sp/>%<sp/>1000)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__interface_8hpp_1a1acf1ce04ab7fe3a5972c0618adcbbac" kindref="member">rt_printf</ref>(</highlight><highlight class="stringliteral">&quot;sending<sp/>current:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>desired_current);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//time_logger.print_statistics();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//endfor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//endwhile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>time_logger.dump_measurements(</highlight><highlight class="stringliteral">&quot;/tmp/demo_pd_control_time_measurement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1aeb954986cb31a9cb0796f6bee9b22b1a" kindref="member">ConstTorqueControl::stop_loop</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dumping<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>std::string<sp/>file_name=</highlight><highlight class="stringliteral">&quot;/tmp/Const_torque_xp.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>log_file(file_name,<sp/>std::ios::binary<sp/>|<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>log_file.precision(10);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classblmc__drivers_1_1ConstTorqueControl_1a109a0b7342daf335e5a535cbd68b800a" kindref="member">encoders_</ref>[0].size()<sp/>==<sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1adb46410fc955b4232e0b11c9081409b5" kindref="member">velocities_</ref>[0].size()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1adb46410fc955b4232e0b11c9081409b5" kindref="member">velocities_</ref>[0].size()<sp/>==<sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a90f61569eda4245f7ed01569a42d0ef1" kindref="member">control_buffer_</ref>[0].size()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a90f61569eda4245f7ed01569a42d0ef1" kindref="member">control_buffer_</ref>[0].size()<sp/>==<sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1aec86c0a1864866b3169af7d9938cd518" kindref="member">currents_</ref>[0].size());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>j=0<sp/>;<sp/>j&lt;<ref refid="classblmc__drivers_1_1ConstTorqueControl_1a109a0b7342daf335e5a535cbd68b800a" kindref="member">encoders_</ref>[0].size()<sp/>;<sp/>++j)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i=0<sp/>;<sp/>i&lt;<ref refid="classblmc__drivers_1_1ConstTorqueControl_1a109a0b7342daf335e5a535cbd68b800a" kindref="member">encoders_</ref>.size()<sp/>;<sp/>++i)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_file<sp/>&lt;&lt;<sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a109a0b7342daf335e5a535cbd68b800a" kindref="member">encoders_</ref>[i][j]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1adb46410fc955b4232e0b11c9081409b5" kindref="member">velocities_</ref>[i][j]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1a90f61569eda4245f7ed01569a42d0ef1" kindref="member">control_buffer_</ref>[i][j]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classblmc__drivers_1_1ConstTorqueControl_1aec86c0a1864866b3169af7d9938cd518" kindref="member">currents_</ref>[i][j]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log_file<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>log_file.flush();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>log_file.close();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__interface_8hpp_1a1acf1ce04ab7fe3a5972c0618adcbbac" kindref="member">rt_printf</ref>(</highlight><highlight class="stringliteral">&quot;fstream<sp/>Error<sp/>in<sp/>dump_tic_tac_measurements():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;no<sp/>time<sp/>measurment<sp/>saved\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="os__interface_8hpp_1a1acf1ce04ab7fe3a5972c0618adcbbac" kindref="member">rt_printf</ref>(</highlight><highlight class="stringliteral">&quot;dumped<sp/>the<sp/>trajectory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>blmc_drivers</highlight></codeline>
    </programlisting>
    <location file="demos/const_torque_control.cpp"/>
  </compounddef>
</doxygen>
