<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classLegController" kind="class" language="C++" prot="public">
    <compoundname>LegController</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classLegController_1af2abd6d8c18c9653813bb231a0688a54" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classblmc__drivers_1_1Leg" kindref="compound">blmc_drivers::Leg</ref> &gt;</type>
        <definition>std::shared_ptr&lt;blmc_drivers::Leg&gt; LegController::leg_</definition>
        <argsstring></argsstring>
        <name>leg_</name>
        <briefdescription>
<para>is the leg to control </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_leg.cpp" line="124" column="1" bodyfile="demos/demo_leg.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLegController_1a1a05529b6f3f40c7d3da6e6a9fa94cea" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classblmc__drivers_1_1AnalogSensor" kindref="compound">blmc_drivers::AnalogSensor</ref> &gt;</type>
        <definition>std::shared_ptr&lt;blmc_drivers::AnalogSensor&gt; LegController::analog_sensor_</definition>
        <argsstring></argsstring>
        <name>analog_sensor_</name>
        <briefdescription>
<para>is the list of sliders </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_leg.cpp" line="128" column="1" bodyfile="demos/demo_leg.cpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLegController_1a34aac27ee8efb204f98203b553094588" prot="private" static="no" mutable="no">
        <type>real_time_tools::RealTimeThread</type>
        <definition>real_time_tools::RealTimeThread LegController::rt_thread_</definition>
        <argsstring></argsstring>
        <name>rt_thread_</name>
        <briefdescription>
<para>is the real time thread object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_leg.cpp" line="132" column="1" bodyfile="demos/demo_leg.cpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLegController_1a991995e57f3581074b9c0eec32966e35" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LegController::stop_loop_</definition>
        <argsstring></argsstring>
        <name>stop_loop_</name>
        <briefdescription>
<para>manages the shutdown of the controller </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_leg.cpp" line="137" column="1" bodyfile="demos/demo_leg.cpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classLegController_1a9d1253c4c70fe6b83e449830c7328b58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>LegController::LegController</definition>
        <argsstring>(std::shared_ptr&lt; blmc_drivers::Leg &gt; leg, std::shared_ptr&lt; blmc_drivers::AnalogSensor &gt; analog_sensor)</argsstring>
        <name>LegController</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classblmc__drivers_1_1Leg" kindref="compound">blmc_drivers::Leg</ref> &gt;</type>
          <declname>leg</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classblmc__drivers_1_1AnalogSensor" kindref="compound">blmc_drivers::AnalogSensor</ref> &gt;</type>
          <declname>analog_sensor</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classLegController" kindref="compound">LegController</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>analog_sensor</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_leg.cpp" line="146" column="1" bodyfile="demos/demo_leg.cpp" bodystart="146" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classLegController_1ad7f3068767ed754bbefd1744463764d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>LegController::~LegController</definition>
        <argsstring>()</argsstring>
        <name>~LegController</name>
        <briefdescription>
<para>Destroy the <ref refid="classLegController" kindref="compound">LegController</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_leg.cpp" line="157" column="1" bodyfile="demos/demo_leg.cpp" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classLegController_1adacfe6a1709021da8cd7009672d01440" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LegController::start_loop</definition>
        <argsstring>()</argsstring>
        <name>start_loop</name>
        <briefdescription>
<para>helper to strat the real time thread. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_leg.cpp" line="166" column="1" bodyfile="demos/demo_leg.cpp" bodystart="166" bodyend="169"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classLegController_1a87bba6942e6f8ba649f595e871d0d379" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>THREAD_FUNCTION_RETURN_TYPE</type>
        <definition>static THREAD_FUNCTION_RETURN_TYPE LegController::loop</definition>
        <argsstring>(void *instance_pointer)</argsstring>
        <name>loop</name>
        <param>
          <type>void *</type>
          <declname>instance_pointer</declname>
        </param>
        <briefdescription>
<para>this function is just a wrapper around the actual loop function, such that it can be spawned as a posix thread. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_leg.cpp" line="175" column="1" bodyfile="demos/demo_leg.cpp" bodystart="175" bodyend="179"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classLegController_1a00000dd7bbaa4f1e05a9ea16f05e73e8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LegController::loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
<para>this is a simple control loop which runs at a kilohertz. </para>        </briefdescription>
        <detaileddescription>
<para>it reads the measurement from the analog sensor, in this case the slider. then it scales it and sends it as the current target to the motor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_leg.cpp" line="190" column="1" bodyfile="demos/demo_leg.cpp" bodystart="190" bodyend="243"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simple PD control on the leg. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="demos/demo_leg.cpp" line="119" column="1" bodyfile="demos/demo_leg.cpp" bodystart="118" bodyend="244"/>
    <listofallmembers>
      <member refid="classLegController_1a1a05529b6f3f40c7d3da6e6a9fa94cea" prot="private" virt="non-virtual"><scope>LegController</scope><name>analog_sensor_</name></member>
      <member refid="classLegController_1af2abd6d8c18c9653813bb231a0688a54" prot="private" virt="non-virtual"><scope>LegController</scope><name>leg_</name></member>
      <member refid="classLegController_1a9d1253c4c70fe6b83e449830c7328b58" prot="public" virt="non-virtual"><scope>LegController</scope><name>LegController</name></member>
      <member refid="classLegController_1a87bba6942e6f8ba649f595e871d0d379" prot="public" virt="non-virtual"><scope>LegController</scope><name>loop</name></member>
      <member refid="classLegController_1a00000dd7bbaa4f1e05a9ea16f05e73e8" prot="private" virt="non-virtual"><scope>LegController</scope><name>loop</name></member>
      <member refid="classLegController_1a34aac27ee8efb204f98203b553094588" prot="private" virt="non-virtual"><scope>LegController</scope><name>rt_thread_</name></member>
      <member refid="classLegController_1adacfe6a1709021da8cd7009672d01440" prot="public" virt="non-virtual"><scope>LegController</scope><name>start_loop</name></member>
      <member refid="classLegController_1a991995e57f3581074b9c0eec32966e35" prot="private" virt="non-virtual"><scope>LegController</scope><name>stop_loop_</name></member>
      <member refid="classLegController_1ad7f3068767ed754bbefd1744463764d0" prot="public" virt="non-virtual"><scope>LegController</scope><name>~LegController</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
