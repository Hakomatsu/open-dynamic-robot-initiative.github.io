<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="can__bus_8hpp" kind="file" language="C++">
    <compoundname>can_bus.hpp</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="yes">real_time_tools/timer.hpp</includes>
    <includes local="yes">real_time_tools/thread.hpp</includes>
    <includes local="yes">real_time_tools/iostream.hpp</includes>
    <includes local="yes">real_time_tools/spinner.hpp</includes>
    <includes local="yes">real_time_tools/threadsafe/threadsafe_object.hpp</includes>
    <includes local="yes">real_time_tools/threadsafe/threadsafe_timeseries.hpp</includes>
    <includes refid="os__interface_8hpp" local="yes">blmc_drivers/utils/os_interface.hpp</includes>
    <includes refid="device__interface_8hpp" local="yes">blmc_drivers/devices/device_interface.hpp</includes>
    <includedby refid="demo__1__motor_8cpp" local="yes">demos/demo_1_motor.cpp</includedby>
    <includedby refid="demo__1__motor__print__everything_8cpp" local="yes">demos/demo_1_motor_print_everything.cpp</includedby>
    <includedby refid="motor__board_8hpp" local="yes">include/blmc_drivers/devices/motor_board.hpp</includedby>
    <includedby refid="can__bus_8cpp" local="no">src/can_bus.cpp</includedby>
    <incdepgraph>
      <node id="744">
        <label>blmc_drivers/utils/os_interface.hpp</label>
        <link refid="os__interface_8hpp"/>
        <childnode refid="745" relation="include">
        </childnode>
        <childnode refid="746" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="749" relation="include">
        </childnode>
        <childnode refid="750" relation="include">
        </childnode>
        <childnode refid="751" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="753" relation="include">
        </childnode>
        <childnode refid="754" relation="include">
        </childnode>
        <childnode refid="755" relation="include">
        </childnode>
        <childnode refid="756" relation="include">
        </childnode>
        <childnode refid="738" relation="include">
        </childnode>
        <childnode refid="757" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
        <childnode refid="759" relation="include">
        </childnode>
        <childnode refid="760" relation="include">
        </childnode>
        <childnode refid="761" relation="include">
        </childnode>
      </node>
      <node id="750">
        <label>net/if.h</label>
      </node>
      <node id="738">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="748">
        <label>stdint.h</label>
      </node>
      <node id="761">
        <label>sys/mman.h</label>
      </node>
      <node id="746">
        <label>stdlib.h</label>
      </node>
      <node id="743">
        <label>real_time_tools/threadsafe/threadsafe_timeseries.hpp</label>
      </node>
      <node id="739">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="737">
        <label>string</label>
      </node>
      <node id="755">
        <label>linux/can/raw.h</label>
      </node>
      <node id="753">
        <label>sys/ioctl.h</label>
      </node>
      <node id="754">
        <label>linux/can.h</label>
      </node>
      <node id="742">
        <label>real_time_tools/threadsafe/threadsafe_object.hpp</label>
      </node>
      <node id="756">
        <label>limits.h</label>
      </node>
      <node id="741">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="740">
        <label>real_time_tools/iostream.hpp</label>
      </node>
      <node id="760">
        <label>condition_variable</label>
      </node>
      <node id="751">
        <label>sys/types.h</label>
      </node>
      <node id="749">
        <label>string.h</label>
      </node>
      <node id="747">
        <label>unistd.h</label>
      </node>
      <node id="758">
        <label>sstream</label>
      </node>
      <node id="757">
        <label>iostream</label>
      </node>
      <node id="735">
        <label>include/blmc_drivers/devices/can_bus.hpp</label>
        <link refid="can__bus_8hpp"/>
        <childnode refid="736" relation="include">
        </childnode>
        <childnode refid="737" relation="include">
        </childnode>
        <childnode refid="738" relation="include">
        </childnode>
        <childnode refid="739" relation="include">
        </childnode>
        <childnode refid="740" relation="include">
        </childnode>
        <childnode refid="741" relation="include">
        </childnode>
        <childnode refid="742" relation="include">
        </childnode>
        <childnode refid="743" relation="include">
        </childnode>
        <childnode refid="744" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
      </node>
      <node id="759">
        <label>mutex</label>
      </node>
      <node id="752">
        <label>sys/socket.h</label>
      </node>
      <node id="762">
        <label>blmc_drivers/devices/device_interface.hpp</label>
        <link refid="device__interface_8hpp"/>
      </node>
      <node id="745">
        <label>stdio.h</label>
      </node>
      <node id="736">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="768">
        <label>demos/const_torque_control.hpp</label>
        <link refid="const__torque__control_8hpp"/>
        <childnode refid="769" relation="include">
        </childnode>
        <childnode refid="770" relation="include">
        </childnode>
      </node>
      <node id="782">
        <label>demos/sine_torque_control.hpp</label>
        <link refid="sine__torque__control_8hpp"/>
        <childnode refid="783" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
      </node>
      <node id="793">
        <label>src/motor_board.cpp</label>
        <link refid="motor__board_8cpp"/>
      </node>
      <node id="773">
        <label>demos/demo_3_motors.cpp</label>
        <link refid="demo__3__motors_8cpp"/>
      </node>
      <node id="776">
        <label>demos/demo_single_board.cpp</label>
        <link refid="demo__single__board_8cpp"/>
      </node>
      <node id="765">
        <label>demos/demo_1_motor_print_everything.cpp</label>
        <link refid="demo__1__motor__print__everything_8cpp"/>
      </node>
      <node id="790">
        <label>src/spi_motor_board.cpp</label>
        <link refid="spi__motor__board_8cpp"/>
      </node>
      <node id="783">
        <label>demos/demo_sine_torque_1_motor.cpp</label>
        <link refid="demo__sine__torque__1__motor_8cpp"/>
      </node>
      <node id="764">
        <label>demos/demo_1_motor.cpp</label>
        <link refid="demo__1__motor_8cpp"/>
      </node>
      <node id="769">
        <label>demos/const_torque_control.cpp</label>
        <link refid="const__torque__control_8cpp"/>
      </node>
      <node id="781">
        <label>demos/sine_position_control.cpp</label>
        <link refid="sine__position__control_8cpp"/>
      </node>
      <node id="784">
        <label>demos/sine_torque_control.cpp</label>
        <link refid="sine__torque__control_8cpp"/>
      </node>
      <node id="786">
        <label>include/blmc_drivers/devices/motor.hpp</label>
        <link refid="motor_8hpp"/>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
        <childnode refid="775" relation="include">
        </childnode>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
        <childnode refid="788" relation="include">
        </childnode>
        <childnode refid="792" relation="include">
        </childnode>
        <childnode refid="791" relation="include">
        </childnode>
      </node>
      <node id="767">
        <label>include/blmc_drivers/devices/analog_sensor.hpp</label>
        <link refid="analog__sensor_8hpp"/>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
        <childnode refid="775" relation="include">
        </childnode>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
      <node id="778">
        <label>demos/sine_position_control.hpp</label>
        <link refid="sine__position__control_8hpp"/>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="780" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
      </node>
      <node id="794">
        <label>src/can_bus.cpp</label>
        <link refid="can__bus_8cpp"/>
      </node>
      <node id="787">
        <label>include/blmc_drivers/devices/leg.hpp</label>
        <link refid="leg_8hpp"/>
        <childnode refid="775" relation="include">
        </childnode>
      </node>
      <node id="775">
        <label>demos/demo_leg.cpp</label>
        <link refid="demo__leg_8cpp"/>
      </node>
      <node id="780">
        <label>demos/demo_sine_position_1_motor.cpp</label>
        <link refid="demo__sine__position__1__motor_8cpp"/>
      </node>
      <node id="791">
        <label>src/spi_bus.cpp</label>
        <link refid="spi__bus_8cpp"/>
      </node>
      <node id="770">
        <label>demos/demo_const_torque_1_motor.cpp</label>
        <link refid="demo__const__torque__1__motor_8cpp"/>
      </node>
      <node id="772">
        <label>demos/demo_2_motors.cpp</label>
        <link refid="demo__2__motors_8cpp"/>
      </node>
      <node id="777">
        <label>demos/pd_control.cpp</label>
        <link refid="pd__control_8cpp"/>
      </node>
      <node id="789">
        <label>include/blmc_drivers/devices/spi_motor_board.hpp</label>
        <link refid="spi__motor__board_8hpp"/>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="790" relation="include">
        </childnode>
      </node>
      <node id="779">
        <label>demos/demo_ethernet.cpp</label>
        <link refid="demo__ethernet_8cpp"/>
      </node>
      <node id="763">
        <label>include/blmc_drivers/devices/can_bus.hpp</label>
        <link refid="can__bus_8hpp"/>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="766" relation="include">
        </childnode>
        <childnode refid="794" relation="include">
        </childnode>
      </node>
      <node id="788">
        <label>include/blmc_drivers/devices/spi_bus.hpp</label>
        <link refid="spi__bus_8hpp"/>
        <childnode refid="789" relation="include">
        </childnode>
        <childnode refid="791" relation="include">
        </childnode>
      </node>
      <node id="792">
        <label>src/motor.cpp</label>
        <link refid="motor_8cpp"/>
      </node>
      <node id="766">
        <label>include/blmc_drivers/devices/motor_board.hpp</label>
        <link refid="motor__board_8hpp"/>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="767" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="788" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
        <childnode refid="793" relation="include">
        </childnode>
      </node>
      <node id="774">
        <label>demos/demo_8_motors.cpp</label>
        <link refid="demo__8__motors_8cpp"/>
      </node>
      <node id="785">
        <label>src/analog_sensors.cpp</label>
        <link refid="analog__sensors_8cpp"/>
      </node>
      <node id="771">
        <label>demos/pd_control.hpp</label>
        <link refid="pd__control_8hpp"/>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="773" relation="include">
        </childnode>
        <childnode refid="774" relation="include">
        </childnode>
        <childnode refid="775" relation="include">
        </childnode>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="777" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classblmc__drivers_1_1CanBusFrame" prot="public">blmc_drivers::CanBusFrame</innerclass>
    <innerclass refid="classblmc__drivers_1_1CanBusConnection" prot="public">blmc_drivers::CanBusConnection</innerclass>
    <innerclass refid="classblmc__drivers_1_1CanBusInterface" prot="public">blmc_drivers::CanBusInterface</innerclass>
    <innerclass refid="classblmc__drivers_1_1CanBus" prot="public">blmc_drivers::CanBus</innerclass>
    <innernamespace refid="namespaceblmc__drivers">blmc_drivers</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="license_1_license000002"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-07-11 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/timer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/thread.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/iostream.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/spinner.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/threadsafe/threadsafe_object.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/threadsafe/threadsafe_timeseries.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="os__interface_8hpp" kindref="compound">blmc_drivers/utils/os_interface.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="device__interface_8hpp" kindref="compound">blmc_drivers/devices/device_interface.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceblmc__drivers" kindref="compound">blmc_drivers</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classblmc__drivers_1_1CanBusFrame" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classblmc__drivers_1_1CanBusFrame" kindref="compound">CanBusFrame</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classblmc__drivers_1_1CanBusFrame_1a1a4cd54d31de4361b003e39dfdfa4cfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;uint8_t,<sp/>8&gt;<sp/><ref refid="classblmc__drivers_1_1CanBusFrame_1a1a4cd54d31de4361b003e39dfdfa4cfe" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="41" refid="classblmc__drivers_1_1CanBusFrame_1ab5c88f0e6fa037ace23a059a3e75b30b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classblmc__drivers_1_1CanBusFrame_1ab5c88f0e6fa037ace23a059a3e75b30b" kindref="member">dlc</ref>;</highlight></codeline>
<codeline lineno="45" refid="classblmc__drivers_1_1CanBusFrame_1a5d204dce9fded6502c7d51f3aabbad61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__interface_8hpp_1ab9491ad99890aa9ecf1785d1edd23d64" kindref="member">can_id_t</ref><sp/><ref refid="classblmc__drivers_1_1CanBusFrame_1a5d204dce9fded6502c7d51f3aabbad61" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="48"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__interface_8hpp_1a1acf1ce04ab7fe3a5972c0618adcbbac" kindref="member">rt_printf</ref>(</highlight><highlight class="stringliteral">&quot;---------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__interface_8hpp_1a1acf1ce04ab7fe3a5972c0618adcbbac" kindref="member">rt_printf</ref>(</highlight><highlight class="stringliteral">&quot;can<sp/>bus<sp/>frame<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>datum<sp/>:<sp/>data)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__interface_8hpp_1a1acf1ce04ab7fe3a5972c0618adcbbac" kindref="member">rt_printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>:%d&quot;</highlight><highlight class="normal">,<sp/>datum);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__interface_8hpp_1a1acf1ce04ab7fe3a5972c0618adcbbac" kindref="member">rt_printf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__interface_8hpp_1a1acf1ce04ab7fe3a5972c0618adcbbac" kindref="member">rt_printf</ref>(</highlight><highlight class="stringliteral">&quot;id:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__interface_8hpp_1a1acf1ce04ab7fe3a5972c0618adcbbac" kindref="member">rt_printf</ref>(</highlight><highlight class="stringliteral">&quot;dlc:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>dlc);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__interface_8hpp_1a1acf1ce04ab7fe3a5972c0618adcbbac" kindref="member">rt_printf</ref>(</highlight><highlight class="stringliteral">&quot;---------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classblmc__drivers_1_1CanBusConnection" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classblmc__drivers_1_1CanBusConnection" kindref="compound">CanBusConnection</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75" refid="classblmc__drivers_1_1CanBusConnection_1a9f9e0f2d59955798cfd66ed295b76797" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_can<sp/>send_addr;</highlight></codeline>
<codeline lineno="79" refid="classblmc__drivers_1_1CanBusConnection_1a864cc55d83145a1a54310ef5271f67ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1CanBusConnection_1a864cc55d83145a1a54310ef5271f67ea" kindref="member">socket</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classblmc__drivers_1_1CanBusInterface" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classblmc__drivers_1_1CanBusInterface" kindref="compound">CanBusInterface</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1DeviceInterface" kindref="compound">DeviceInterface</ref></highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92" refid="classblmc__drivers_1_1CanBusInterface_1ac2c6e3ff3b49b04ad5f9f698eadc8690" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1CanBusInterface_1ac2c6e3ff3b49b04ad5f9f698eadc8690" kindref="member">~CanBusInterface</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classblmc__drivers_1_1CanBusInterface_1a2da2627c961927f48359ae7d7e1aa4da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>real_time_tools::ThreadsafeTimeseries&lt;CanBusFrame&gt;<sp/><ref refid="classblmc__drivers_1_1CanBusInterface_1a2da2627c961927f48359ae7d7e1aa4da" kindref="member">CanframeTimeseries</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>CanframeTimeseries&gt;<sp/>get_output_frame()</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>CanframeTimeseries&gt;<sp/>get_input_frame()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>CanframeTimeseries&gt;<sp/>get_sent_input_frame()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_input_frame(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1CanBusFrame" kindref="compound">CanBusFrame</ref>&amp;<sp/>input_frame)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>send_if_input_changed()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classblmc__drivers_1_1CanBus" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classblmc__drivers_1_1CanBus" kindref="compound">CanBus</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1CanBusInterface" kindref="compound">CanBusInterface</ref></highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1CanBus" kindref="compound">CanBus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>can_interface_name,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>history_length<sp/>=<sp/>1000);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classblmc__drivers_1_1CanBus" kindref="compound">CanBus</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176" refid="classblmc__drivers_1_1CanBus_1a449fa3c1b73a9282193ce85b56e9a729" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>CanframeTimeseries&gt;<sp/><ref refid="classblmc__drivers_1_1CanBus_1a449fa3c1b73a9282193ce85b56e9a729" kindref="member">get_output_frame</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="177"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output_;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classblmc__drivers_1_1CanBus_1a5b9282bc65bff196e6d6b393fbdc5891" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>CanframeTimeseries&gt;<sp/><sp/><ref refid="classblmc__drivers_1_1CanBus_1a5b9282bc65bff196e6d6b393fbdc5891" kindref="member">get_input_frame</ref>()</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>input_;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classblmc__drivers_1_1CanBus_1a862e9898a6607ac2e00e712c30e7f348" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>CanframeTimeseries&gt;<sp/><ref refid="classblmc__drivers_1_1CanBus_1a862e9898a6607ac2e00e712c30e7f348" kindref="member">get_sent_input_frame</ref>()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sent_input_;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="classblmc__drivers_1_1CanBus_1ae4887644960c0a92fc82f8bdffbe9c48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1CanBus_1ae4887644960c0a92fc82f8bdffbe9c48" kindref="member">set_input_frame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1CanBusFrame" kindref="compound">CanBusFrame</ref>&amp;<sp/>input_frame)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_-&gt;append(input_frame);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>send_if_input_changed();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="classblmc__drivers_1_1CanBus_1ab39625e5a1fea7d25d0967b4a48de0b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>THREAD_FUNCTION_RETURN_TYPE<sp/><ref refid="classblmc__drivers_1_1CanBus_1ab39625e5a1fea7d25d0967b4a48de0b4" kindref="member">loop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>instance_pointer)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="classblmc__drivers_1_1CanBus" kindref="compound">CanBus</ref>*)(instance_pointer))-&gt;loop();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>THREAD_FUNCTION_RETURN_VALUE;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loop();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>send_frame(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1CanBusFrame" kindref="compound">CanBusFrame</ref>&amp;<sp/>unstamped_can_frame);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1CanBusFrame" kindref="compound">CanBusFrame</ref><sp/>receive_frame();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblmc__drivers_1_1CanBusConnection" kindref="compound">CanBusConnection</ref><sp/>setup_can(std::string<sp/>name,<sp/>uint32_t<sp/>err_mask);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classblmc__drivers_1_1CanBus_1a996c9b1bc46071b2d002de38d6e9f781" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>real_time_tools::SingletypeThreadsafeObject&lt;CanBusConnection,<sp/>1&gt;<sp/><ref refid="classblmc__drivers_1_1CanBus_1a996c9b1bc46071b2d002de38d6e9f781" kindref="member">can_connection_</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classblmc__drivers_1_1CanBus_1ab09707f2c5f6cb7eb98f82e8e190d3c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;real_time_tools::ThreadsafeTimeseries&lt;CanBusFrame&gt;<sp/>&gt;<sp/><ref refid="classblmc__drivers_1_1CanBus_1ab09707f2c5f6cb7eb98f82e8e190d3c4" kindref="member">input_</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classblmc__drivers_1_1CanBus_1ae1ecf491b819c83eb999bb9cdde6fb21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;real_time_tools::ThreadsafeTimeseries&lt;CanBusFrame&gt;<sp/>&gt;<sp/><ref refid="classblmc__drivers_1_1CanBus_1ae1ecf491b819c83eb999bb9cdde6fb21" kindref="member">sent_input_</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="classblmc__drivers_1_1CanBus_1ad9802d502698f202f9842a0c00372931" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;real_time_tools::ThreadsafeTimeseries&lt;CanBusFrame&gt;<sp/>&gt;<sp/><ref refid="classblmc__drivers_1_1CanBus_1ad9802d502698f202f9842a0c00372931" kindref="member">output_</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classblmc__drivers_1_1CanBus_1a85c9d5d9c6413c6871d48a247660ac20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classblmc__drivers_1_1CanBus_1a85c9d5d9c6413c6871d48a247660ac20" kindref="member">is_loop_active_</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="classblmc__drivers_1_1CanBus_1a906baf827eff3c2850728478764a4759" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>real_time_tools::RealTimeThread<sp/><ref refid="classblmc__drivers_1_1CanBus_1a906baf827eff3c2850728478764a4759" kindref="member">rt_thread_</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classblmc__drivers_1_1CanBus_1aef341b0b36d3f02087047b5234ccbf79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classblmc__drivers_1_1CanBus_1aef341b0b36d3f02087047b5234ccbf79" kindref="member">log_dir_</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="classblmc__drivers_1_1CanBus_1aa726bd0d63a783d2a3cc02e2ef9c929b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classblmc__drivers_1_1CanBus_1aa726bd0d63a783d2a3cc02e2ef9c929b" kindref="member">name_</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/blmc_drivers/devices/can_bus.hpp"/>
  </compounddef>
</doxygen>
