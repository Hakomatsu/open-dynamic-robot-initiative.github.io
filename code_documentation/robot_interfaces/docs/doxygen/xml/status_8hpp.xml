<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="status_8hpp" kind="file" language="C++">
    <compoundname>status.hpp</compoundname>
    <includes local="no">cereal/types/string.hpp</includes>
    <includes refid="loggable_8hpp" local="no">robot_interfaces/loggable.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="demo_8cpp" local="yes">demos/demo.cpp</includedby>
    <includedby refid="robot__backend_8hpp" local="no">include/robot_interfaces/robot_backend.hpp</includedby>
    <includedby refid="robot__data_8hpp" local="yes">include/robot_interfaces/robot_data.hpp</includedby>
    <includedby refid="robot__frontend_8hpp" local="no">include/robot_interfaces/robot_frontend.hpp</includedby>
    <includedby refid="robot__logger_8hpp" local="no">include/robot_interfaces/robot_logger.hpp</includedby>
    <includedby refid="py__generic_8cpp" local="no">srcpy/py_generic.cpp</includedby>
    <incdepgraph>
      <node id="588">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="590">
        <label>string</label>
      </node>
      <node id="591">
        <label>vector</label>
      </node>
      <node id="587">
        <label>include/robot_interfaces/status.hpp</label>
        <link refid="status_8hpp"/>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
      </node>
      <node id="589">
        <label>robot_interfaces/loggable.hpp</label>
        <link refid="loggable_8hpp_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="604">
        <label>demos/demo_multiprocess_frontend.cpp</label>
        <link refid="demo__multiprocess__frontend_8cpp"/>
      </node>
      <node id="598">
        <label>include/robot_interfaces/finger_types.hpp</label>
        <link refid="finger__types_8hpp_source"/>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
      </node>
      <node id="599">
        <label>srcpy/py_finger_types.cpp</label>
        <link refid="py__finger__types_8cpp"/>
      </node>
      <node id="601">
        <label>srcpy/py_one_joint_types.cpp</label>
        <link refid="py__one__joint__types_8cpp"/>
      </node>
      <node id="605">
        <label>include/robot_interfaces/pybind_helper.hpp</label>
        <link refid="pybind__helper_8hpp"/>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
      </node>
      <node id="607">
        <label>include/robot_interfaces/robot.hpp</label>
        <link refid="robot_8hpp_source"/>
        <childnode refid="593" relation="include">
        </childnode>
      </node>
      <node id="593">
        <label>demos/demo.cpp</label>
        <link refid="demo_8cpp"/>
      </node>
      <node id="600">
        <label>srcpy/py_trifinger_types.cpp</label>
        <link refid="py__trifinger__types_8cpp"/>
      </node>
      <node id="594">
        <label>include/robot_interfaces/robot_backend.hpp</label>
        <link refid="robot__backend_8hpp_source"/>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
      <node id="603">
        <label>include/robot_interfaces/robot_frontend.hpp</label>
        <link refid="robot__frontend_8hpp_source"/>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
      <node id="606">
        <label>srcpy/py_generic.cpp</label>
        <link refid="py__generic_8cpp"/>
      </node>
      <node id="608">
        <label>include/robot_interfaces/robot_data.hpp</label>
        <link refid="robot__data_8hpp"/>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="609" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
      <node id="609">
        <label>include/robot_interfaces/robot_logger.hpp</label>
        <link refid="robot__logger_8hpp_source"/>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="602">
        <label>srcpy/py_two_joint_types.cpp</label>
        <link refid="py__two__joint__types_8cpp"/>
      </node>
      <node id="597">
        <label>include/robot_interfaces/n_joint_robot_types.hpp</label>
        <link refid="n__joint__robot__types_8hpp"/>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
      </node>
      <node id="595">
        <label>demos/demo_multiprocess_backend.cpp</label>
        <link refid="demo__multiprocess__backend_8cpp"/>
      </node>
      <node id="596">
        <label>include/robot_interfaces/types.hpp</label>
        <link refid="include_2robot__interfaces_2types_8hpp"/>
        <childnode refid="597" relation="include">
        </childnode>
      </node>
      <node id="592">
        <label>include/robot_interfaces/status.hpp</label>
        <link refid="status_8hpp"/>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="609" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structrobot__interfaces_1_1Status" prot="public">robot_interfaces::Status</innerclass>
    <innernamespace refid="namespacerobot__interfaces">robot_interfaces</innernamespace>
    <briefdescription>
<para>Defines the Status struct. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>BSD<sp/>3-Clause<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2018-2019,<sp/>Max<sp/>Planck<sp/>Gesellschaft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>note<sp/>valid<sp/>unless<sp/>otherwise<sp/>stated<sp/>in<sp/>individual<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cereal/types/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;robot_interfaces/loggable.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerobot__interfaces" kindref="compound">robot_interfaces</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="structrobot__interfaces_1_1Status" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrobot__interfaces_1_1Status" kindref="compound">Status</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrobot__interfaces_1_1Loggable" kindref="compound">Loggable</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33" refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6" kindref="member">ErrorStatus</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6ad306b6fdee05fe87455110ddf6501e6c" kindref="member">NO_ERROR</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6a5cd5516428d081129a4aea1db455272e" kindref="member">DRIVER_ERROR</ref>,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6ac44598cc3395b73e9fd2866f42945bd3" kindref="member">BACKEND_ERROR</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structrobot__interfaces_1_1Status_1a8ccb682cd2ba81059991f3b0b9ff0c00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structrobot__interfaces_1_1Status_1a8ccb682cd2ba81059991f3b0b9ff0c00" kindref="member">action_repetitions</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structrobot__interfaces_1_1Status_1a80ffe66121d425d48386b39984cd4c7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6" kindref="member">ErrorStatus</ref><sp/><ref refid="structrobot__interfaces_1_1Status_1a80ffe66121d425d48386b39984cd4c7b" kindref="member">error_status</ref><sp/>=<sp/><ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6ad306b6fdee05fe87455110ddf6501e6c" kindref="member">ErrorStatus::NO_ERROR</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structrobot__interfaces_1_1Status_1a7da10fb73cd19f2840c438d321eac744" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structrobot__interfaces_1_1Status_1a7da10fb73cd19f2840c438d321eac744" kindref="member">error_message</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structrobot__interfaces_1_1Status_1aa5bbec49d6faba7507abc8772dec505d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structrobot__interfaces_1_1Status_1aa5bbec49d6faba7507abc8772dec505d" kindref="member">set_error</ref>(<ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6" kindref="member">ErrorStatus</ref><sp/>error_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>overwrite<sp/>existing<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structrobot__interfaces_1_1Status_1a83507b0921dc1e67e690b34daa3bcbc3" kindref="member">has_error</ref>())</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;error_status<sp/>=<sp/>error_type;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;error_message<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structrobot__interfaces_1_1Status_1a83507b0921dc1e67e690b34daa3bcbc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structrobot__interfaces_1_1Status_1a83507b0921dc1e67e690b34daa3bcbc3" kindref="member">has_error</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="119"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;error_status<sp/>!=<sp/><ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6ad306b6fdee05fe87455110ddf6501e6c" kindref="member">Status::ErrorStatus::NO_ERROR</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(Archive&amp;<sp/>archive)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archive(action_repetitions,<sp/>error_status,<sp/>error_message);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>get_name()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="130"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&quot;action_repetitions&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;error_status&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;<sp/>get_data()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="135"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>error<sp/>message<sp/>cannot<sp/>be<sp/>logged<sp/>because<sp/>only<sp/>numeric<sp/>types<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structrobot__interfaces_1_1Status_1a8ccb682cd2ba81059991f3b0b9ff0c00" kindref="member">action_repetitions</ref>)},</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structrobot__interfaces_1_1Status_1a80ffe66121d425d48386b39984cd4c7b" kindref="member">error_status</ref>)}};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>robot_interfaces</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/robot_interfaces/status.hpp"/>
  </compounddef>
</doxygen>
