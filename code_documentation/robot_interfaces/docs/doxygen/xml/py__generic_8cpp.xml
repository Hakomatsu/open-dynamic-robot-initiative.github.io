<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="py__generic_8cpp" kind="file" language="C++">
    <compoundname>py_generic.cpp</compoundname>
    <includes refid="pybind__helper_8hpp" local="no">robot_interfaces/pybind_helper.hpp</includes>
    <includes refid="status_8hpp" local="no">robot_interfaces/status.hpp</includes>
    <incdepgraph>
      <node id="669">
        <label>atomic</label>
      </node>
      <node id="667">
        <label>time_series/time_series.hpp</label>
      </node>
      <node id="681">
        <label>time_series/multiprocess_time_series.hpp</label>
      </node>
      <node id="670">
        <label>cstdint</label>
      </node>
      <node id="675">
        <label>signal_handler/signal_handler.hpp</label>
      </node>
      <node id="659">
        <label>robot_interfaces/pybind_helper.hpp</label>
        <link refid="pybind__helper_8hpp"/>
        <childnode refid="660" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
        <childnode refid="663" relation="include">
        </childnode>
        <childnode refid="664" relation="include">
        </childnode>
      </node>
      <node id="666">
        <label>cmath</label>
      </node>
      <node id="683">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="674">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="680">
        <label>string</label>
      </node>
      <node id="661">
        <label>pybind11/eigen.h</label>
      </node>
      <node id="672">
        <label>real_time_tools/checkpoint_timer.hpp</label>
      </node>
      <node id="673">
        <label>real_time_tools/process_manager.hpp</label>
      </node>
      <node id="668">
        <label>robot_interfaces/robot_backend.hpp</label>
        <link refid="robot__backend_8hpp_source"/>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
      </node>
      <node id="664">
        <label>robot_interfaces/robot_frontend.hpp</label>
        <link refid="robot__frontend_8hpp_source"/>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
      </node>
      <node id="658">
        <label>srcpy/py_generic.cpp</label>
        <link refid="py__generic_8cpp"/>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
      </node>
      <node id="677">
        <label>robot_interfaces/robot_data.hpp</label>
        <link refid="robot__data_8hpp"/>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
      </node>
      <node id="684">
        <label>vector</label>
      </node>
      <node id="671">
        <label>pybind11/embed.h</label>
      </node>
      <node id="662">
        <label>pybind11/pybind11.h</label>
      </node>
      <node id="678">
        <label>iostream</label>
      </node>
      <node id="682">
        <label>status.hpp</label>
        <link refid="status_8hpp"/>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
      </node>
      <node id="660">
        <label>type_traits</label>
      </node>
      <node id="685">
        <label>robot_interfaces/robot_driver.hpp</label>
        <link refid="robot__driver_8hpp_source"/>
        <childnode refid="680" relation="include">
        </childnode>
      </node>
      <node id="665">
        <label>algorithm</label>
      </node>
      <node id="663">
        <label>pybind11/stl_bind.h</label>
      </node>
      <node id="679">
        <label>memory</label>
      </node>
      <node id="676">
        <label>robot_interfaces/loggable.hpp</label>
        <link refid="loggable_8hpp_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="py__generic_8cpp_1a89eb84247e4a9479a3de283a82e9820f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PYBIND11_MODULE</definition>
        <argsstring>(py_generic, m)</argsstring>
        <name>PYBIND11_MODULE</name>
        <param>
          <type>py_generic</type>
        </param>
        <param>
          <type>m</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcpy/py_generic.cpp" line="27" column="1" bodyfile="srcpy/py_generic.cpp" bodystart="27" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Create bindings for generic types. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>[2017]<sp/>Max<sp/>Planck<sp/>Society.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pybind__helper_8hpp" kindref="compound">robot_interfaces/pybind_helper.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="status_8hpp" kindref="compound">robot_interfaces/status.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerobot__interfaces" kindref="compound">robot_interfaces</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">PYBIND11_MODULE(py_generic,<sp/>m)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>pybind11::class_&lt;Status&gt;<sp/>pystatus(m,<sp/></highlight><highlight class="stringliteral">&quot;Status&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>pystatus.def(pybind11::init&lt;&gt;())</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;action_repetitions&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structrobot__interfaces_1_1Status_1a8ccb682cd2ba81059991f3b0b9ff0c00" kindref="member">Status::action_repetitions</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;error_status&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structrobot__interfaces_1_1Status_1a80ffe66121d425d48386b39984cd4c7b" kindref="member">Status::error_status</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;error_message&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structrobot__interfaces_1_1Status_1a7da10fb73cd19f2840c438d321eac744" kindref="member">Status::error_message</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>pybind11::enum_&lt;Status::ErrorStatus&gt;(pystatus,<sp/></highlight><highlight class="stringliteral">&quot;ErrorStatus&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;NO_ERROR&quot;</highlight><highlight class="normal">,<sp/><ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6ad306b6fdee05fe87455110ddf6501e6c" kindref="member">Status::ErrorStatus::NO_ERROR</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;DRIVER_ERROR&quot;</highlight><highlight class="normal">,<sp/><ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6a5cd5516428d081129a4aea1db455272e" kindref="member">Status::ErrorStatus::DRIVER_ERROR</ref>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;BACKEND_ERROR&quot;</highlight><highlight class="normal">,<sp/><ref refid="structrobot__interfaces_1_1Status_1a88f1cb8387648815ca75754985bdb3b6ac44598cc3395b73e9fd2866f42945bd3" kindref="member">Status::ErrorStatus::BACKEND_ERROR</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="srcpy/py_generic.cpp"/>
  </compounddef>
</doxygen>
