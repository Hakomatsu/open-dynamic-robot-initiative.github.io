<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classrobot__interfaces_1_1RobotDriver" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>robot_interfaces::RobotDriver</compoundname>
    <includes refid="robot__driver_8hpp" local="no">robot_driver.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>TAction</declname>
        <defname>TAction</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>TObservation</declname>
        <defname>TObservation</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrobot__interfaces_1_1RobotDriver_1acbba637e7857bef5c7a1e64c9846ead7" prot="public" static="no">
        <type>TAction</type>
        <definition>typedef TAction robot_interfaces::RobotDriver&lt; TAction, TObservation &gt;::Action</definition>
        <argsstring></argsstring>
        <name>Action</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/robot_driver.hpp" line="34" column="1" bodyfile="include/robot_interfaces/robot_driver.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrobot__interfaces_1_1RobotDriver_1abcb094711d0ae09fd8e2fc9a6aa771f2" prot="public" static="no">
        <type>TObservation</type>
        <definition>typedef TObservation robot_interfaces::RobotDriver&lt; TAction, TObservation &gt;::Observation</definition>
        <argsstring></argsstring>
        <name>Observation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/robot_driver.hpp" line="35" column="1" bodyfile="include/robot_interfaces/robot_driver.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrobot__interfaces_1_1RobotDriver_1af3cbef570a455e1f8085d701282264ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void robot_interfaces::RobotDriver&lt; TAction, TObservation &gt;::initialize</definition>
        <argsstring>()=0</argsstring>
        <name>initialize</name>
        <reimplementedby refid="classDriver_1a81c0beb523fad80cd40cfcc6a6e3de2d">initialize</reimplementedby>
        <reimplementedby refid="classrobot__interfaces_1_1example_1_1Driver_1ab6f6c3f3ffb730d162bec70313f8aab7">initialize</reimplementedby>
        <reimplementedby refid="classrobot__interfaces_1_1MonitoredRobotDriver_1a47b68c24afaa087e4e60e6413ab7ac89">initialize</reimplementedby>
        <briefdescription>
<para>Initialize the robot. </para>        </briefdescription>
        <detaileddescription>
<para>Any initialization procedures that need to be done before sending actions to the robot should be done in this method (e.g. homing to find the absolute position). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/robot_driver.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__interfaces_1_1RobotDriver_1a4294e522fcd12b38d69f7d53fae5d74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Action</type>
        <definition>virtual Action robot_interfaces::RobotDriver&lt; TAction, TObservation &gt;::apply_action</definition>
        <argsstring>(const Action &amp;desired_action)=0</argsstring>
        <name>apply_action</name>
        <reimplementedby refid="classDriver_1a0f8d51bef151ccc38a0cb7b226048e28">apply_action</reimplementedby>
        <reimplementedby refid="classrobot__interfaces_1_1example_1_1Driver_1aa18b1bc90441395e86794a90dfdac9fa">apply_action</reimplementedby>
        <param>
          <type>const Action &amp;</type>
          <declname>desired_action</declname>
        </param>
        <briefdescription>
<para>Apply action immediately and block until it is executed. </para>        </briefdescription>
        <detaileddescription>
<para>This method must apply the desired_action immediately when it is called, and only return once the action has been executed completely. This way we can accommodate both simulators and real robots with this interface.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desired_action</parametername>
</parameternamelist>
<parameterdescription>
<para>The action we want to apply. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The action that was actually applied (since due to safety reasons it might not be possible to apply the desired action). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/robot_driver.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__interfaces_1_1RobotDriver_1ad13d4f4fdfe78bdde4fc964f07fa45e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Observation</type>
        <definition>virtual Observation robot_interfaces::RobotDriver&lt; TAction, TObservation &gt;::get_latest_observation</definition>
        <argsstring>()=0</argsstring>
        <name>get_latest_observation</name>
        <reimplementedby refid="classDriver_1afb09663997bffc5c694fb5aa8aca243a">get_latest_observation</reimplementedby>
        <reimplementedby refid="classrobot__interfaces_1_1example_1_1Driver_1a2fa7ee03258e65037ed69d9a8363bfe8">get_latest_observation</reimplementedby>
        <reimplementedby refid="classrobot__interfaces_1_1MonitoredRobotDriver_1a97774dddcda1038f338d18ef0b572ad8">get_latest_observation</reimplementedby>
        <briefdescription>
<para>Return the latest observation immediately. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Observation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/robot_driver.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__interfaces_1_1RobotDriver_1acdf4c5d6993b836a180e6b6fc12b3445" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string robot_interfaces::RobotDriver&lt; TAction, TObservation &gt;::get_error</definition>
        <argsstring>()=0</argsstring>
        <name>get_error</name>
        <reimplementedby refid="classDriver_1a6fb739b87c892c4102e838508855c0be">get_error</reimplementedby>
        <reimplementedby refid="classrobot__interfaces_1_1example_1_1Driver_1a8465b912da8f11a6db271f11ff4eced1">get_error</reimplementedby>
        <reimplementedby refid="classrobot__interfaces_1_1MonitoredRobotDriver_1a944425cc7e0845184f33b16405a9e61e">get_error</reimplementedby>
        <briefdescription>
<para>Get error message if there is any error. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns an error message or an empty string if there is no error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/robot_driver.hpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__interfaces_1_1RobotDriver_1a3451fb8b15d2840b559f3ee858de01f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void robot_interfaces::RobotDriver&lt; TAction, TObservation &gt;::shutdown</definition>
        <argsstring>()=0</argsstring>
        <name>shutdown</name>
        <reimplementedby refid="classDriver_1a630fc9183eb419beb09b5828b4547b6d">shutdown</reimplementedby>
        <reimplementedby refid="classrobot__interfaces_1_1example_1_1Driver_1a91cbe74896c9ed56ff7eee6380964dfe">shutdown</reimplementedby>
        <reimplementedby refid="classrobot__interfaces_1_1MonitoredRobotDriver_1a95714a60e69a3ac06461382a7b391289">shutdown</reimplementedby>
        <briefdescription>
<para>Shut down the robot safely. </para>        </briefdescription>
        <detaileddescription>
<para>Use this method if your robot needs to perform some action when shutting down, e.g. to move it to a defined rest position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/robot_driver.hpp" line="79" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classDriver" kindref="compound">Driver</ref> for interfacing the actual robot hardware or simulation. </para>    </briefdescription>
    <detaileddescription>
<para>Interface to the robot used by the subsequent classes. Any robot (be it real or simulation) has to derive from this class and implement the functions <ref refid="classrobot__interfaces_1_1RobotDriver_1a4294e522fcd12b38d69f7d53fae5d74a" kindref="member">apply_action()</ref>, <ref refid="classrobot__interfaces_1_1RobotDriver_1ad13d4f4fdfe78bdde4fc964f07fa45e2" kindref="member">get_latest_observation()</ref> and <ref refid="classrobot__interfaces_1_1RobotDriver_1a3451fb8b15d2840b559f3ee858de01f8" kindref="member">shutdown()</ref>. This Base class provides some timing logic around those three functions. It makes sure that after the first call of <ref refid="classrobot__interfaces_1_1RobotDriver_1a4294e522fcd12b38d69f7d53fae5d74a" kindref="member">apply_action()</ref>, it is always called again after some specified time, otherwise the <ref refid="classrobot__interfaces_1_1RobotDriver_1a3451fb8b15d2840b559f3ee858de01f8" kindref="member">shutdown()</ref> method will be called. This Base class also makes sure that the <ref refid="classrobot__interfaces_1_1RobotDriver_1a4294e522fcd12b38d69f7d53fae5d74a" kindref="member">apply_action()</ref> function itself does not take more time than expected.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Action</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Observation</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="include/robot_interfaces/robot_driver.hpp" line="32" column="1" bodyfile="include/robot_interfaces/robot_driver.hpp" bodystart="31" bodyend="80"/>
    <listofallmembers>
      <member refid="classrobot__interfaces_1_1RobotDriver_1acbba637e7857bef5c7a1e64c9846ead7" prot="public" virt="non-virtual"><scope>robot_interfaces::RobotDriver</scope><name>Action</name></member>
      <member refid="classrobot__interfaces_1_1RobotDriver_1a4294e522fcd12b38d69f7d53fae5d74a" prot="public" virt="pure-virtual"><scope>robot_interfaces::RobotDriver</scope><name>apply_action</name></member>
      <member refid="classrobot__interfaces_1_1RobotDriver_1acdf4c5d6993b836a180e6b6fc12b3445" prot="public" virt="pure-virtual"><scope>robot_interfaces::RobotDriver</scope><name>get_error</name></member>
      <member refid="classrobot__interfaces_1_1RobotDriver_1ad13d4f4fdfe78bdde4fc964f07fa45e2" prot="public" virt="pure-virtual"><scope>robot_interfaces::RobotDriver</scope><name>get_latest_observation</name></member>
      <member refid="classrobot__interfaces_1_1RobotDriver_1af3cbef570a455e1f8085d701282264ff" prot="public" virt="pure-virtual"><scope>robot_interfaces::RobotDriver</scope><name>initialize</name></member>
      <member refid="classrobot__interfaces_1_1RobotDriver_1abcb094711d0ae09fd8e2fc9a6aa771f2" prot="public" virt="non-virtual"><scope>robot_interfaces::RobotDriver</scope><name>Observation</name></member>
      <member refid="classrobot__interfaces_1_1RobotDriver_1a3451fb8b15d2840b559f3ee858de01f8" prot="public" virt="pure-virtual"><scope>robot_interfaces::RobotDriver</scope><name>shutdown</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
