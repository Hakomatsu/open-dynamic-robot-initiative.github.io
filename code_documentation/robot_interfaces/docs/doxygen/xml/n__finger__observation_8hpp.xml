<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="n__finger__observation_8hpp" kind="file" language="C++">
    <compoundname>n_finger_observation.hpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">Eigen/Eigen</includes>
    <includes local="no">serialization_utils/cereal_eigen.hpp</includes>
    <includes refid="loggable_8hpp" local="no">robot_interfaces/loggable.hpp</includes>
    <includedby refid="n__joint__robot__types_8hpp" local="yes">include/robot_interfaces/n_joint_robot_types.hpp</includedby>
    <incdepgraph>
      <node id="219">
        <label>serialization_utils/cereal_eigen.hpp</label>
      </node>
      <node id="218">
        <label>Eigen/Eigen</label>
      </node>
      <node id="216">
        <label>string</label>
      </node>
      <node id="217">
        <label>vector</label>
      </node>
      <node id="215">
        <label>include/robot_interfaces/n_finger_observation.hpp</label>
        <link refid="n__finger__observation_8hpp"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>robot_interfaces/loggable.hpp</label>
        <link refid="loggable_8hpp_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="223">
        <label>include/robot_interfaces/finger_types.hpp</label>
        <link refid="finger__types_8hpp_source"/>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="224">
        <label>srcpy/py_finger_types.cpp</label>
        <link refid="py__finger__types_8cpp"/>
      </node>
      <node id="226">
        <label>srcpy/py_one_joint_types.cpp</label>
        <link refid="py__one__joint__types_8cpp"/>
      </node>
      <node id="225">
        <label>srcpy/py_trifinger_types.cpp</label>
        <link refid="py__trifinger__types_8cpp"/>
      </node>
      <node id="227">
        <label>srcpy/py_two_joint_types.cpp</label>
        <link refid="py__two__joint__types_8cpp"/>
      </node>
      <node id="222">
        <label>include/robot_interfaces/n_joint_robot_types.hpp</label>
        <link refid="n__joint__robot__types_8hpp"/>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>include/robot_interfaces/n_finger_observation.hpp</label>
        <link refid="n__finger__observation_8hpp"/>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structrobot__interfaces_1_1NFingerObservation" prot="public">robot_interfaces::NFingerObservation</innerclass>
    <innernamespace refid="namespacerobot__interfaces">robot_interfaces</innernamespace>
    <briefdescription>
<para>Observation of a Finger robot. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2020, Max Planck Gesellschaft. All rights reserved. </para></simplesect>
<xrefsect id="license_1_license000001"><xreftitle>License</xreftitle><xrefdescription><para>BSD 3-clause </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Eigen&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;serialization_utils/cereal_eigen.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;robot_interfaces/loggable.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerobot__interfaces" kindref="compound">robot_interfaces</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N_FINGERS&gt;</highlight></codeline>
<codeline lineno="41" refid="structrobot__interfaces_1_1NFingerObservation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrobot__interfaces_1_1NFingerObservation" kindref="compound">NFingerObservation</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrobot__interfaces_1_1Loggable" kindref="compound">Loggable</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_fingers<sp/>=<sp/>N_FINGERS;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_joints<sp/>=<sp/>N_FINGERS<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>num_joints,<sp/>1&gt;<sp/>JointVector;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>num_fingers,<sp/>1&gt;<sp/>FingerVector;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structrobot__interfaces_1_1NFingerObservation_1ac830302468e0dee99c3c1e7e388267c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>JointVector<sp/><ref refid="structrobot__interfaces_1_1NFingerObservation_1ac830302468e0dee99c3c1e7e388267c3" kindref="member">position</ref><sp/>=<sp/>JointVector::Zero();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structrobot__interfaces_1_1NFingerObservation_1a27ebb82cb119786e1ae9f85f89dfa76a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>JointVector<sp/><ref refid="structrobot__interfaces_1_1NFingerObservation_1a27ebb82cb119786e1ae9f85f89dfa76a" kindref="member">velocity</ref><sp/>=<sp/>JointVector::Zero();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structrobot__interfaces_1_1NFingerObservation_1a693ccc700f9506bcc73cb12b63275194" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>JointVector<sp/><ref refid="structrobot__interfaces_1_1NFingerObservation_1a693ccc700f9506bcc73cb12b63275194" kindref="member">torque</ref><sp/>=<sp/>JointVector::Zero();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structrobot__interfaces_1_1NFingerObservation_1a48ea78dfbc3e17a313a312d758d27343" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FingerVector<sp/><ref refid="structrobot__interfaces_1_1NFingerObservation_1a48ea78dfbc3e17a313a312d758d27343" kindref="member">tip_force</ref><sp/>=<sp/>FingerVector::Zero();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(Archive&amp;<sp/>archive)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archive(position,<sp/>velocity,<sp/>torque,<sp/>tip_force);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>get_name()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;velocity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;torque&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tip_force&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;<sp/>get_data()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="79"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>vecd;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;vecd&gt;<sp/>result<sp/>=<sp/>{vecd(position.size()),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecd(velocity.size()),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecd(torque.size()),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecd(tip_force.size())};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JointVector::Map(&amp;result[0][0],<sp/>position.size())<sp/>=<sp/>position;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JointVector::Map(&amp;result[1][0],<sp/>velocity.size())<sp/>=<sp/>velocity;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JointVector::Map(&amp;result[2][0],<sp/>torque.size())<sp/>=<sp/>torque;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FingerVector::Map(&amp;result[3][0],<sp/>tip_force.size())<sp/>=<sp/>tip_force;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>robot_interfaces</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/robot_interfaces/n_finger_observation.hpp"/>
  </compounddef>
</doxygen>
