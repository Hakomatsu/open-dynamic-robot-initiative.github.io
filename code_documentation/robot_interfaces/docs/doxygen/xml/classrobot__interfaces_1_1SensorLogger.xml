<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classrobot__interfaces_1_1SensorLogger" kind="class" language="C++" prot="public">
    <compoundname>robot_interfaces::SensorLogger</compoundname>
    <includes refid="sensor__logger_8hpp" local="no">sensor_logger.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Observation</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrobot__interfaces_1_1SensorLogger_1abfffa764f13c4b260416fbfe7e6a14ea" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classrobot__interfaces_1_1SensorData" kindref="compound">SensorData</ref>&lt; Observation &gt; &gt;</type>
        <definition>typedef std::shared_ptr&lt;SensorData&lt;Observation&gt; &gt; robot_interfaces::SensorLogger&lt; Observation &gt;::DataPtr</definition>
        <argsstring></argsstring>
        <name>DataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="47" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrobot__interfaces_1_1SensorLogger_1a1771168bc44050029fac7f5943796ff9" prot="private" static="no" mutable="no">
        <type>DataPtr</type>
        <definition>DataPtr robot_interfaces::SensorLogger&lt; Observation &gt;::sensor_data_</definition>
        <argsstring></argsstring>
        <name>sensor_data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="126" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrobot__interfaces_1_1SensorLogger_1a0fcc2523aa7c8b05a17429c01ec19975" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Observation &gt;</type>
        <definition>std::vector&lt;Observation&gt; robot_interfaces::SensorLogger&lt; Observation &gt;::buffer_</definition>
        <argsstring></argsstring>
        <name>buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="127" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrobot__interfaces_1_1SensorLogger_1a4ac7be763d55fa33344246fbe20598b6" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t robot_interfaces::SensorLogger&lt; Observation &gt;::buffer_limit_</definition>
        <argsstring></argsstring>
        <name>buffer_limit_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="128" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrobot__interfaces_1_1SensorLogger_1a22eba71448f0428c1b4daf72243e3bf8" prot="private" static="no" mutable="no">
        <type>std::thread</type>
        <definition>std::thread robot_interfaces::SensorLogger&lt; Observation &gt;::buffer_thread_</definition>
        <argsstring></argsstring>
        <name>buffer_thread_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="129" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrobot__interfaces_1_1SensorLogger_1a4af2d1815c0f205ea9c5c064723947f1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool robot_interfaces::SensorLogger&lt; Observation &gt;::enabled_</definition>
        <argsstring></argsstring>
        <name>enabled_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="130" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrobot__interfaces_1_1SensorLogger_1aa2b7935cb32b53c49d6c3e541964d968" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>robot_interfaces::SensorLogger&lt; Observation &gt;::SensorLogger</definition>
        <argsstring>(DataPtr sensor_data, size_t buffer_limit)</argsstring>
        <name>SensorLogger</name>
        <param>
          <type>DataPtr</type>
          <declname>sensor_data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_limit</declname>
        </param>
        <briefdescription>
<para>Initialize the logger. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="classrobot__interfaces_1_1SensorData" kindref="compound">SensorData</ref> instance from which observations are obtained. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of observations that are logged. When this limit is reached, the logger will stop automatically, that is new observations are not logged anymore. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="58" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__interfaces_1_1SensorLogger_1a1b2121061d96e3f026546f4359cfd769" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>robot_interfaces::SensorLogger&lt; Observation &gt;::SensorLogger</definition>
        <argsstring>(SensorLogger &amp;&amp;)=default</argsstring>
        <name>SensorLogger</name>
        <param>
          <type><ref refid="classrobot__interfaces_1_1SensorLogger" kindref="compound">SensorLogger</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__interfaces_1_1SensorLogger_1a68653f4acc7a721aa558f413dd139193" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>robot_interfaces::SensorLogger&lt; Observation &gt;::~SensorLogger</definition>
        <argsstring>()</argsstring>
        <name>~SensorLogger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="69" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__interfaces_1_1SensorLogger_1a264f301075b8b4330b35776b3192bee9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void robot_interfaces::SensorLogger&lt; Observation &gt;::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
<para>Start logging. </para>        </briefdescription>
        <detaileddescription>
<para>If the logger is already running, this is a noop. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="79" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__interfaces_1_1SensorLogger_1ac4432aabd2e52401ec02bdcdfbc54e1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void robot_interfaces::SensorLogger&lt; Observation &gt;::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>Stop logging. </para>        </briefdescription>
        <detaileddescription>
<para>If the logger is already stopped, this is a noop. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="94" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="94" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__interfaces_1_1SensorLogger_1ab12a1bf654d7d09d3dd498d9d86476f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void robot_interfaces::SensorLogger&lt; Observation &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Clear the log buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="104" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classrobot__interfaces_1_1SensorLogger_1a1ab1fc25c3f20624a240430dff78b029" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void robot_interfaces::SensorLogger&lt; Observation &gt;::stop_and_save</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>stop_and_save</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Stop logging and save logged messages to a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the output file. Existing files will be overwritten. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="115" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="115" bodyend="123"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrobot__interfaces_1_1SensorLogger_1af05366bd0418ab2dea5a8f7de4031c5b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void robot_interfaces::SensorLogger&lt; Observation &gt;::loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
<para>Get observations from sensor_data_ and add them to the buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="133" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="133" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Record sensor observations and store them to a file. </para>    </briefdescription>
    <detaileddescription>
<para>Fetches observations from the given <ref refid="classrobot__interfaces_1_1SensorData" kindref="compound">SensorData</ref> and buffers them in memory. Buffered observations can be written to a file. For writing to file cereal is used, so the Observation type has to be serializable by cereal.</para><para>Usage Example:</para><para><programlisting><codeline><highlight class="normal">auto<sp/>logger<sp/>=<sp/>SensorLogger&lt;int&gt;(sensor_data,<sp/>BUFFER_LIMIT);</highlight></codeline>
<codeline><highlight class="normal">logger.start();</highlight></codeline>
<codeline><highlight class="normal">//<sp/>do<sp/>something</highlight></codeline>
<codeline><highlight class="normal">logger.stop_and_save(&quot;/tmp/sensordata.log&quot;);</highlight></codeline>
</programlisting></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Observation</parametername>
</parameternamelist>
<parameterdescription>
<para>Typ of the observation that is recorded. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="include/robot_interfaces/sensors/sensor_logger.hpp" line="45" column="1" bodyfile="include/robot_interfaces/sensors/sensor_logger.hpp" bodystart="44" bodyend="160"/>
    <listofallmembers>
      <member refid="classrobot__interfaces_1_1SensorLogger_1a0fcc2523aa7c8b05a17429c01ec19975" prot="private" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>buffer_</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1a4ac7be763d55fa33344246fbe20598b6" prot="private" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>buffer_limit_</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1a22eba71448f0428c1b4daf72243e3bf8" prot="private" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>buffer_thread_</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1abfffa764f13c4b260416fbfe7e6a14ea" prot="public" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>DataPtr</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1a4af2d1815c0f205ea9c5c064723947f1" prot="private" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>enabled_</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1af05366bd0418ab2dea5a8f7de4031c5b" prot="private" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>loop</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1ab12a1bf654d7d09d3dd498d9d86476f2" prot="public" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>reset</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1a1771168bc44050029fac7f5943796ff9" prot="private" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>sensor_data_</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1aa2b7935cb32b53c49d6c3e541964d968" prot="public" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>SensorLogger</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1a1b2121061d96e3f026546f4359cfd769" prot="public" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>SensorLogger</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1a264f301075b8b4330b35776b3192bee9" prot="public" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>start</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1ac4432aabd2e52401ec02bdcdfbc54e1f" prot="public" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>stop</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1a1ab1fc25c3f20624a240430dff78b029" prot="public" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>stop_and_save</name></member>
      <member refid="classrobot__interfaces_1_1SensorLogger_1a68653f4acc7a721aa558f413dd139193" prot="public" virt="non-virtual"><scope>robot_interfaces::SensorLogger</scope><name>~SensorLogger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
