<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="robot__data_8hpp" kind="file" language="C++">
    <compoundname>robot_data.hpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">time_series/multiprocess_time_series.hpp</includes>
    <includes local="no">time_series/time_series.hpp</includes>
    <includes refid="status_8hpp" local="yes">status.hpp</includes>
    <includedby refid="robot__backend_8hpp" local="no">include/robot_interfaces/robot_backend.hpp</includedby>
    <includedby refid="include_2robot__interfaces_2types_8hpp" local="yes">include/robot_interfaces/types.hpp</includedby>
    <includedby refid="robot__frontend_8hpp" local="no">include/robot_interfaces/robot_frontend.hpp</includedby>
    <includedby refid="robot__logger_8hpp" local="no">include/robot_interfaces/robot_logger.hpp</includedby>
    <includedby refid="robot_8hpp" local="no">include/robot_interfaces/robot.hpp</includedby>
    <incdepgraph>
      <node id="398">
        <label>time_series/time_series.hpp</label>
      </node>
      <node id="397">
        <label>time_series/multiprocess_time_series.hpp</label>
      </node>
      <node id="400">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="396">
        <label>string</label>
      </node>
      <node id="393">
        <label>include/robot_interfaces/robot_data.hpp</label>
        <link refid="robot__data_8hpp"/>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
      </node>
      <node id="402">
        <label>vector</label>
      </node>
      <node id="394">
        <label>iostream</label>
      </node>
      <node id="399">
        <label>status.hpp</label>
        <link refid="status_8hpp"/>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
      </node>
      <node id="395">
        <label>memory</label>
      </node>
      <node id="401">
        <label>robot_interfaces/loggable.hpp</label>
        <link refid="loggable_8hpp_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="415">
        <label>demos/demo_multiprocess_frontend.cpp</label>
        <link refid="demo__multiprocess__frontend_8cpp"/>
      </node>
      <node id="409">
        <label>include/robot_interfaces/finger_types.hpp</label>
        <link refid="finger__types_8hpp_source"/>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="410">
        <label>srcpy/py_finger_types.cpp</label>
        <link refid="py__finger__types_8cpp"/>
      </node>
      <node id="412">
        <label>srcpy/py_one_joint_types.cpp</label>
        <link refid="py__one__joint__types_8cpp"/>
      </node>
      <node id="416">
        <label>include/robot_interfaces/pybind_helper.hpp</label>
        <link refid="pybind__helper_8hpp"/>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
      </node>
      <node id="418">
        <label>include/robot_interfaces/robot.hpp</label>
        <link refid="robot_8hpp_source"/>
        <childnode refid="405" relation="include">
        </childnode>
      </node>
      <node id="405">
        <label>demos/demo.cpp</label>
        <link refid="demo_8cpp"/>
      </node>
      <node id="411">
        <label>srcpy/py_trifinger_types.cpp</label>
        <link refid="py__trifinger__types_8cpp"/>
      </node>
      <node id="404">
        <label>include/robot_interfaces/robot_backend.hpp</label>
        <link refid="robot__backend_8hpp_source"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
      </node>
      <node id="414">
        <label>include/robot_interfaces/robot_frontend.hpp</label>
        <link refid="robot__frontend_8hpp_source"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
      </node>
      <node id="417">
        <label>srcpy/py_generic.cpp</label>
        <link refid="py__generic_8cpp"/>
      </node>
      <node id="403">
        <label>include/robot_interfaces/robot_data.hpp</label>
        <link refid="robot__data_8hpp"/>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
      </node>
      <node id="419">
        <label>include/robot_interfaces/robot_logger.hpp</label>
        <link refid="robot__logger_8hpp_source"/>
        <childnode refid="407" relation="include">
        </childnode>
      </node>
      <node id="413">
        <label>srcpy/py_two_joint_types.cpp</label>
        <link refid="py__two__joint__types_8cpp"/>
      </node>
      <node id="408">
        <label>include/robot_interfaces/n_joint_robot_types.hpp</label>
        <link refid="n__joint__robot__types_8hpp"/>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
      </node>
      <node id="406">
        <label>demos/demo_multiprocess_backend.cpp</label>
        <link refid="demo__multiprocess__backend_8cpp"/>
      </node>
      <node id="407">
        <label>include/robot_interfaces/types.hpp</label>
        <link refid="include_2robot__interfaces_2types_8hpp"/>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classrobot__interfaces_1_1RobotData" prot="public">robot_interfaces::RobotData</innerclass>
    <innerclass refid="classrobot__interfaces_1_1SingleProcessRobotData" prot="public">robot_interfaces::SingleProcessRobotData</innerclass>
    <innerclass refid="classrobot__interfaces_1_1MultiProcessRobotData" prot="public">robot_interfaces::MultiProcessRobotData</innerclass>
    <innernamespace refid="namespacerobot__interfaces">robot_interfaces</innernamespace>
    <briefdescription>
<para>RobotData classes for both single- and multi-process applications. </para>    </briefdescription>
    <detaileddescription>
<para><xrefsect id="license_1_license000005"><xreftitle>License</xreftitle><xrefdescription><para>BSD 3-clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2018-2020, New York University and Max Planck Gesellschaft </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time_series/multiprocess_time_series.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time_series/time_series.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="status_8hpp" kindref="compound">status.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerobot__interfaces" kindref="compound">robot_interfaces</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Observation&gt;</highlight></codeline>
<codeline lineno="50" refid="classrobot__interfaces_1_1RobotData" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrobot__interfaces_1_1RobotData" kindref="compound">RobotData</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54" refid="classrobot__interfaces_1_1RobotData_1a03b4160b90de7eac5ffb67cb8a872cee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;time_series::TimeSeriesInterface&lt;Action&gt;&gt;<sp/><ref refid="classrobot__interfaces_1_1RobotData_1a03b4160b90de7eac5ffb67cb8a872cee" kindref="member">desired_action</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checks).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classrobot__interfaces_1_1RobotData_1a05fea4d2f75f7fc34daf2bfc71fbfc4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;time_series::TimeSeriesInterface&lt;Action&gt;&gt;<sp/><ref refid="classrobot__interfaces_1_1RobotData_1a05fea4d2f75f7fc34daf2bfc71fbfc4b" kindref="member">applied_action</ref>;</highlight></codeline>
<codeline lineno="59" refid="classrobot__interfaces_1_1RobotData_1ae3d13595b92f82f76b0f1df2961258bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;time_series::TimeSeriesInterface&lt;Observation&gt;&gt;<sp/><ref refid="classrobot__interfaces_1_1RobotData_1ae3d13595b92f82f76b0f1df2961258bd" kindref="member">observation</ref>;</highlight></codeline>
<codeline lineno="61" refid="classrobot__interfaces_1_1RobotData_1a47c53daf923c30981d15008e5134f648" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;time_series::TimeSeriesInterface&lt;Status&gt;&gt;<sp/><ref refid="classrobot__interfaces_1_1RobotData_1a47c53daf923c30981d15008e5134f648" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>constructor<sp/>protected<sp/>to<sp/>prevent<sp/>instantiation<sp/>of<sp/>the<sp/>base<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrobot__interfaces_1_1RobotData" kindref="compound">RobotData</ref>(){};</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Observation&gt;</highlight></codeline>
<codeline lineno="79" refid="classrobot__interfaces_1_1SingleProcessRobotData" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrobot__interfaces_1_1SingleProcessRobotData" kindref="compound">SingleProcessRobotData</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrobot__interfaces_1_1RobotData" kindref="compound">RobotData</ref>&lt;Action,<sp/>Observation&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87" refid="classrobot__interfaces_1_1SingleProcessRobotData_1adcb9896c90464e27fb1cd2f303ca7cef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrobot__interfaces_1_1SingleProcessRobotData_1adcb9896c90464e27fb1cd2f303ca7cef" kindref="member">SingleProcessRobotData</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>history_length<sp/>=<sp/>1000)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>single<sp/>process<sp/>time<sp/>series.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrobot__interfaces_1_1RobotData_1a03b4160b90de7eac5ffb67cb8a872cee" kindref="member">desired_action</ref><sp/>=</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;time_series::TimeSeries&lt;Action&gt;&gt;(history_length);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrobot__interfaces_1_1RobotData_1a05fea4d2f75f7fc34daf2bfc71fbfc4b" kindref="member">applied_action</ref><sp/>=</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;time_series::TimeSeries&lt;Action&gt;&gt;(history_length);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrobot__interfaces_1_1RobotData_1ae3d13595b92f82f76b0f1df2961258bd" kindref="member">observation</ref><sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;time_series::TimeSeries&lt;Observation&gt;&gt;(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history_length);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrobot__interfaces_1_1RobotData_1a47c53daf923c30981d15008e5134f648" kindref="member">status</ref><sp/>=</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;time_series::TimeSeries&lt;Status&gt;&gt;(history_length);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Action,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Observation&gt;</highlight></codeline>
<codeline lineno="114" refid="classrobot__interfaces_1_1MultiProcessRobotData" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrobot__interfaces_1_1MultiProcessRobotData" kindref="compound">MultiProcessRobotData</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrobot__interfaces_1_1RobotData" kindref="compound">RobotData</ref>&lt;Action,<sp/>Observation&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129" refid="classrobot__interfaces_1_1MultiProcessRobotData_1a27bb5ee187ceacb386d89c828481b057" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrobot__interfaces_1_1MultiProcessRobotData_1a27bb5ee187ceacb386d89c828481b057" kindref="member">MultiProcessRobotData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;shared_memory_id_prefix,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_master,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>history_length<sp/>=<sp/>1000)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>multi<sp/>process<sp/>time<sp/>series.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>time<sp/>series<sp/>needs<sp/>its<sp/>own<sp/>shared<sp/>memory<sp/>ID,<sp/>so<sp/>add<sp/>unique</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>suffixes<sp/>to<sp/>the<sp/>given<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>id_desired_action<sp/>=</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_memory_id_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_desired_action&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>id_applied_action<sp/>=</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_memory_id_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_applied_action&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>id_observation<sp/>=</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_memory_id_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_observation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>id_status<sp/>=<sp/>shared_memory_id_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_status&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_master)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>master<sp/>instance<sp/>is<sp/>in<sp/>charge<sp/>of<sp/>cleaning<sp/>the<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_series::clear_memory(id_desired_action);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_series::clear_memory(id_applied_action);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_series::clear_memory(id_observation);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_series::clear_memory(id_status);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clean_on_destruction<sp/>=<sp/>is_master;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrobot__interfaces_1_1RobotData_1a03b4160b90de7eac5ffb67cb8a872cee" kindref="member">desired_action</ref><sp/>=</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;time_series::MultiprocessTimeSeries&lt;Action&gt;&gt;(</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_desired_action,<sp/>history_length,<sp/>clean_on_destruction);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrobot__interfaces_1_1RobotData_1a05fea4d2f75f7fc34daf2bfc71fbfc4b" kindref="member">applied_action</ref><sp/>=</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;time_series::MultiprocessTimeSeries&lt;Action&gt;&gt;(</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_applied_action,<sp/>history_length,<sp/>clean_on_destruction);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrobot__interfaces_1_1RobotData_1ae3d13595b92f82f76b0f1df2961258bd" kindref="member">observation</ref><sp/>=</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;time_series::MultiprocessTimeSeries&lt;Observation&gt;&gt;(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_observation,<sp/>history_length,<sp/>clean_on_destruction);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrobot__interfaces_1_1RobotData_1a47c53daf923c30981d15008e5134f648" kindref="member">status</ref><sp/>=</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;time_series::MultiprocessTimeSeries&lt;Status&gt;&gt;(</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_status,<sp/>history_length,<sp/>clean_on_destruction);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>robot_interfaces</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/robot_interfaces/robot_data.hpp"/>
  </compounddef>
</doxygen>
