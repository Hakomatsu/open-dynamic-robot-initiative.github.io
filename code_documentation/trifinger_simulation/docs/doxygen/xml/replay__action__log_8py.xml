<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="replay__action__log_8py" kind="file" language="Python">
    <compoundname>replay_action_log.py</compoundname>
    <innernamespace refid="namespacereplay__action__log">replay_action_log</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/env<sp/>python3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Replay<sp/>actions<sp/>for<sp/>a<sp/>given<sp/>logfile<sp/>and<sp/>verify<sp/>final<sp/>object<sp/>pose.</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">The<sp/>log<sp/>file<sp/>is<sp/>a<sp/>JSON<sp/>file<sp/>as<sp/>produced<sp/>by</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">`trifinger_simulation.TriFingerPlatform.store_action_log()`<sp/>which<sp/>contains<sp/>the</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">initial<sp/>state,<sp/>a<sp/>list<sp/>of<sp/>all<sp/>applied<sp/>actions<sp/>and<sp/>the<sp/>final<sp/>state<sp/>of<sp/>the<sp/>object.</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">The<sp/>simulation<sp/>is<sp/>initialised<sp/>according<sp/>to<sp/>the<sp/>given<sp/>initial<sp/>pose<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">actions<sp/>are<sp/>applied<sp/>one<sp/>by<sp/>one.<sp/><sp/>In<sp/>the<sp/>end,<sp/>it<sp/>is<sp/>verified<sp/>if<sp/>the<sp/>final<sp/>object</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">pose<sp/>in<sp/>the<sp/>simulation<sp/>matches<sp/>the<sp/>one<sp/>in<sp/>the<sp/>log<sp/>file.</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">The<sp/>accumulated<sp/>reward<sp/>is<sp/>computed<sp/>based<sp/>on<sp/>the<sp/>given<sp/>goal<sp/>pose<sp/>and<sp/>printed<sp/>in</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">the<sp/>end.</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">Both<sp/>initial<sp/>and<sp/>goal<sp/>pose<sp/>are<sp/>given<sp/>as<sp/>JSON<sp/>strings<sp/>with<sp/>keys<sp/>&quot;position&quot;<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">&quot;orientation&quot;<sp/>(as<sp/>quaternion).<sp/><sp/>Example:</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;position&quot;:<sp/>[-0.03,<sp/>0.07,<sp/>0.05],<sp/>&quot;orientation&quot;:<sp/>[0.0,<sp/>0.0,<sp/>0.68,<sp/>-0.73]}</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>argparse</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>trifinger_simulation<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>trifinger_platform</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacetrifinger__simulation_1_1tasks" kindref="compound">trifinger_simulation.tasks</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>move_cube</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">main():</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>argparse.ArgumentParser(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=__doc__,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formatter_class=argparse.RawDescriptionHelpFormatter,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.add_argument(</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--logfile&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-l&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type=str,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;Path<sp/>to<sp/>the<sp/>log<sp/>file.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.add_argument(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--difficulty&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type=int,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;The<sp/>difficulty<sp/>level<sp/>of<sp/>the<sp/>goal<sp/>(for<sp/>reward<sp/>computation).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.add_argument(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--initial-pose&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-i&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type=str,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metavar=</highlight><highlight class="stringliteral">&quot;JSON&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;Initial<sp/>pose<sp/>of<sp/>the<sp/>cube<sp/>as<sp/>JSON<sp/>string.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.add_argument(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--goal-pose&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-g&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type=str,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metavar=</highlight><highlight class="stringliteral">&quot;JSON&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;Goal<sp/>pose<sp/>of<sp/>the<sp/>cube<sp/>as<sp/>JSON<sp/>string.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>parser.parse_args()</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>open(args.logfile,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;)<sp/>as<sp/>fh:</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log<sp/>=<sp/>json.load(fh)</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>initial_object_pose<sp/>=<sp/>move_cube.Pose.from_json(args.initial_pose)</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>goal_pose<sp/>=<sp/>move_cube.Pose.from_json(args.goal_pose)</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>platform<sp/>=<sp/>trifinger_platform.TriFingerPlatform(</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visualization=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>initial_object_pose=initial_object_pose</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>verify<sp/>that<sp/>the<sp/>number<sp/>of<sp/>logged<sp/>actions<sp/>matches<sp/>with<sp/>the<sp/>episode<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>n_actions<sp/>=<sp/>len(log[</highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_actions<sp/>==<sp/>move_cube.episode_length</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>actions<sp/>in<sp/>log<sp/>does<sp/>not<sp/>match<sp/>with<sp/>expected<sp/>episode<sp/>length.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>accumulated_reward<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>logged_action<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>log[</highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>=<sp/>platform.Action()</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action.torque<sp/>=<sp/>np.array(logged_action[</highlight><highlight class="stringliteral">&quot;torque&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action.position<sp/>=<sp/>np.array(logged_action[</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action.position_kp<sp/>=<sp/>np.array(logged_action[</highlight><highlight class="stringliteral">&quot;position_kp&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action.position_kd<sp/>=<sp/>np.array(logged_action[</highlight><highlight class="stringliteral">&quot;position_kd&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>platform.append_desired_action(action)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube_pose<sp/>=<sp/>platform.get_object_pose(t)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reward<sp/>=<sp/>-move_cube.evaluate_state(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose,<sp/>cube_pose,<sp/>args.difficulty</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulated_reward<sp/>+=<sp/>reward</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>logged_action[</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">]<sp/>==<sp/>t</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>cube_pose<sp/>=<sp/>platform.get_object_pose(t)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>final_pose<sp/>=<sp/>log[</highlight><highlight class="stringliteral">&quot;final_object_pose&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Accumulated<sp/>Reward:&quot;</highlight><highlight class="normal">,<sp/>accumulated_reward)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>verify<sp/>that<sp/>actual<sp/>and<sp/>logged<sp/>final<sp/>object<sp/>pose<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.testing.assert_array_almost_equal(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube_pose.position,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_pose[</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimal=3,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err_msg=(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Recorded<sp/>object<sp/>position<sp/>does<sp/>not<sp/>match<sp/>with<sp/>the<sp/>one&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>achieved<sp/>by<sp/>the<sp/>replay&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.testing.assert_array_almost_equal(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube_pose.orientation,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_pose[</highlight><highlight class="stringliteral">&quot;orientation&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimal=3,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err_msg=(</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Recorded<sp/>object<sp/>orientation<sp/>does<sp/>not<sp/>match<sp/>with<sp/>the<sp/>one&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>achieved<sp/>by<sp/>the<sp/>replay&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AssertionError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Failed.&quot;</highlight><highlight class="normal">,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(e,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(1)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Passed.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>main()</highlight></codeline>
    </programlisting>
    <location file="scripts/replay_action_log.py"/>
  </compounddef>
</doxygen>
