<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="scripts_2evaluate__policy_8py" kind="file" language="Python">
    <compoundname>evaluate_policy.py</compoundname>
    <innerclass refid="classevaluate__policy_1_1RandomPolicy" prot="public">evaluate_policy::RandomPolicy</innerclass>
    <innernamespace refid="namespaceevaluate__policy">evaluate_policy</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/env<sp/>python3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Example<sp/>evaluation<sp/>script<sp/>to<sp/>evaluate<sp/>a<sp/>policy.</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">This<sp/>is<sp/>an<sp/>example<sp/>evaluation<sp/>script<sp/>for<sp/>evaluating<sp/>a<sp/>&quot;RandomPolicy&quot;.<sp/><sp/>Use<sp/>this</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">as<sp/>a<sp/>base<sp/>for<sp/>your<sp/>own<sp/>script<sp/>to<sp/>evaluate<sp/>your<sp/>policy.<sp/><sp/>All<sp/>you<sp/>need<sp/>to<sp/>do<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">to<sp/>replace<sp/>the<sp/>`RandomPolicy`<sp/>and<sp/>potentially<sp/>the<sp/>Gym<sp/>environment<sp/>with<sp/>your<sp/>own</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">ones<sp/>(see<sp/>the<sp/>TODOs<sp/>in<sp/>the<sp/>code<sp/>below).</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">This<sp/>script<sp/>will<sp/>be<sp/>executed<sp/>in<sp/>an<sp/>automated<sp/>procedure.<sp/><sp/>For<sp/>this<sp/>to<sp/>work,<sp/>make</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">sure<sp/>you<sp/>do<sp/>not<sp/>change<sp/>the<sp/>overall<sp/>structure<sp/>of<sp/>the<sp/>script!</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">This<sp/>script<sp/>expects<sp/>the<sp/>following<sp/>arguments<sp/>in<sp/>the<sp/>given<sp/>order:</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/>-<sp/>Difficulty<sp/>level<sp/>(needed<sp/>for<sp/>reward<sp/>computation)</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"><sp/>-<sp/>initial<sp/>pose<sp/>of<sp/>the<sp/>cube<sp/>(as<sp/>JSON<sp/>string)</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/>-<sp/>goal<sp/>pose<sp/>of<sp/>the<sp/>cube<sp/>(as<sp/>JSON<sp/>string)</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/>-<sp/>file<sp/>to<sp/>which<sp/>the<sp/>action<sp/>log<sp/>is<sp/>written</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">It<sp/>is<sp/>then<sp/>expected<sp/>to<sp/>initialize<sp/>the<sp/>environment<sp/>with<sp/>the<sp/>given<sp/>initial<sp/>pose</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">and<sp/>execute<sp/>exactly<sp/>one<sp/>episode<sp/>with<sp/>the<sp/>policy<sp/>that<sp/>is<sp/>to<sp/>be<sp/>evaluated.</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">When<sp/>finished,<sp/>the<sp/>action<sp/>log,<sp/>which<sp/>is<sp/>created<sp/>by<sp/>the<sp/>TriFingerPlatform<sp/>class,</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">is<sp/>written<sp/>to<sp/>the<sp/>specified<sp/>file.<sp/><sp/>This<sp/>log<sp/>file<sp/>is<sp/>crucial<sp/>as<sp/>it<sp/>is<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">evaluate<sp/>the<sp/>actual<sp/>performance<sp/>of<sp/>the<sp/>policy.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>gym</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacetrifinger__simulation_1_1gym__wrapper_1_1envs" kindref="compound">trifinger_simulation.gym_wrapper.envs</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cube_env</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacetrifinger__simulation_1_1tasks" kindref="compound">trifinger_simulation.tasks</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>move_cube</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RandomPolicy:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Dummy<sp/>policy<sp/>which<sp/>uses<sp/>random<sp/>actions.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>action_space):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.action_space<sp/>=<sp/>action_space</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">predict(self,<sp/>observation):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.action_space.sample()</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">main():</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difficulty<sp/>=<sp/>int(sys.argv[1])</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_pose_json<sp/>=<sp/>sys.argv[2]</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_pose_json<sp/>=<sp/>sys.argv[3]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_file<sp/>=<sp/>sys.argv[4]</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IndexError:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>number<sp/>of<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Usage:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tevaluate_policy.py<sp/>&lt;difficulty_level&gt;<sp/>&lt;initial_pose&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;goal_pose&gt;<sp/>&lt;output_file&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(1)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>poses<sp/>are<sp/>passes<sp/>as<sp/>JSON<sp/>strings,<sp/>so<sp/>they<sp/>need<sp/>to<sp/>be<sp/>converted<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_pose<sp/>=<sp/>move_cube.Pose.from_json(initial_pose_json)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>goal_pose<sp/>=<sp/>move_cube.Pose.from_json(goal_pose_json)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>create<sp/>a<sp/>FixedInitializer<sp/>with<sp/>the<sp/>given<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>initializer<sp/>=<sp/>cube_env.FixedInitializer(</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difficulty,<sp/>initial_pose,<sp/>goal_pose</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Replace<sp/>with<sp/>your<sp/>environment<sp/>if<sp/>you<sp/>used<sp/>a<sp/>custom<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>env<sp/>=<sp/>gym.make(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;trifinger_simulation.gym_wrapper:real_robot_challenge_phase_1-v1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initializer=initializer,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_type=cube_env.ActionType.POSITION,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visualization=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Replace<sp/>this<sp/>with<sp/>your<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note:<sp/>You<sp/>may<sp/>also<sp/>use<sp/>a<sp/>different<sp/>policy<sp/>for<sp/>each<sp/>difficulty<sp/>level<sp/>(difficulty)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>policy<sp/>=<sp/>RandomPolicy(env.action_space)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Execute<sp/>one<sp/>episode.<sp/><sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>number<sp/>of<sp/>simulation<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>matches<sp/>with<sp/>the<sp/>episode<sp/>length<sp/>of<sp/>the<sp/>task.<sp/><sp/>When<sp/>using<sp/>the<sp/>default<sp/>Gym</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>environment,<sp/>this<sp/>is<sp/>the<sp/>case<sp/>when<sp/>looping<sp/>until<sp/>is_done<sp/>==<sp/>True.<sp/><sp/>Make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sure<sp/>to<sp/>adjust<sp/>this<sp/>in<sp/>case<sp/>your<sp/>custom<sp/>environment<sp/>behaves<sp/>differently!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>is_done<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>observation<sp/>=<sp/>env.reset()</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>accumulated_reward<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>is_done:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>=<sp/>policy.predict(observation)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>observation,<sp/>reward,<sp/>is_done,<sp/>info<sp/>=<sp/>env.step(action)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulated_reward<sp/>+=<sp/>reward</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Accumulated<sp/>reward:<sp/>{}&quot;</highlight><highlight class="normal">.format(accumulated_reward))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>the<sp/>log<sp/>for<sp/>evaluation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>env.platform.store_action_log(output_file)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>main()</highlight></codeline>
    </programlisting>
    <location file="scripts/evaluate_policy.py"/>
  </compounddef>
</doxygen>
